{
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "name": "dialogflow",
  "batchPath": "batch",
  "canonicalName": "Dialogflow",
  "version_module": true,
  "title": "Dialogflow API",
  "rootUrl": "https://dialogflow.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "description": "Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).",
  "discoveryVersion": "v1",
  "version": "v3",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        },
        "https://www.googleapis.com/auth/dialogflow": {
          "description": "View, manage and query your Dialogflow agents"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "basePath": "",
  "mtlsRootUrl": "https://dialogflow.mtls.googleapis.com/",
  "revision": "20210412",
  "documentationLink": "https://cloud.google.com/dialogflow/",
  "servicePath": "",
  "parameters": {
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    }
  },
  "baseUrl": "https://dialogflow.googleapis.com/",
  "ownerDomain": "google.com",
  "id": "dialogflow:v3",
  "protocol": "rest",
  "schemas": {
    "GoogleCloudDialogflowCxV3AgentValidationResult": {
      "description": "The response message for Agents.GetAgentValidationResult.",
      "id": "GoogleCloudDialogflowCxV3AgentValidationResult",
      "type": "object",
      "properties": {
        "name": {
          "description": "The unique identifier of the agent validation result. Format: `projects//locations//agents//validationResult`.",
          "type": "string"
        },
        "flowValidationResults": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FlowValidationResult"
          },
          "description": "Contains all flow validation results."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction": {
      "description": "Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ConversationTurn": {
      "description": "One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.",
      "id": "GoogleCloudDialogflowCxV3ConversationTurn",
      "properties": {
        "userInput": {
          "description": "The user input.",
          "$ref": "GoogleCloudDialogflowCxV3ConversationTurnUserInput"
        },
        "virtualAgentOutput": {
          "$ref": "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput",
          "description": "The virtual agent output."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText": {
      "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
      "type": "object",
      "properties": {
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean",
          "readOnly": true
        },
        "text": {
          "type": "string",
          "description": "The raw text to be synthesized."
        },
        "ssml": {
          "description": "The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText"
    },
    "GoogleCloudDialogflowCxV3ImportTestCasesMetadata": {
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors for failed test cases.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestCaseError"
          }
        }
      },
      "description": "Metadata returned for the TestCases.ImportTestCases long running operation.",
      "id": "GoogleCloudDialogflowCxV3ImportTestCasesMetadata",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessage": {
      "properties": {
        "suggestions": {
          "description": "Displays suggestion chips for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSuggestions"
        },
        "telephonySynthesizeSpeech": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech",
          "description": "Synthesizes speech in Telephony Gateway."
        },
        "quickReplies": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies",
          "description": "Displays quick replies."
        },
        "telephonyPlayAudio": {
          "description": "Plays audio from a file in Telephony Gateway.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio"
        },
        "listSelect": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageListSelect",
          "description": "Displays a list card for Actions on Google."
        },
        "basicCard": {
          "description": "Displays a basic card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCard"
        },
        "mediaContent": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageMediaContent",
          "description": "The media content card for Actions on Google."
        },
        "telephonyTransferCall": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall",
          "description": "Transfers the call in Telephony Gateway."
        },
        "linkOutSuggestion": {
          "description": "Displays a link out suggestion chip for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion"
        },
        "text": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageText",
          "description": "Returns a text response."
        },
        "tableCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCard",
          "description": "Table card for Actions on Google."
        },
        "rbmText": {
          "description": "Rich Business Messaging (RBM) text response. RBM allows businesses to send enriched and branded versions of SMS. See https://jibe.google.com/business-messaging.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmText"
        },
        "browseCarouselCard": {
          "description": "Browse carousel card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard"
        },
        "simpleResponses": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses",
          "description": "Returns a voice or text-only response for Actions on Google."
        },
        "payload": {
          "description": "A custom platform-specific response.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "rbmCarouselRichCard": {
          "description": "Rich Business Messaging (RBM) carousel rich card response.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard"
        },
        "carouselSelect": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect",
          "description": "Displays a carousel card for Actions on Google."
        },
        "card": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCard",
          "description": "Displays a card."
        },
        "image": {
          "description": "Displays an image.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "rbmStandaloneRichCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard",
          "description": "Standalone Rich Business Messaging (RBM) rich card response."
        },
        "platform": {
          "description": "Optional. The platform that this message is intended for.",
          "enumDescriptions": [
            "Not specified.",
            "Facebook.",
            "Slack.",
            "Telegram.",
            "Kik.",
            "Skype.",
            "Line.",
            "Viber.",
            "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
            "Telephony Gateway.",
            "Google Hangouts."
          ],
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "FACEBOOK",
            "SLACK",
            "TELEGRAM",
            "KIK",
            "SKYPE",
            "LINE",
            "VIBER",
            "ACTIONS_ON_GOOGLE",
            "TELEPHONY",
            "GOOGLE_HANGOUTS"
          ],
          "type": "string"
        }
      },
      "description": "Corresponds to the `Response` field in the Dialogflow console.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessage",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1AnnotatedMessagePart": {
      "id": "GoogleCloudDialogflowV2beta1AnnotatedMessagePart",
      "properties": {
        "formattedValue": {
          "type": "any",
          "description": "Optional. The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { \"amount\": 5, \"currency\": \"USD\" } "
        },
        "entityType": {
          "description": "Optional. The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.",
          "type": "string"
        },
        "text": {
          "description": "Required. A part of a message possibly annotated with an entity.",
          "type": "string"
        }
      },
      "description": "Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1ArticleAnswer": {
      "properties": {
        "title": {
          "type": "string",
          "description": "The article title."
        },
        "snippets": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. Article snippets."
        },
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "The article URI."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "type": "object"
        }
      },
      "type": "object",
      "description": "Represents article answer.",
      "id": "GoogleCloudDialogflowV2beta1ArticleAnswer"
    },
    "GoogleCloudDialogflowV2IntentMessage": {
      "id": "GoogleCloudDialogflowV2IntentMessage",
      "description": "A rich response message. Corresponds to the intent `Response` field in the Dialogflow console. For more information, see [Rich response messages](https://cloud.google.com/dialogflow/docs/intents-rich-messages).",
      "type": "object",
      "properties": {
        "card": {
          "description": "The card response.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageCard"
        },
        "mediaContent": {
          "description": "The media content card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageMediaContent"
        },
        "basicCard": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCard",
          "description": "The basic card response for Actions on Google."
        },
        "platform": {
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "FACEBOOK",
            "SLACK",
            "TELEGRAM",
            "KIK",
            "SKYPE",
            "LINE",
            "VIBER",
            "ACTIONS_ON_GOOGLE",
            "GOOGLE_HANGOUTS"
          ],
          "description": "Optional. The platform that this message is intended for.",
          "enumDescriptions": [
            "Default platform.",
            "Facebook.",
            "Slack.",
            "Telegram.",
            "Kik.",
            "Skype.",
            "Line.",
            "Viber.",
            "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
            "Google Hangouts."
          ],
          "type": "string"
        },
        "listSelect": {
          "description": "The list card response for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageListSelect"
        },
        "suggestions": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageSuggestions",
          "description": "The suggestion chips for Actions on Google."
        },
        "carouselSelect": {
          "description": "The carousel card response for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageCarouselSelect"
        },
        "browseCarouselCard": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard",
          "description": "Browse carousel card for Actions on Google."
        },
        "simpleResponses": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageSimpleResponses",
          "description": "The voice and text-only responses for Actions on Google."
        },
        "quickReplies": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageQuickReplies",
          "description": "The quick replies response."
        },
        "tableCard": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageTableCard",
          "description": "Table card for Actions on Google."
        },
        "image": {
          "description": "The image response.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "payload": {
          "description": "A custom platform-specific response.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "linkOutSuggestion": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion",
          "description": "The link out suggestion chip for Actions on Google."
        },
        "text": {
          "description": "The text response.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageText"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue": {
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue",
      "description": "Represents a value for an intent parameter.",
      "properties": {
        "originalValue": {
          "description": "Always present. Original text value extracted from user utterance.",
          "type": "string"
        },
        "resolvedValue": {
          "type": "any",
          "description": "Always present. Structured value for the parameter extracted from user utterance."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse": {
      "properties": {
        "content": {
          "format": "byte",
          "description": "Uncompressed raw byte content for test cases.",
          "type": "string"
        },
        "gcsUri": {
          "description": "The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse",
      "description": "The response message for TestCases.ExportTestCases."
    },
    "GoogleCloudDialogflowV2WebhookRequest": {
      "properties": {
        "responseId": {
          "description": "The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`.",
          "type": "string"
        },
        "session": {
          "type": "string",
          "description": "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`."
        },
        "queryResult": {
          "description": "The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.",
          "$ref": "GoogleCloudDialogflowV2QueryResult"
        },
        "originalDetectIntentRequest": {
          "description": "Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call.",
          "$ref": "GoogleCloudDialogflowV2OriginalDetectIntentRequest"
        }
      },
      "description": "The request message for a webhook call.",
      "id": "GoogleCloudDialogflowV2WebhookRequest",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ValidateAgentRequest": {
      "id": "GoogleCloudDialogflowCxV3ValidateAgentRequest",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "If not specified, the agent's default language is used.",
          "type": "string"
        }
      },
      "description": "The request message for Agents.ValidateAgent."
    },
    "GoogleCloudDialogflowCxV3Intent": {
      "id": "GoogleCloudDialogflowCxV3Intent",
      "description": "An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.",
      "properties": {
        "description": {
          "description": "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.",
          "type": "string"
        },
        "isFallback": {
          "type": "boolean",
          "description": "Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the intent, unique within the agent."
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentParameter"
          },
          "description": "The collection of parameters associated with the intent."
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys.\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys.head * sys.contextual The above labels do not require value. \"sys.head\" means the intent is a head intent. \"sys.contextual\" means the intent is a contextual intent.",
          "type": "object"
        },
        "trainingPhrases": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentTrainingPhrase"
          },
          "description": "The collection of training phrases the agent is trained on to identify the intent."
        },
        "name": {
          "description": "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "description": "The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3CreateVersionOperationMetadata": {
      "properties": {
        "version": {
          "description": "Name of the created version. Format: `projects//locations//agents//flows//versions/`.",
          "type": "string"
        }
      },
      "description": "Metadata associated with the long running operation for Versions.CreateVersion.",
      "id": "GoogleCloudDialogflowCxV3CreateVersionOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3MatchIntentResponse": {
      "id": "GoogleCloudDialogflowCxV3MatchIntentResponse",
      "properties": {
        "transcript": {
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio.",
          "type": "string"
        },
        "triggerIntent": {
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "triggerEvent": {
          "description": "If an event was provided as input, this field will contain a copy of the event name.",
          "type": "string"
        },
        "currentPage": {
          "description": "The current Page. Some, not all fields are filled in this message, including but not limited to `name` and `display_name`.",
          "$ref": "GoogleCloudDialogflowCxV3Page"
        },
        "matches": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3Match"
          },
          "description": "Match results, if more than one, ordered descendingly by the confidence we have that the particular intent matches the query.",
          "type": "array"
        },
        "text": {
          "description": "If natural language text was provided as input, this field will contain a copy of the text.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response of MatchIntent."
    },
    "GoogleCloudDialogflowCxV3beta1TestCaseResult": {
      "type": "object",
      "properties": {
        "conversationTurns": {
          "description": "The conversation turns uttered during the test case replay in chronological order.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurn"
          },
          "type": "array"
        },
        "testTime": {
          "type": "string",
          "description": "The time that the test was run.",
          "format": "google-datetime"
        },
        "testResult": {
          "description": "Whether the test case passed in the agent environment.",
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "The test passed.",
            "The test did not pass."
          ],
          "enum": [
            "TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ],
          "type": "string"
        },
        "environment": {
          "description": "Environment where the test was run. If not set, it indicates the draft environment.",
          "type": "string"
        },
        "name": {
          "description": "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.",
          "type": "string"
        }
      },
      "description": "Represents a result from running a test case in an agent environment.",
      "id": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
    },
    "GoogleCloudDialogflowV2Intent": {
      "type": "object",
      "description": "An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).",
      "id": "GoogleCloudDialogflowV2Intent",
      "properties": {
        "followupIntentInfo": {
          "description": "Read-only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentFollowupIntentInfo"
          }
        },
        "outputContexts": {
          "type": "array",
          "description": "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          }
        },
        "isFallback": {
          "type": "boolean",
          "description": "Optional. Indicates whether this is a fallback intent."
        },
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentParameter"
          },
          "type": "array",
          "description": "Optional. The collection of parameters associated with the intent."
        },
        "endInteraction": {
          "type": "boolean",
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false."
        },
        "resetContexts": {
          "type": "boolean",
          "description": "Optional. Indicates whether to delete all contexts in the current session when this intent is matched."
        },
        "displayName": {
          "description": "Required. The name of this intent.",
          "type": "string"
        },
        "defaultResponsePlatforms": {
          "description": "Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).",
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Default platform.",
              "Facebook.",
              "Slack.",
              "Telegram.",
              "Kik.",
              "Skype.",
              "Line.",
              "Viber.",
              "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
              "Google Hangouts."
            ],
            "type": "string",
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "FACEBOOK",
              "SLACK",
              "TELEGRAM",
              "KIK",
              "SKYPE",
              "LINE",
              "VIBER",
              "ACTIONS_ON_GOOGLE",
              "GOOGLE_HANGOUTS"
            ]
          }
        },
        "mlDisabled": {
          "description": "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.",
          "type": "boolean"
        },
        "liveAgentHandoff": {
          "type": "boolean",
          "description": "Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false."
        },
        "events": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters."
        },
        "priority": {
          "description": "Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "format": "int32",
          "type": "integer"
        },
        "trainingPhrases": {
          "description": "Optional. The collection of examples that the agent is trained on.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentTrainingPhrase"
          },
          "type": "array"
        },
        "action": {
          "type": "string",
          "description": "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
        },
        "webhookState": {
          "enum": [
            "WEBHOOK_STATE_UNSPECIFIED",
            "WEBHOOK_STATE_ENABLED",
            "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
          ],
          "description": "Optional. Indicates whether webhooks are enabled for the intent.",
          "enumDescriptions": [
            "Webhook is disabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent. Also, each slot filling prompt is forwarded to the webhook."
          ],
          "type": "string"
        },
        "rootFollowupIntentName": {
          "description": "Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. We populate this field only in the output. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "parentFollowupIntentName": {
          "description": "Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "messages": {
          "type": "array",
          "description": "Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          }
        },
        "inputContextNames": {
          "description": "Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart": {
      "description": "Represents a part of a training phrase.",
      "type": "object",
      "properties": {
        "parameterId": {
          "type": "string",
          "description": "The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase."
        },
        "text": {
          "description": "Required. The text for this part.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart"
    },
    "GoogleCloudDialogflowV2beta1SessionEntityType": {
      "description": "A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).",
      "id": "GoogleCloudDialogflowV2beta1SessionEntityType",
      "properties": {
        "entityOverrideMode": {
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition.",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ],
          "type": "string",
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ]
        },
        "name": {
          "description": "Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
          "type": "string"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityTypeEntity"
          },
          "description": "Required. The collection of entities associated with this session entity type."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageSuggestions": {
      "properties": {
        "suggestions": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageSuggestion"
          },
          "type": "array",
          "description": "Required. The list of suggested replies."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageSuggestions",
      "description": "The collection of suggestions."
    },
    "GoogleCloudDialogflowCxV3EntityType": {
      "properties": {
        "redact": {
          "description": "Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.",
          "type": "boolean"
        },
        "enableFuzzyExtraction": {
          "description": "Enables fuzzy entity extraction during classification.",
          "type": "boolean"
        },
        "kind": {
          "description": "Required. Indicates the kind of entity type.",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a canonical value.",
            "List entity types contain a set of entries that do not map to canonical values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "type": "string",
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ]
        },
        "excludedPhrases": {
          "type": "array",
          "description": "Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase"
          }
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the entity type, unique within the agent."
        },
        "autoExpansionMode": {
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ],
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ],
          "description": "Indicates whether the entity type can be automatically expanded.",
          "type": "string"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EntityTypeEntity"
          },
          "description": "The collection of entity entries associated with the entity type."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`."
        }
      },
      "type": "object",
      "description": "Entities are extracted from user input and represent parameters that are meaningful to your application. For example, a date range, a proper name such as a geographic location or landmark, and so on. Entities represent actionable data for your application. When you define an entity, you can also include synonyms that all map to that entity. For example, \"soft drink\", \"soda\", \"pop\", and so on. There are three types of entities: * **System** - entities that are defined by the Dialogflow API for common data types such as date, time, currency, and so on. A system entity is represented by the `EntityType` type. * **Custom** - entities that are defined by you that represent actionable data that is meaningful to your application. For example, you could define a `pizza.sauce` entity for red or white pizza sauce, a `pizza.cheese` entity for the different types of cheese on a pizza, a `pizza.topping` entity for different toppings, and so on. A custom entity is represented by the `EntityType` type. * **User** - entities that are built for an individual user such as favorites, preferences, playlists, and so on. A user entity is represented by the SessionEntityType type. For more information about entity types, see the [Dialogflow documentation](https://cloud.google.com/dialogflow/docs/entities-overview).",
      "id": "GoogleCloudDialogflowCxV3EntityType"
    },
    "GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse": {
      "id": "GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse",
      "type": "object",
      "description": "The response message for EntityTypes.BatchUpdateEntityTypes.",
      "properties": {
        "entityTypes": {
          "description": "The collection of updated or created entity types.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityType"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3SpeechToTextSettings": {
      "id": "GoogleCloudDialogflowCxV3SpeechToTextSettings",
      "type": "object",
      "description": "Settings related to speech recognition.",
      "properties": {
        "enableSpeechAdaptation": {
          "type": "boolean",
          "description": "Whether to use speech adaptation for speech recognition."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest": {
      "description": "Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.",
      "id": "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers."
        },
        "payload": {
          "description": "Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { \"telephony\": { \"caller_id\": \"+18558363987\" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "version": {
          "description": "Optional. The version of the protocol used for this request. This field is AoG-specific.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1FormParameter": {
      "id": "GoogleCloudDialogflowCxV3beta1FormParameter",
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "any",
          "description": "The default value of an optional parameter. If the parameter is required, the default value will be ignored."
        },
        "required": {
          "description": "Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.",
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
        },
        "fillBehavior": {
          "description": "Required. Defines fill behavior for the parameter.",
          "$ref": "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior"
        },
        "redact": {
          "type": "boolean",
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
        },
        "isList": {
          "type": "boolean",
          "description": "Indicates whether the parameter represents a list of values."
        },
        "displayName": {
          "description": "Required. The human-readable name of the parameter, unique within the form.",
          "type": "string"
        }
      },
      "description": "Represents a form parameter."
    },
    "GoogleCloudDialogflowCxV3ExportAgentRequest": {
      "id": "GoogleCloudDialogflowCxV3ExportAgentRequest",
      "description": "The request message for Agents.ExportAgent.",
      "properties": {
        "agentUri": {
          "type": "string",
          "description": "Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the agent to. The format of this URI must be `gs:///`. If left unspecified, the serialized agent is returned inline."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1TestRunDifference": {
      "id": "GoogleCloudDialogflowCxV3beta1TestRunDifference",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Should never be used.",
            "The intent.",
            "The page.",
            "The parameters.",
            "The message utterance."
          ],
          "type": "string",
          "description": "The type of diff.",
          "enum": [
            "DIFF_TYPE_UNSPECIFIED",
            "INTENT",
            "PAGE",
            "PARAMETERS",
            "UTTERANCE"
          ]
        },
        "description": {
          "type": "string",
          "description": "A description of the diff, showing the actual output vs expected output."
        }
      },
      "description": "The description of differences between original and replayed agent output.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageColumnProperties": {
      "description": "Column properties for TableCard.",
      "id": "GoogleCloudDialogflowV2IntentMessageColumnProperties",
      "type": "object",
      "properties": {
        "horizontalAlignment": {
          "enum": [
            "HORIZONTAL_ALIGNMENT_UNSPECIFIED",
            "LEADING",
            "CENTER",
            "TRAILING"
          ],
          "description": "Optional. Defines text alignment for all cells in this column.",
          "enumDescriptions": [
            "Text is aligned to the leading edge of the column.",
            "Text is aligned to the leading edge of the column.",
            "Text is centered in the column.",
            "Text is aligned to the trailing edge of the column."
          ],
          "type": "string"
        },
        "header": {
          "description": "Required. Column heading.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3TestCaseError": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3TestCaseError",
      "description": "Error info for importing a test.",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status associated with the test case."
        },
        "testCase": {
          "description": "The test case.",
          "$ref": "GoogleCloudDialogflowCxV3TestCase"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1Form": {
      "id": "GoogleCloudDialogflowCxV3beta1Form",
      "properties": {
        "parameters": {
          "description": "Parameters to collect from the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FormParameter"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session."
    },
    "GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval": {
      "type": "object",
      "description": "A confidence interval is a range of possible values for the experiment objective you are trying to measure.",
      "id": "GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval",
      "properties": {
        "lowerBound": {
          "type": "number",
          "description": "Lower bound of the interval.",
          "format": "double"
        },
        "ratio": {
          "type": "number",
          "description": "The percent change between an experiment metric's value and the value for its control.",
          "format": "double"
        },
        "upperBound": {
          "description": "Upper bound of the interval.",
          "type": "number",
          "format": "double"
        },
        "confidenceLevel": {
          "type": "number",
          "format": "double",
          "description": "The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton": {
      "properties": {
        "openUriAction": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction",
          "description": "Required. Action to take when a user taps on the button."
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the button."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton",
      "description": "The button object that appears at the bottom of a card.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3FlowValidationResult": {
      "description": "The response message for Flows.GetFlowValidationResult.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3FlowValidationResult",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Last time the flow was validated.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the flow validation result. Format: `projects//locations//agents//flows//validationResult`."
        },
        "validationMessages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ValidationMessage"
          },
          "description": "Contains all validation messages."
        }
      }
    },
    "GoogleCloudDialogflowCxV3FormParameter": {
      "properties": {
        "fillBehavior": {
          "$ref": "GoogleCloudDialogflowCxV3FormParameterFillBehavior",
          "description": "Required. Defines fill behavior for the parameter."
        },
        "redact": {
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.",
          "type": "boolean"
        },
        "isList": {
          "description": "Indicates whether the parameter represents a list of values.",
          "type": "boolean"
        },
        "defaultValue": {
          "description": "The default value of an optional parameter. If the parameter is required, the default value will be ignored.",
          "type": "any"
        },
        "entityType": {
          "type": "string",
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the parameter, unique within the form."
        },
        "required": {
          "type": "boolean",
          "description": "Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes."
        }
      },
      "description": "Represents a form parameter.",
      "id": "GoogleCloudDialogflowCxV3FormParameter",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase",
      "description": "Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.",
      "properties": {
        "condition": {
          "description": "The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).",
          "type": "string"
        },
        "caseContent": {
          "description": "A list of case content.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject": {
      "description": "Response media object for media content card.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject",
      "type": "object",
      "properties": {
        "largeImage": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. Image to display above media content."
        },
        "contentUrl": {
          "description": "Required. Url where the media is stored.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of media card."
        },
        "name": {
          "description": "Required. Name of media card.",
          "type": "string"
        },
        "icon": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. Icon to display above media content."
        }
      }
    },
    "GoogleCloudDialogflowCxV3QueryParameters": {
      "type": "object",
      "description": "Represents the parameters of a conversational query.",
      "id": "GoogleCloudDialogflowCxV3QueryParameters",
      "properties": {
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "This field can be used to pass custom data into the webhook associated with the agent. Arbitrary JSON objects are supported."
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in the agent is used."
        },
        "sessionEntityTypes": {
          "description": "Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
          }
        },
        "analyzeQueryTextSentiment": {
          "type": "boolean",
          "description": "Configures whether sentiment analysis should be performed. If not provided, sentiment analysis is not performed."
        },
        "disableWebhook": {
          "description": "Whether to disable webhook calls for this request.",
          "type": "boolean"
        },
        "webhookHeaders": {
          "description": "This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through Dialogflow web console. The headers defined within this field will overwrite the headers configured through Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "currentPage": {
          "description": "The unique identifier of the page to override the current page in the session. Format: `projects//locations//agents//pages/`. If `current_page` is specified, the previous state of the session will be ignored by Dialogflow, including the previous page and the previous session parameters. In most cases, current_page and parameters should be configured together to direct a session to a specific state.",
          "type": "string"
        },
        "geoLocation": {
          "description": "The geo location of this conversational query.",
          "$ref": "GoogleTypeLatLng"
        },
        "parameters": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Additional parameters to be put into session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value"
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText": {
      "properties": {
        "allowPlaybackInterruption": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request."
        },
        "ssml": {
          "description": "The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "The raw text to be synthesized."
        }
      },
      "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ListVersionsResponse": {
      "type": "object",
      "description": "The response message for Versions.ListVersions.",
      "id": "GoogleCloudDialogflowCxV3ListVersionsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3Version"
          },
          "description": "A list of versions. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResourceName": {
      "description": "Resource name and display name.",
      "id": "GoogleCloudDialogflowCxV3ResourceName",
      "properties": {
        "name": {
          "description": "Name.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Display name."
        }
      },
      "type": "object"
    },
    "GoogleTypeLatLng": {
      "type": "object",
      "id": "GoogleTypeLatLng",
      "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard. Values must be within normalized ranges.",
      "properties": {
        "longitude": {
          "format": "double",
          "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
          "type": "number"
        },
        "latitude": {
          "type": "number",
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
          "format": "double"
        }
      }
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent": {
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent",
      "type": "object",
      "description": "The list of messages or conditional cases to activate for this case.",
      "properties": {
        "additionalCases": {
          "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases",
          "description": "Additional cases to be evaluated."
        },
        "message": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessage",
          "description": "Returned message."
        }
      }
    },
    "GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata": {
      "description": "Metadata for CreateDocument operation.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
        }
      },
      "id": "GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3FulfillIntentResponse": {
      "id": "GoogleCloudDialogflowCxV3FulfillIntentResponse",
      "description": "Response of FulfillIntent",
      "properties": {
        "responseId": {
          "type": "string",
          "description": "Output only. The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues."
        },
        "queryResult": {
          "description": "The result of the conversational query.",
          "$ref": "GoogleCloudDialogflowCxV3QueryResult"
        },
        "outputAudio": {
          "format": "byte",
          "description": "The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.response_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content.",
          "type": "string"
        },
        "outputAudioConfig": {
          "$ref": "GoogleCloudDialogflowCxV3OutputAudioConfig",
          "description": "The config used by the speech synthesizer to generate the output audio."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse": {
      "properties": {
        "results": {
          "description": "The test case results. The detailed conversation turns are empty in this response.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
          }
        }
      },
      "description": "The response message for TestCases.BatchRunTestCases.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse"
    },
    "GoogleCloudDialogflowCxV3IntentTrainingPhrase": {
      "description": "Represents an example that the agent is trained on to identify the intent.",
      "id": "GoogleCloudDialogflowCxV3IntentTrainingPhrase",
      "type": "object",
      "properties": {
        "repeatCount": {
          "type": "integer",
          "description": "Indicates how many times this example was added to the intent.",
          "format": "int32"
        },
        "id": {
          "description": "Output only. The unique identifier of the training phrase.",
          "type": "string"
        },
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart"
          },
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases": {
      "properties": {
        "cases": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase"
          },
          "description": "A list of cascading if-else conditions.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases",
      "type": "object",
      "description": "A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored."
    },
    "GoogleCloudDialogflowCxV3beta1TransitionRoute": {
      "id": "GoogleCloudDialogflowCxV3beta1TransitionRoute",
      "description": "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.",
      "properties": {
        "intent": {
          "type": "string",
          "description": "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled."
        },
        "targetFlow": {
          "type": "string",
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`."
        },
        "targetPage": {
          "type": "string",
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
        },
        "condition": {
          "type": "string",
          "description": "The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled."
        },
        "triggerFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment",
          "description": "The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first."
        },
        "name": {
          "description": "Output only. The unique identifier of this transition route.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart": {
      "id": "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart",
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        },
        "parameterId": {
          "type": "string",
          "description": "The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase."
        }
      },
      "description": "Represents a part of a training phrase.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3EntityTypeEntity": {
      "description": "An **entity entry** for an associated entity type.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3EntityTypeEntity",
      "properties": {
        "synonyms": {
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "value": {
          "type": "string",
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A canonical value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
        }
      }
    },
    "GoogleCloudDialogflowCxV3TestError": {
      "description": "Error info for running a test.",
      "id": "GoogleCloudDialogflowCxV3TestError",
      "properties": {
        "testCase": {
          "type": "string",
          "description": "The test case resource name."
        },
        "testTime": {
          "format": "google-datetime",
          "description": "The timestamp when the test was completed.",
          "type": "string"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status associated with the test."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1EventInput": {
      "description": "Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\"Hello #welcome_event.name! What can I do for you today?\"`.",
      "properties": {
        "languageCode": {
          "description": "Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        },
        "parameters": {
          "description": "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the event."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1EventInput",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverage": {
      "type": "object",
      "properties": {
        "transitions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverageTransition"
          },
          "description": "The list of transition routes and coverage in the transition route group."
        },
        "routeGroup": {
          "$ref": "GoogleCloudDialogflowCxV3TransitionRouteGroup",
          "description": "Transition route group metadata. Only name and displayName will be set."
        },
        "coverageScore": {
          "description": "The percent of transition routes in the transition route group that are covered.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Coverage result message for one transition route group.",
      "id": "GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverage"
    },
    "GoogleCloudDialogflowCxV3TrainFlowRequest": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDialogflowCxV3TrainFlowRequest",
      "description": "The request message for Flows.TrainFlow."
    },
    "GoogleCloudDialogflowCxV3IntentCoverage": {
      "type": "object",
      "description": "Intent coverage represents the percentage of all possible intents in the agent that are triggered in any of a parent's test cases.",
      "properties": {
        "intents": {
          "type": "array",
          "description": "The list of Intents present in the agent",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentCoverageIntent"
          }
        },
        "coverageScore": {
          "format": "float",
          "type": "number",
          "description": "The percent of intents in the agent that are covered."
        }
      },
      "id": "GoogleCloudDialogflowCxV3IntentCoverage"
    },
    "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse": {
      "description": "The response message for Participants.SuggestSmartReplies.",
      "properties": {
        "contextSize": {
          "format": "int32",
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "type": "integer"
        },
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
        },
        "smartReplyAnswers": {
          "type": "array",
          "description": "Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in SmartReplyConfig.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SmartReplyAnswer"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3Experiment": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the experiment. Format: projects//locations//agents//environments//experiments/.."
        },
        "description": {
          "description": "The human-readable description of the experiment.",
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Start time of this experiment."
        },
        "state": {
          "enumDescriptions": [
            "State unspecified.",
            "The experiment is created but not started yet.",
            "The experiment is running.",
            "The experiment is done."
          ],
          "description": "The current state of the experiment. Transition triggered by Expriments.StartExperiment: PENDING-\u003eRUNNING. Transition triggered by Expriments.CancelExperiment: PENDING-\u003eCANCELLED or RUNNING-\u003eCANCELLED.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "DRAFT",
            "RUNNING",
            "DONE"
          ]
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Last update time of this experiment."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Creation time of this experiment.",
          "type": "string"
        },
        "variantsHistory": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3VariantsHistory"
          },
          "description": "The history of updates to the experiment variants."
        },
        "result": {
          "description": "Inference result of the experiment.",
          "$ref": "GoogleCloudDialogflowCxV3ExperimentResult"
        },
        "definition": {
          "description": "The definition of the experiment.",
          "$ref": "GoogleCloudDialogflowCxV3ExperimentDefinition"
        },
        "displayName": {
          "description": "Required. The human-readable name of the experiment (unique in an environment). Limit of 64 characters.",
          "type": "string"
        },
        "experimentLength": {
          "description": "Maximum number of days to run the experiment/rollout. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.",
          "type": "string",
          "format": "google-duration"
        },
        "endTime": {
          "type": "string",
          "description": "End time of this experiment.",
          "format": "google-datetime"
        }
      },
      "description": "Represents an experiment in an environment.",
      "id": "GoogleCloudDialogflowCxV3Experiment",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3BatchDeleteTestCasesRequest": {
      "properties": {
        "names": {
          "description": "Required. Format of test case names: `projects//locations/ /agents//testCases/`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3BatchDeleteTestCasesRequest",
      "type": "object",
      "description": "The request message for TestCases.BatchDeleteTestCases."
    },
    "GoogleCloudDialogflowCxV3ExportTestCasesResponse": {
      "description": "The response message for TestCases.ExportTestCases.",
      "properties": {
        "gcsUri": {
          "type": "string",
          "description": "The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest."
        },
        "content": {
          "type": "string",
          "description": "Uncompressed raw byte content for test cases.",
          "format": "byte"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ExportTestCasesResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent": {
      "type": "object",
      "description": "Rich Business Messaging (RBM) Card content",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent",
      "properties": {
        "suggestions": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          },
          "type": "array",
          "description": "Optional. List of suggestions to include in the card."
        },
        "media": {
          "description": "Optional. However at least one of the title, description or media must be set. Media (image, GIF or a video) to include in the card.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title of the card (at most 200 bytes). At least one of the title, description or media must be set."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the card (at most 2000 bytes). At least one of the title, description or media must be set."
        }
      }
    },
    "GoogleCloudDialogflowCxV3StopExperimentRequest": {
      "description": "The request message for Experiments.StopExperiment.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDialogflowCxV3StopExperimentRequest"
    },
    "GoogleCloudDialogflowV2IntentParameter": {
      "id": "GoogleCloudDialogflowV2IntentParameter",
      "properties": {
        "mandatory": {
          "description": "Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value.",
          "type": "boolean"
        },
        "defaultValue": {
          "type": "string",
          "description": "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`."
        },
        "name": {
          "description": "The unique identifier of this parameter.",
          "type": "string"
        },
        "prompts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter."
        },
        "isList": {
          "type": "boolean",
          "description": "Optional. Indicates whether the parameter represents a list of values."
        },
        "value": {
          "description": "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The name of the parameter.",
          "type": "string"
        },
        "entityTypeDisplayName": {
          "type": "string",
          "description": "Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided."
        }
      },
      "description": "Represents intent parameters.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3WebhookResponse": {
      "properties": {
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "fulfillmentResponse": {
          "$ref": "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse",
          "description": "The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user."
        },
        "pageInfo": {
          "$ref": "GoogleCloudDialogflowCxV3PageInfo",
          "description": "Information about page status. This field can be omitted by the webhook if it does not intend to modify page status."
        },
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "sessionInfo": {
          "$ref": "GoogleCloudDialogflowCxV3SessionInfo",
          "description": "Information about session status. This field can be omitted by the webhook if it does not intend to modify session status."
        },
        "payload": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Value to append directly to QueryResult.webhook_payloads."
        }
      },
      "id": "GoogleCloudDialogflowCxV3WebhookResponse",
      "type": "object",
      "description": "The response message for a webhook call."
    },
    "GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata": {
      "description": "Metadata for DeleteDocument operation.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageText": {
      "properties": {
        "text": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The collection of the agent's responses."
        }
      },
      "description": "The text response message.",
      "id": "GoogleCloudDialogflowV2IntentMessageText",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Message": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2Message",
      "description": "Represents a message posted into a conversation.",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
        },
        "messageAnnotation": {
          "description": "Output only. The annotation for the message.",
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowV2MessageAnnotation"
        },
        "participantRole": {
          "readOnly": true,
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ],
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ],
          "description": "Output only. The role of the participant.",
          "type": "string"
        },
        "participant": {
          "description": "Output only. The participant that sends this message.",
          "readOnly": true,
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time when the message was created.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "Required. The message content."
        }
      }
    },
    "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo": {
      "type": "object",
      "description": "Represents intent information communicated to the webhook.",
      "id": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Always present. The display name of the last matched intent."
        },
        "lastMatchedIntent": {
          "type": "string",
          "description": "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`."
        },
        "confidence": {
          "format": "float",
          "description": "The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        },
        "parameters": {
          "additionalProperties": {
            "$ref": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue"
          },
          "type": "object",
          "description": "Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion": {
      "type": "object",
      "properties": {
        "uri": {
          "description": "Required. The URI of the app or site to open when the user taps the suggestion chip.",
          "type": "string"
        },
        "destinationName": {
          "description": "Required. The name of the app or site this chip is linking to.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion",
      "description": "The suggestion chip message that allows the user to jump out to the app or website associated with this agent."
    },
    "GoogleCloudDialogflowCxV3ListSecuritySettingsResponse": {
      "properties": {
        "securitySettings": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3SecuritySettings"
          },
          "type": "array",
          "description": "The list of security settings."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ListSecuritySettingsResponse",
      "type": "object",
      "description": "The response message for SecuritySettings.ListSecuritySettings."
    },
    "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer": {
      "description": "An answer from Knowledge Connector.",
      "type": "object",
      "properties": {
        "matchConfidenceLevel": {
          "type": "string",
          "description": "The system's confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given `` pair may change without notice, as it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality of an answer.",
          "enum": [
            "MATCH_CONFIDENCE_LEVEL_UNSPECIFIED",
            "LOW",
            "MEDIUM",
            "HIGH"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Indicates that the confidence is low.",
            "Indicates our confidence is medium.",
            "Indicates our confidence is high."
          ]
        },
        "faqQuestion": {
          "description": "The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise.",
          "type": "string"
        },
        "matchConfidence": {
          "type": "number",
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the future. We recommend using `match_confidence_level` which should be generally more stable.",
          "format": "float"
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document that answers this conversational query."
        },
        "source": {
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties": {
      "description": "Column properties for TableCard.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties",
      "type": "object",
      "properties": {
        "header": {
          "description": "Required. Column heading.",
          "type": "string"
        },
        "horizontalAlignment": {
          "description": "Optional. Defines text alignment for all cells in this column.",
          "type": "string",
          "enum": [
            "HORIZONTAL_ALIGNMENT_UNSPECIFIED",
            "LEADING",
            "CENTER",
            "TRAILING"
          ],
          "enumDescriptions": [
            "Text is aligned to the leading edge of the column.",
            "Text is aligned to the leading edge of the column.",
            "Text is centered in the column.",
            "Text is aligned to the trailing edge of the column."
          ]
        }
      }
    },
    "GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata",
      "description": "Metadata for UpdateDocument operation.",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3TestCase": {
      "type": "object",
      "description": "Represents a test case.",
      "properties": {
        "notes": {
          "description": "Additional freeform notes about the test case. Limit of 400 characters.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."
        },
        "displayName": {
          "description": "Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.",
          "type": "string"
        },
        "lastTestResult": {
          "$ref": "GoogleCloudDialogflowCxV3TestCaseResult",
          "description": "The latest test result."
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with \"#\" and has a limit of 30 characters."
        },
        "testConfig": {
          "description": "Config for the test case.",
          "$ref": "GoogleCloudDialogflowCxV3TestConfig"
        },
        "testCaseConversationTurns": {
          "description": "The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ConversationTurn"
          },
          "type": "array"
        },
        "creationTime": {
          "description": "Output only. When the test was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudDialogflowCxV3TestCase"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageListSelect": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageListSelect",
      "type": "object",
      "properties": {
        "title": {
          "description": "Optional. The overall title of the list.",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem"
          },
          "type": "array",
          "description": "Required. List items."
        },
        "subtitle": {
          "description": "Optional. Subtitle of the list.",
          "type": "string"
        }
      },
      "description": "The card for presenting a list of options to select from."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio": {
      "type": "object",
      "description": "Specifies an audio clip to be played by the client as part of the response.",
      "properties": {
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean",
          "readOnly": true
        },
        "audioUri": {
          "type": "string",
          "description": "Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio"
    },
    "GoogleCloudDialogflowCxV3Form": {
      "properties": {
        "parameters": {
          "description": "Parameters to collect from the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FormParameter"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3Form",
      "type": "object",
      "description": "A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSuggestion": {
      "properties": {
        "title": {
          "description": "Required. The text shown the in the suggestion chip.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSuggestion",
      "description": "The suggestion chip message that the user can tap to quickly post a reply to the conversation.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1PageInfo": {
      "type": "object",
      "description": "Represents page information communicated to and from the webhook.",
      "id": "GoogleCloudDialogflowCxV3beta1PageInfo",
      "properties": {
        "formInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo",
          "description": "Optional for both WebhookRequest and WebhookResponse. Information about the form."
        },
        "currentPage": {
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3IntentParameter": {
      "id": "GoogleCloudDialogflowCxV3IntentParameter",
      "properties": {
        "redact": {
          "type": "boolean",
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
        },
        "isList": {
          "type": "boolean",
          "description": "Indicates whether the parameter represents a list of values."
        },
        "entityType": {
          "type": "string",
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts."
        }
      },
      "type": "object",
      "description": "Represents an intent parameter."
    },
    "GoogleCloudDialogflowCxV3ImportTestCasesResponse": {
      "description": "The response message for TestCases.ImportTestCases.",
      "id": "GoogleCloudDialogflowCxV3ImportTestCasesResponse",
      "type": "object",
      "properties": {
        "names": {
          "type": "array",
          "description": "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2beta1EntityType": {
      "type": "object",
      "properties": {
        "kind": {
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a reference value.",
            "List entity types contain a set of entries that do not map to reference values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ],
          "description": "Required. Indicates the kind of entity type.",
          "type": "string"
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityTypeEntity"
          },
          "type": "array",
          "description": "Optional. The collection of entity entries associated with the entity type."
        },
        "enableFuzzyExtraction": {
          "description": "Optional. Enables fuzzy entity extraction during classification.",
          "type": "boolean"
        },
        "autoExpansionMode": {
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ],
          "description": "Optional. Indicates whether the entity type can be automatically expanded.",
          "type": "string",
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of the entity type."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1EntityType",
      "description": "Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview)."
    },
    "GoogleCloudDialogflowV2beta1QueryResult": {
      "properties": {
        "sentimentAnalysisResult": {
          "$ref": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult",
          "description": "The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request."
        },
        "speechRecognitionConfidence": {
          "type": "number",
          "format": "float",
          "description": "The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult."
        },
        "diagnosticInfo": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors"
        },
        "languageCode": {
          "type": "string",
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes."
        },
        "fulfillmentText": {
          "type": "string",
          "description": "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred."
        },
        "action": {
          "type": "string",
          "description": "The action name from the matched intent."
        },
        "parameters": {
          "description": "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "queryText": {
          "type": "string",
          "description": "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input."
        },
        "outputContexts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          },
          "description": "The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query."
        },
        "webhookPayload": {
          "type": "object",
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "fulfillmentMessages": {
          "type": "array",
          "description": "The collection of rich messages to present to the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          }
        },
        "knowledgeAnswers": {
          "description": "The result from Knowledge Connector (if any), ordered by decreasing `KnowledgeAnswers.match_confidence`.",
          "$ref": "GoogleCloudDialogflowV2beta1KnowledgeAnswers"
        },
        "webhookSource": {
          "type": "string",
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response."
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowV2beta1Intent",
          "description": "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`."
        },
        "intentDetectionConfidence": {
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.",
          "format": "float",
          "type": "number"
        },
        "allRequiredParamsPresent": {
          "type": "boolean",
          "description": "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
        }
      },
      "type": "object",
      "description": "Represents the result of conversational query or event processing.",
      "id": "GoogleCloudDialogflowV2beta1QueryResult"
    },
    "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo": {
      "description": "Represents a single followup intent in the chain.",
      "properties": {
        "parentFollowupIntentName": {
          "type": "string",
          "description": "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`."
        },
        "followupIntentName": {
          "type": "string",
          "description": "The unique identifier of the followup intent. Format: `projects//agent/intents/`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo"
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem": {
      "description": "Browsing carousel tile",
      "properties": {
        "footer": {
          "description": "Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text.",
          "type": "string"
        },
        "openUriAction": {
          "description": "Required. Action to present to the user.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
        },
        "title": {
          "description": "Required. Title of the carousel item. Maximum of two lines of text.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the carousel item. Maximum of four lines of text.",
          "type": "string"
        },
        "image": {
          "description": "Optional. Hero image for the carousel item.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCard": {
      "type": "object",
      "properties": {
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. Image which should be displayed on the card."
        },
        "columnProperties": {
          "description": "Optional. Display properties for the columns in this table.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties"
          }
        },
        "subtitle": {
          "description": "Optional. Subtitle to the title.",
          "type": "string"
        },
        "buttons": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          },
          "type": "array",
          "description": "Optional. List of buttons for the card."
        },
        "title": {
          "description": "Required. Title of the card.",
          "type": "string"
        },
        "rows": {
          "description": "Optional. Rows in this table of data.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCard",
      "description": "Table card for Actions on Google."
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput": {
      "type": "object",
      "description": "The output from the virtual agent.",
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput",
      "properties": {
        "textResponses": {
          "description": "The text responses from the agent for the turn.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageText"
          }
        },
        "sessionParameters": {
          "type": "object",
          "description": "The session parameters available to the bot at this point.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "differences": {
          "type": "array",
          "description": "Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestRunDifference"
          }
        },
        "status": {
          "description": "Response error from the agent in the test result. If set, other output is empty.",
          "$ref": "GoogleRpcStatus"
        },
        "currentPage": {
          "description": "The Page on which the utterance was spoken. Only name and displayName will be set.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Page"
        },
        "diagnosticInfo": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Required. Input only. The diagnostic info output for the turn."
        },
        "triggeredIntent": {
          "description": "The Intent that triggered the response. Only name and displayName will be set.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Intent"
        }
      }
    },
    "GoogleCloudDialogflowCxV3QueryInput": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3QueryInput",
      "properties": {
        "audio": {
          "$ref": "GoogleCloudDialogflowCxV3AudioInput",
          "description": "The natural language speech audio to be processed."
        },
        "text": {
          "$ref": "GoogleCloudDialogflowCxV3TextInput",
          "description": "The natural language text to be processed."
        },
        "dtmf": {
          "$ref": "GoogleCloudDialogflowCxV3DtmfInput",
          "description": "The DTMF event to be handled."
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowCxV3IntentInput",
          "description": "The intent to be triggered."
        },
        "languageCode": {
          "description": "Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        },
        "event": {
          "description": "The event to be triggered.",
          "$ref": "GoogleCloudDialogflowCxV3EventInput"
        }
      },
      "description": "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. "
    },
    "GoogleCloudDialogflowCxV3beta1IntentParameter": {
      "type": "object",
      "properties": {
        "isList": {
          "description": "Indicates whether the parameter represents a list of values.",
          "type": "boolean"
        },
        "redact": {
          "type": "boolean",
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts."
        },
        "entityType": {
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.",
          "type": "string"
        }
      },
      "description": "Represents an intent parameter.",
      "id": "GoogleCloudDialogflowCxV3beta1IntentParameter"
    },
    "GoogleCloudDialogflowCxV3TransitionCoverageTransition": {
      "properties": {
        "transitionRoute": {
          "$ref": "GoogleCloudDialogflowCxV3TransitionRoute",
          "description": "Intent route or condition route."
        },
        "covered": {
          "type": "boolean",
          "description": "Whether or not the transition is covered by at least one of the agent's test cases."
        },
        "source": {
          "description": "The start node of a transition.",
          "$ref": "GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode"
        },
        "index": {
          "description": "The index of a transition in the transition list. Starting from 0.",
          "type": "integer",
          "format": "int32"
        },
        "target": {
          "$ref": "GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode",
          "description": "The end node of a transition."
        },
        "eventHandler": {
          "description": "Event handler.",
          "$ref": "GoogleCloudDialogflowCxV3EventHandler"
        }
      },
      "id": "GoogleCloudDialogflowCxV3TransitionCoverageTransition",
      "description": "A transition in a page.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction": {
      "description": "Actions on Google action to open a given url.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction",
      "properties": {
        "urlTypeHint": {
          "type": "string",
          "enum": [
            "URL_TYPE_HINT_UNSPECIFIED",
            "AMP_ACTION",
            "AMP_CONTENT"
          ],
          "description": "Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.",
          "enumDescriptions": [
            "Unspecified",
            "Url would be an amp action",
            "URL that points directly to AMP content, or to a canonical URL which refers to AMP content via ."
          ]
        },
        "url": {
          "description": "Required. URL",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3BatchRunTestCasesRequest": {
      "description": "The request message for TestCases.BatchRunTestCases.",
      "properties": {
        "testCases": {
          "items": {
            "type": "string"
          },
          "description": "Required. Format: `projects//locations//agents//testCases/`.",
          "type": "array"
        },
        "environment": {
          "description": "Optional. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3BatchRunTestCasesRequest"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff": {
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff",
      "type": "object",
      "description": "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human."
    },
    "GoogleCloudDialogflowCxV3EventInput": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3EventInput",
      "description": "Represents the event to trigger.",
      "properties": {
        "event": {
          "description": "Name of the event.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio": {
      "properties": {
        "segments": {
          "description": "Segments this audio response is composed of.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio",
      "description": "Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user."
    },
    "GoogleCloudDialogflowV2ConversationEvent": {
      "properties": {
        "errorStatus": {
          "description": "More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL.",
          "$ref": "GoogleRpcStatus"
        },
        "type": {
          "type": "string",
          "description": "The type of the event that this notification refers to.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CONVERSATION_STARTED",
            "CONVERSATION_FINISHED",
            "HUMAN_INTERVENTION_NEEDED",
            "NEW_MESSAGE",
            "UNRECOVERABLE_ERROR"
          ],
          "enumDescriptions": [
            "Type not set.",
            "A new conversation has been opened. This is fired when a telephone call is answered, or a conversation is created via the API.",
            "An existing conversation has closed. This is fired when a telephone call is terminated, or a conversation is closed via the API.",
            "An existing conversation has received notification from Dialogflow that human intervention is required.",
            "An existing conversation has received a new message, either from API or telephony. It is configured in ConversationProfile.new_message_event_notification_config",
            "Unrecoverable error during a telephone call. In general non-recoverable errors only occur if something was misconfigured in the ConversationProfile corresponding to the call. After a non-recoverable error, Dialogflow may stop responding. We don't fire this event: * in an API call because we can directly return the error, or, * when we can recover from an error."
          ]
        },
        "conversation": {
          "description": "The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`.",
          "type": "string"
        },
        "newMessagePayload": {
          "description": "Payload of NEW_MESSAGE event.",
          "$ref": "GoogleCloudDialogflowV2Message"
        }
      },
      "description": "Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2ConversationEvent"
    },
    "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart": {
      "id": "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart",
      "type": "object",
      "description": "Represents a part of a training phrase.",
      "properties": {
        "alias": {
          "description": "Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase.",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        },
        "userDefined": {
          "type": "boolean",
          "description": "Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true."
        },
        "entityType": {
          "type": "string",
          "description": "Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageMediaContent": {
      "properties": {
        "mediaObjects": {
          "description": "Required. List of media objects.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject"
          },
          "type": "array"
        },
        "mediaType": {
          "type": "string",
          "description": "Optional. What type of media is the content (ie \"audio\").",
          "enumDescriptions": [
            "Unspecified.",
            "Response media type is audio."
          ],
          "enum": [
            "RESPONSE_MEDIA_TYPE_UNSPECIFIED",
            "AUDIO"
          ]
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageMediaContent",
      "type": "object",
      "description": "The media content card for Actions on Google."
    },
    "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse": {
      "description": "Represents a fulfillment response to the user.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse",
      "properties": {
        "mergeBehavior": {
          "description": "Merge behavior for `messages`.",
          "type": "string",
          "enum": [
            "MERGE_BEHAVIOR_UNSPECIFIED",
            "APPEND",
            "REPLACE"
          ],
          "enumDescriptions": [
            "Not specified. `APPEND` will be used.",
            "`messages` will be appended to the list of messages waiting to be sent to the user.",
            "`messages` will replace the list of messages waiting to be sent to the user."
          ]
        },
        "messages": {
          "description": "The list of rich message responses to present to the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3FulfillIntentRequest": {
      "properties": {
        "match": {
          "description": "The matched intent/event to fulfill.",
          "$ref": "GoogleCloudDialogflowCxV3Match"
        },
        "matchIntentRequest": {
          "$ref": "GoogleCloudDialogflowCxV3MatchIntentRequest",
          "description": "Must be same as the corresponding MatchIntent request, otherwise the behavior is undefined."
        },
        "outputAudioConfig": {
          "description": "Instructs the speech synthesizer how to generate output audio.",
          "$ref": "GoogleCloudDialogflowCxV3OutputAudioConfig"
        }
      },
      "id": "GoogleCloudDialogflowCxV3FulfillIntentRequest",
      "type": "object",
      "description": "Request of FulfillIntent"
    },
    "GoogleCloudDialogflowCxV3beta1SessionInfo": {
      "id": "GoogleCloudDialogflowCxV3beta1SessionInfo",
      "type": "object",
      "description": "Represents session information communicated to and from the webhook.",
      "properties": {
        "session": {
          "type": "string",
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified."
        },
        "parameters": {
          "additionalProperties": {
            "type": "any"
          },
          "description": "Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.",
          "type": "object"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse",
      "description": "The simple response message containing speech or text.",
      "properties": {
        "ssml": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech."
        },
        "displayText": {
          "type": "string",
          "description": "Optional. The text to display."
        },
        "textToSpeech": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo": {
      "description": "Represents parameter information.",
      "id": "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo",
      "properties": {
        "justCollected": {
          "type": "boolean",
          "description": "Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn."
        },
        "required": {
          "description": "Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook."
        },
        "state": {
          "enum": [
            "PARAMETER_STATE_UNSPECIFIED",
            "EMPTY",
            "INVALID",
            "FILLED"
          ],
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Indicates that the parameter does not have a value.",
            "Indicates that the parameter value is invalid. This field can be used by the webhook to invalidate the parameter and ask the server to collect it from the user again.",
            "Indicates that the parameter has a value."
          ],
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored.",
          "type": "string"
        },
        "value": {
          "type": "any",
          "description": "Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageCardButton": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Optional. The text to show on the button."
        },
        "postback": {
          "description": "Optional. The text to send back to the Dialogflow API or a URI to open.",
          "type": "string"
        }
      },
      "description": "Contains information about a button.",
      "id": "GoogleCloudDialogflowV2IntentMessageCardButton",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ListTransitionRouteGroupsResponse": {
      "description": "The response message for TransitionRouteGroups.ListTransitionRouteGroups.",
      "id": "GoogleCloudDialogflowCxV3ListTransitionRouteGroupsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "transitionRouteGroups": {
          "description": "The list of transition route groups. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TransitionRouteGroup"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentParameter": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The name of the parameter."
        },
        "value": {
          "type": "string",
          "description": "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`."
        },
        "prompts": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter."
        },
        "defaultValue": {
          "type": "string",
          "description": "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`."
        },
        "mandatory": {
          "type": "boolean",
          "description": "Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value."
        },
        "name": {
          "description": "The unique identifier of this parameter.",
          "type": "string"
        },
        "entityTypeDisplayName": {
          "type": "string",
          "description": "Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided."
        },
        "isList": {
          "description": "Optional. Indicates whether the parameter represents a list of values.",
          "type": "boolean"
        }
      },
      "description": "Represents intent parameters.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentParameter"
    },
    "GoogleCloudDialogflowCxV3ExperimentResult": {
      "description": "The inference result which includes an objective metric to optimize and the confidence interval.",
      "id": "GoogleCloudDialogflowCxV3ExperimentResult",
      "type": "object",
      "properties": {
        "versionMetrics": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics"
          },
          "description": "Version variants and metrics.",
          "type": "array"
        },
        "lastUpdateTime": {
          "description": "The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3Version": {
      "id": "GoogleCloudDialogflowCxV3Version",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected."
        },
        "createTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Create time of the version."
        },
        "nluSettings": {
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowCxV3NluSettings",
          "description": "Output only. The NLU settings of the flow at version creation."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the version. Limit of 64 characters."
        },
        "state": {
          "enumDescriptions": [
            "Not specified. This value is not used.",
            "Version is not ready to serve (e.g. training is running).",
            "Training has succeeded and this version is ready to serve.",
            "Version training failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "SUCCEEDED",
            "FAILED"
          ],
          "type": "string",
          "description": "Output only. The state of this version. This field is read-only and cannot be set by create and update methods.",
          "readOnly": true
        },
        "name": {
          "description": "Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation.",
          "type": "string"
        }
      },
      "description": "Represents a version of a flow.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2EntityTypeEntity": {
      "properties": {
        "value": {
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).",
          "type": "string"
        },
        "synonyms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`."
        }
      },
      "type": "object",
      "description": "An **entity entry** for an associated entity type.",
      "id": "GoogleCloudDialogflowV2EntityTypeEntity"
    },
    "GoogleCloudDialogflowV2IntentMessageSimpleResponse": {
      "description": "The simple response message containing speech or text.",
      "id": "GoogleCloudDialogflowV2IntentMessageSimpleResponse",
      "type": "object",
      "properties": {
        "ssml": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech."
        },
        "textToSpeech": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml."
        },
        "displayText": {
          "type": "string",
          "description": "Optional. The text to display."
        }
      }
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantEvent": {
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantEvent",
      "description": "Represents a notification sent to Cloud Pub/Sub subscribers for human agent assistant events in a specific conversation.",
      "type": "object",
      "properties": {
        "conversation": {
          "description": "The conversation this notification refers to. Format: `projects//conversations/`.",
          "type": "string"
        },
        "participant": {
          "type": "string",
          "description": "The participant that the suggestion is compiled for. Format: `projects//conversations//participants/`. It will not be set in legacy workflow."
        },
        "suggestionResults": {
          "description": "The suggestion results payload that this notification refers to.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SuggestionResult"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3DtmfInput": {
      "description": "Represents the input for dtmf event.",
      "id": "GoogleCloudDialogflowCxV3DtmfInput",
      "type": "object",
      "properties": {
        "finishDigit": {
          "description": "The finish digit (if any).",
          "type": "string"
        },
        "digits": {
          "description": "The dtmf digits.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3SynthesizeSpeechConfig": {
      "description": "Configuration of how speech should be synthesized.",
      "properties": {
        "voice": {
          "description": "Optional. The desired voice of the synthesized audio.",
          "$ref": "GoogleCloudDialogflowCxV3VoiceSelectionParams"
        },
        "effectsProfileId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given."
        },
        "volumeGainDb": {
          "type": "number",
          "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.",
          "format": "double"
        },
        "speakingRate": {
          "format": "double",
          "type": "number",
          "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values \u003c 0.25 or \u003e 4.0 will return an error."
        },
        "pitch": {
          "format": "double",
          "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
          "type": "number"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3SynthesizeSpeechConfig"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. Text in this cell."
        }
      },
      "description": "Cell of TableCardRow.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell"
    },
    "GoogleCloudDialogflowV2IntentTrainingPhrase": {
      "id": "GoogleCloudDialogflowV2IntentTrainingPhrase",
      "type": "object",
      "description": "Represents an example that the agent is trained on.",
      "properties": {
        "timesAddedCount": {
          "type": "integer",
          "description": "Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.",
          "format": "int32"
        },
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentTrainingPhrasePart"
          },
          "type": "array",
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set."
        },
        "name": {
          "type": "string",
          "description": "Output only. The unique identifier of this training phrase."
        },
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXAMPLE",
            "TEMPLATE"
          ],
          "description": "Required. The type of the training phrase.",
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Examples do not contain @-prefixed entity type names, but example parts can be annotated with entity types.",
            "Templates are not annotated with entity types, but they can contain @-prefixed entity type names as substrings. Template mode has been deprecated. Example mode is the only supported way to create new training phrases. If you have existing training phrases that you've created in template mode, those will continue to work."
          ]
        }
      }
    },
    "GoogleCloudDialogflowV2QueryResult": {
      "description": "Represents the result of conversational query or event processing.",
      "properties": {
        "sentimentAnalysisResult": {
          "description": "The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request.",
          "$ref": "GoogleCloudDialogflowV2SentimentAnalysisResult"
        },
        "outputContexts": {
          "type": "array",
          "description": "The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          }
        },
        "intentDetectionConfidence": {
          "format": "float",
          "type": "number",
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list."
        },
        "allRequiredParamsPresent": {
          "type": "boolean",
          "description": "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
        },
        "fulfillmentMessages": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          },
          "description": "The collection of rich messages to present to the user.",
          "type": "array"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value"
        },
        "speechRecognitionConfidence": {
          "type": "number",
          "format": "float",
          "description": "The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult."
        },
        "action": {
          "description": "The action name from the matched intent.",
          "type": "string"
        },
        "webhookSource": {
          "type": "string",
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response."
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowV2Intent",
          "description": "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`."
        },
        "diagnosticInfo": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors",
          "type": "object"
        },
        "webhookPayload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response."
        },
        "queryText": {
          "type": "string",
          "description": "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input."
        },
        "fulfillmentText": {
          "description": "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.",
          "type": "string"
        },
        "languageCode": {
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2QueryResult",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCard": {
      "type": "object",
      "description": "The basic card message. Useful for displaying information.",
      "properties": {
        "image": {
          "description": "Optional. The image for the card.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        },
        "formattedText": {
          "description": "Required, unless image is present. The body text of the card.",
          "type": "string"
        },
        "buttons": {
          "description": "Optional. The collection of card buttons.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          },
          "type": "array"
        },
        "title": {
          "type": "string",
          "description": "Optional. The title of the card."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCard"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem": {
      "properties": {
        "info": {
          "description": "Required. Additional information about this option.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo"
        },
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "description": {
          "type": "string",
          "description": "Optional. The main text describing the item."
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the list item."
        }
      },
      "type": "object",
      "description": "An item in the list.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem"
    },
    "GoogleCloudDialogflowCxV3Webhook": {
      "description": "Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.",
      "properties": {
        "timeout": {
          "format": "google-duration",
          "description": "Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The human-readable name of the webhook, unique within the agent.",
          "type": "string"
        },
        "genericWebService": {
          "$ref": "GoogleCloudDialogflowCxV3WebhookGenericWebService",
          "description": "Configuration for a generic web service."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`."
        },
        "disabled": {
          "description": "Indicates whether the webhook is disabled.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDialogflowCxV3Webhook",
      "type": "object"
    },
    "GoogleCloudDialogflowV2SessionEntityType": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2SessionEntityType",
      "properties": {
        "entities": {
          "type": "array",
          "description": "Required. The collection of entities associated with this session entity type.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          }
        },
        "entityOverrideMode": {
          "type": "string",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ],
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition.",
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ]
        },
        "name": {
          "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
          "type": "string"
        }
      },
      "description": "A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session)."
    },
    "GoogleCloudDialogflowCxV3ListFlowsResponse": {
      "properties": {
        "flows": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3Flow"
          },
          "description": "The list of flows. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ListFlowsResponse",
      "description": "The response message for Flows.ListFlows."
    },
    "GoogleCloudDialogflowV2IntentMessageTableCardCell": {
      "type": "object",
      "description": "Cell of TableCardRow.",
      "id": "GoogleCloudDialogflowV2IntentMessageTableCardCell",
      "properties": {
        "text": {
          "description": "Required. Text in this cell.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1TestCaseError": {
      "id": "GoogleCloudDialogflowCxV3beta1TestCaseError",
      "description": "Error info for importing a test.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status associated with the test case."
        },
        "testCase": {
          "description": "The test case.",
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCase"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "description": "Metadata for UpdateDocument operation."
    },
    "GoogleCloudDialogflowCxV3ImportTestCasesRequest": {
      "id": "GoogleCloudDialogflowCxV3ImportTestCasesRequest",
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import test cases from. The format of this URI must be `gs:///`.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Uncompressed raw byte content for test cases."
        }
      },
      "description": "The request message for TestCases.ImportTestCases."
    },
    "GoogleCloudDialogflowCxV3ExperimentResultMetric": {
      "description": "Metric and corresponding confidence intervals.",
      "id": "GoogleCloudDialogflowCxV3ExperimentResultMetric",
      "properties": {
        "type": {
          "type": "string",
          "description": "Ratio-based metric type. Only one of type or count_type is specified in each Metric.",
          "enumDescriptions": [
            "Metric unspecified.",
            "Percentage of contained sessions without user calling back in 24 hours.",
            "Percentage of sessions that were handed to a human agent.",
            "Percentage of sessions with the same user calling back.",
            "Percentage of sessions where user hung up.",
            "Percentage of sessions reached Dialogflow 'END_PAGE' or 'END_SESSION'."
          ],
          "enum": [
            "METRIC_UNSPECIFIED",
            "CONTAINED_SESSION_NO_CALLBACK_RATE",
            "LIVE_AGENT_HANDOFF_RATE",
            "CALLBACK_SESSION_RATE",
            "ABANDONED_SESSION_RATE",
            "SESSION_END_RATE"
          ]
        },
        "countType": {
          "enumDescriptions": [
            "Count type unspecified.",
            "Total number of occurrences of a 'NO_MATCH'.",
            "Total number of turn counts.",
            "Average turn count in a session."
          ],
          "type": "string",
          "description": "Count-based metric type. Only one of type or count_type is specified in each Metric.",
          "enum": [
            "COUNT_TYPE_UNSPECIFIED",
            "TOTAL_NO_MATCH_COUNT",
            "TOTAL_TURN_COUNT",
            "AVERAGE_TURN_COUNT"
          ]
        },
        "count": {
          "format": "double",
          "description": "Count value of a metric.",
          "type": "number"
        },
        "confidenceInterval": {
          "description": "The probability that the treatment is better than all other treatments in the experiment",
          "$ref": "GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval"
        },
        "ratio": {
          "type": "number",
          "format": "double",
          "description": "Ratio value of a metric."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3TransitionRoute": {
      "properties": {
        "condition": {
          "type": "string",
          "description": "The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled."
        },
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The unique identifier of this transition route.",
          "type": "string"
        },
        "intent": {
          "description": "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.",
          "type": "string"
        },
        "targetPage": {
          "type": "string",
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
        },
        "triggerFulfillment": {
          "description": "The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.",
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment"
        }
      },
      "description": "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3TransitionRoute"
    },
    "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue": {
      "id": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue",
      "type": "object",
      "properties": {
        "originalValue": {
          "type": "string",
          "description": "Always present. Original text value extracted from user utterance."
        },
        "resolvedValue": {
          "type": "any",
          "description": "Always present. Structured value for the parameter extracted from user utterance."
        }
      },
      "description": "Represents a value for an intent parameter."
    },
    "GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "id": "GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata",
      "description": "Metadata for ReloadDocument operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageSuggestion": {
      "description": "The suggestion chip message that the user can tap to quickly post a reply to the conversation.",
      "type": "object",
      "properties": {
        "title": {
          "description": "Required. The text shown the in the suggestion chip.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageSuggestion"
    },
    "GoogleCloudDialogflowV2beta1ExportAgentResponse": {
      "id": "GoogleCloudDialogflowV2beta1ExportAgentResponse",
      "type": "object",
      "description": "The response message for Agents.ExportAgent.",
      "properties": {
        "agentContent": {
          "format": "byte",
          "type": "string",
          "description": "Zip compressed raw byte content for agent."
        },
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3ListSessionEntityTypesResponse": {
      "description": "The response message for SessionEntityTypes.ListSessionEntityTypes.",
      "properties": {
        "sessionEntityTypes": {
          "type": "array",
          "description": "The list of session entity types. There will be a maximum number of items returned based on the page_size field in the request.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ListSessionEntityTypesResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3RunTestCaseRequest": {
      "description": "The request message for TestCases.RunTestCase.",
      "id": "GoogleCloudDialogflowCxV3RunTestCaseRequest",
      "properties": {
        "environment": {
          "type": "string",
          "description": "Optional. Environment name. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1RunTestCaseResponse": {
      "properties": {
        "result": {
          "description": "The result.",
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1RunTestCaseResponse",
      "description": "The response message for TestCases.RunTestCase.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2EntityType": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2EntityType",
      "properties": {
        "enableFuzzyExtraction": {
          "type": "boolean",
          "description": "Optional. Enables fuzzy entity extraction during classification."
        },
        "autoExpansionMode": {
          "description": "Optional. Indicates whether the entity type can be automatically expanded.",
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ]
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`."
        },
        "kind": {
          "type": "string",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a reference value.",
            "List entity types contain a set of entries that do not map to reference values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ],
          "description": "Required. Indicates the kind of entity type."
        },
        "displayName": {
          "description": "Required. The name of the entity type.",
          "type": "string"
        },
        "entities": {
          "type": "array",
          "description": "Optional. The collection of entity entries associated with the entity type.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          }
        }
      },
      "description": "Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview)."
    },
    "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata": {
      "type": "object",
      "properties": {
        "errors": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestError"
          },
          "description": "The test errors.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata",
      "description": "Metadata returned for the TestCases.BatchRunTestCases long running operation."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmText": {
      "type": "object",
      "properties": {
        "rbmSuggestion": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          },
          "description": "Optional. One or more suggestions to show to the user.",
          "type": "array"
        },
        "text": {
          "type": "string",
          "description": "Required. Text sent and displayed to the user."
        }
      },
      "description": "Rich Business Messaging (RBM) text response with suggestions.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmText"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction": {
      "type": "object",
      "description": "Opens the given URI.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The HTTP or HTTPS scheme URI."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The uri to open on the user device"
        }
      },
      "type": "object",
      "description": "Opens the user's default web browser app to the specified uri If the user has an app installed that is registered as the default handler for the URL, then this app will be opened instead, and its icon will be used in the suggested action UI."
    },
    "GoogleCloudDialogflowCxV3Fulfillment": {
      "type": "object",
      "description": "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.",
      "properties": {
        "webhook": {
          "type": "string",
          "description": "The webhook to call. Format: `projects//locations//agents//webhooks/`."
        },
        "messages": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          },
          "type": "array",
          "description": "The list of rich message responses to present to the user."
        },
        "setParameterActions": {
          "description": "Set parameter values before executing the webhook.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction"
          },
          "type": "array"
        },
        "conditionalCases": {
          "type": "array",
          "description": "Conditional cases for this fulfillment.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
          }
        },
        "tag": {
          "type": "string",
          "description": "The tag used by the webhook to identify which fulfillment is being called. This field is required if `webhook` is specified."
        }
      },
      "id": "GoogleCloudDialogflowCxV3Fulfillment"
    },
    "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata": {
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
      "properties": {
        "state": {
          "type": "string",
          "description": "Required. Output only. The current state of this operation.",
          "readOnly": true,
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ]
        }
      }
    },
    "GoogleCloudDialogflowCxV3ListWebhooksResponse": {
      "properties": {
        "webhooks": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3Webhook"
          },
          "description": "The list of webhooks. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ListWebhooksResponse",
      "description": "The response message for Webhooks.ListWebhooks."
    },
    "GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse": {
      "id": "GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse",
      "properties": {
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityType"
          },
          "description": "The collection of updated or created entity types.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response message for EntityTypes.BatchUpdateEntityTypes."
    },
    "GoogleCloudDialogflowV2IntentMessageSimpleResponses": {
      "properties": {
        "simpleResponses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageSimpleResponse"
          },
          "description": "Required. The list of simple responses."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageSimpleResponses",
      "description": "The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`."
    },
    "GoogleCloudDialogflowV2beta1SmartReplyAnswer": {
      "type": "object",
      "description": "Represents a smart reply answer.",
      "id": "GoogleCloudDialogflowV2beta1SmartReplyAnswer",
      "properties": {
        "reply": {
          "type": "string",
          "description": "The content of the reply."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Smart reply confidence. The system's confidence score that this reply is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio": {
      "description": "Plays audio from a file in Telephony Gateway.",
      "properties": {
        "audioUri": {
          "description": "Required. URI to a Google Cloud Storage object containing the audio to play, e.g., \"gs://bucket/object\". The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ListEnvironmentsResponse": {
      "description": "The response message for Environments.ListEnvironments.",
      "id": "GoogleCloudDialogflowCxV3ListEnvironmentsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "environments": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3Environment"
          },
          "description": "The list of environments. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3CalculateCoverageResponse": {
      "description": "The response message for TestCases.CalculateCoverage.",
      "properties": {
        "routeGroupCoverage": {
          "description": "Transition route group coverage.",
          "$ref": "GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage"
        },
        "intentCoverage": {
          "$ref": "GoogleCloudDialogflowCxV3IntentCoverage",
          "description": "Intent coverage."
        },
        "transitionCoverage": {
          "description": "Transition (excluding transition route groups) coverage.",
          "$ref": "GoogleCloudDialogflowCxV3TransitionCoverage"
        },
        "agent": {
          "type": "string",
          "description": "The agent to calculate coverage for. Format: `projects//locations//agents/`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3CalculateCoverageResponse"
    },
    "GoogleCloudDialogflowCxV3BatchRunTestCasesResponse": {
      "id": "GoogleCloudDialogflowCxV3BatchRunTestCasesResponse",
      "type": "object",
      "description": "The response message for TestCases.BatchRunTestCases.",
      "properties": {
        "results": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestCaseResult"
          },
          "type": "array",
          "description": "The test case results. The detailed conversation turns are empty in this response."
        }
      }
    },
    "GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
        }
      },
      "id": "GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata",
      "description": "Metadata for CreateDocument operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1EntityTypeEntity": {
      "id": "GoogleCloudDialogflowV2beta1EntityTypeEntity",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
        },
        "synonyms": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`."
        }
      },
      "description": "An **entity entry** for an associated entity type."
    },
    "GoogleCloudDialogflowCxV3beta1EventInput": {
      "id": "GoogleCloudDialogflowCxV3beta1EventInput",
      "description": "Represents the event to trigger.",
      "properties": {
        "event": {
          "description": "Name of the event.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata": {
      "description": "Metadata for DeleteDocument operation.",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
        }
      },
      "id": "GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage": {
      "id": "GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage",
      "properties": {
        "coverages": {
          "description": "Transition route group coverages.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverage"
          },
          "type": "array"
        },
        "coverageScore": {
          "description": "The percent of transition routes in all the transition route groups that are covered.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object",
      "description": "Transition route group coverage represents the percentage of all possible transition routes present within any of a parent's test cases. The results are grouped by the transition route group."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageText": {
      "description": "The text response message.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageText",
      "properties": {
        "text": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of the agent's responses."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction": {
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction",
      "properties": {
        "parameter": {
          "type": "string",
          "description": "Display name of the parameter."
        },
        "value": {
          "description": "The new value of the parameter. A null value clears the parameter.",
          "type": "any"
        }
      },
      "description": "Setting a parameter value.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Context": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2Context",
      "description": "Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).",
      "properties": {
        "parameters": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "type": "object"
        },
        "lifespanCount": {
          "type": "integer",
          "description": "Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1SentimentAnalysisResult": {
      "id": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult",
      "type": "object",
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
      "properties": {
        "queryTextSentiment": {
          "$ref": "GoogleCloudDialogflowV2beta1Sentiment",
          "description": "The sentiment analysis result for `query_text`."
        }
      }
    },
    "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata": {
      "id": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "type": "string",
          "description": "Required. Output only. The current state of this operation.",
          "readOnly": true,
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ]
        }
      },
      "description": "Metadata in google::longrunning::Operation for Knowledge operations."
    },
    "GoogleCloudDialogflowV2SuggestionResult": {
      "properties": {
        "suggestArticlesResponse": {
          "$ref": "GoogleCloudDialogflowV2SuggestArticlesResponse",
          "description": "SuggestArticlesResponse if request is for ARTICLE_SUGGESTION."
        },
        "suggestFaqAnswersResponse": {
          "description": "SuggestFaqAnswersResponse if request is for FAQ_ANSWER.",
          "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Error status if the request failed."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2SuggestionResult",
      "description": "One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent."
    },
    "GoogleCloudDialogflowCxV3beta1DtmfInput": {
      "description": "Represents the input for dtmf event.",
      "type": "object",
      "properties": {
        "digits": {
          "type": "string",
          "description": "The dtmf digits."
        },
        "finishDigit": {
          "description": "The finish digit (if any).",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1DtmfInput"
    },
    "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject": {
      "type": "object",
      "properties": {
        "largeImage": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. Image to display above media content."
        },
        "icon": {
          "description": "Optional. Icon to display above media content.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "name": {
          "type": "string",
          "description": "Required. Name of media card."
        },
        "contentUrl": {
          "type": "string",
          "description": "Required. Url where the media is stored."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of media card."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject",
      "description": "Response media object for media content card."
    },
    "GoogleCloudDialogflowCxV3beta1ExportAgentResponse": {
      "properties": {
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest.",
          "type": "string"
        },
        "agentContent": {
          "type": "string",
          "format": "byte",
          "description": "Uncompressed raw byte content for agent."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ExportAgentResponse",
      "description": "The response message for Agents.ExportAgent.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3NluSettings": {
      "type": "object",
      "description": "Settings related to NLU.",
      "properties": {
        "modelTrainingMode": {
          "description": "Indicates NLU model training mode.",
          "enumDescriptions": [
            "Not specified. `MODEL_TRAINING_MODE_AUTOMATIC` will be used.",
            "NLU model training is automatically triggered when a flow gets modified. User can also manually trigger model training in this mode.",
            "User needs to manually trigger NLU model training. Best for large flows whose models take long time to train."
          ],
          "enum": [
            "MODEL_TRAINING_MODE_UNSPECIFIED",
            "MODEL_TRAINING_MODE_AUTOMATIC",
            "MODEL_TRAINING_MODE_MANUAL"
          ],
          "type": "string"
        },
        "modelType": {
          "type": "string",
          "description": "Indicates the type of NLU model.",
          "enumDescriptions": [
            "Not specified. `MODEL_TYPE_STANDARD` will be used.",
            "Use standard NLU model.",
            "Use advanced NLU model."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "MODEL_TYPE_STANDARD",
            "MODEL_TYPE_ADVANCED"
          ]
        },
        "classificationThreshold": {
          "format": "float",
          "description": "To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.",
          "type": "number"
        }
      },
      "id": "GoogleCloudDialogflowCxV3NluSettings"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo": {
      "description": "Represents intent information communicated to the webhook.",
      "properties": {
        "parameters": {
          "additionalProperties": {
            "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue"
          },
          "type": "object",
          "description": "Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here."
        },
        "confidence": {
          "description": "The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number",
          "format": "float"
        },
        "lastMatchedIntent": {
          "type": "string",
          "description": "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`."
        },
        "displayName": {
          "type": "string",
          "description": "Always present. The display name of the last matched intent."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo"
    },
    "GoogleCloudDialogflowV2beta1Sentiment": {
      "type": "object",
      "properties": {
        "magnitude": {
          "type": "number",
          "format": "float",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative)."
        },
        "score": {
          "format": "float",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "type": "number"
        }
      },
      "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text.",
      "id": "GoogleCloudDialogflowV2beta1Sentiment"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia": {
      "description": "Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently supported: Image Types * image/jpeg * image/jpg' * image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 * video/mpeg * video/mpeg4 * video/webm",
      "properties": {
        "height": {
          "enum": [
            "HEIGHT_UNSPECIFIED",
            "SHORT",
            "MEDIUM",
            "TALL"
          ],
          "enumDescriptions": [
            "Not specified.",
            "112 DP.",
            "168 DP.",
            "264 DP. Not available for rich card carousels when the card width is set to small."
          ],
          "type": "string",
          "description": "Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored."
        },
        "thumbnailUri": {
          "type": "string",
          "description": "Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user's device downloads the file. Depending on the user's setting, the file may not download automatically and may require the user to tap a download button."
        },
        "fileUri": {
          "type": "string",
          "description": "Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia"
    },
    "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Required. Title of the carousel item."
        },
        "description": {
          "type": "string",
          "description": "Optional. The body text of the card."
        },
        "info": {
          "description": "Required. Additional info about the option item.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo"
        },
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        }
      },
      "type": "object",
      "description": "An item in the carousel.",
      "id": "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem"
    },
    "GoogleCloudDialogflowCxV3DetectIntentResponse": {
      "properties": {
        "outputAudio": {
          "format": "byte",
          "type": "string",
          "description": "The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.response_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content."
        },
        "queryResult": {
          "$ref": "GoogleCloudDialogflowCxV3QueryResult",
          "description": "The result of the conversational query."
        },
        "outputAudioConfig": {
          "description": "The config used by the speech synthesizer to generate the output audio.",
          "$ref": "GoogleCloudDialogflowCxV3OutputAudioConfig"
        },
        "responseId": {
          "description": "Output only. The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The message returned from the DetectIntent method.",
      "id": "GoogleCloudDialogflowCxV3DetectIntentResponse"
    },
    "GoogleCloudDialogflowCxV3Agent": {
      "id": "GoogleCloudDialogflowCxV3Agent",
      "properties": {
        "timeZone": {
          "type": "string",
          "description": "Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris."
        },
        "description": {
          "type": "string",
          "description": "The description of the agent. The maximum length is 500 characters. If exceeded, the request is rejected."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the agent. Required for the Agents.UpdateAgent method. Agents.CreateAgent populates the name automatically. Format: `projects//locations//agents/`."
        },
        "startFlow": {
          "type": "string",
          "description": "Immutable. Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: `projects//locations//agents//flows/`."
        },
        "enableSpellCorrection": {
          "type": "boolean",
          "description": "Indicates if automatic spell correction is enabled in detect intent requests."
        },
        "securitySettings": {
          "description": "Name of the SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`.",
          "type": "string"
        },
        "speechToTextSettings": {
          "$ref": "GoogleCloudDialogflowCxV3SpeechToTextSettings",
          "description": "Speech recognition related settings."
        },
        "enableStackdriverLogging": {
          "type": "boolean",
          "description": "Indicates if stackdriver logging is enabled for the agent."
        },
        "avatarUri": {
          "type": "string",
          "description": "The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration."
        },
        "displayName": {
          "description": "Required. The human-readable name of the agent, unique within the location.",
          "type": "string"
        },
        "defaultLanguageCode": {
          "description": "Immutable. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the Agents.UpdateAgent method.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way. After you create an agent, you can add Intents, Entity Types, Flows, Fulfillments, Webhooks, and so on to manage the conversation flows.."
    },
    "GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent": {
      "id": "GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent",
      "properties": {
        "participant": {
          "type": "string",
          "description": "The participant that the suggestion is compiled for. And This field is used to call Participants.ListSuggestions API. Format: `projects//conversations//participants/`. It will not be set in legacy workflow. HumanAgentAssistantConfig.name for more information."
        },
        "conversation": {
          "description": "The conversation this notification refers to. Format: `projects//conversations/`.",
          "type": "string"
        },
        "suggestionResults": {
          "type": "array",
          "description": "The suggestion results payload that this notification refers to. It will only be set when HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses sets to true.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SuggestionResult"
          }
        }
      },
      "type": "object",
      "description": "Output only. Represents a notification sent to Pub/Sub subscribers for agent assistant events in a specific conversation."
    },
    "GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata": {
      "description": "Metadata for CreateDocument operation.",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion",
      "type": "object",
      "properties": {
        "action": {
          "description": "Predefined client side actions that user can choose",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction"
        },
        "reply": {
          "description": "Predefined replies for user to select instead of typing",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply"
        }
      },
      "description": "Rich Business Messaging (RBM) suggestion. Suggestions allow user to easily select/click a predefined response or perform an action (like opening a web uri)."
    },
    "GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "description": "Metadata for ImportDocuments operation.",
      "id": "GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageSelectItemInfo": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. A unique key that will be sent back to the agent if this response is given."
        },
        "synonyms": {
          "description": "Optional. A list of synonyms that can also be used to trigger this item in dialog.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Additional info about the select item for when it is triggered in a dialog.",
      "id": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo"
    },
    "GoogleCloudDialogflowCxV3ImportDocumentsResponse": {
      "id": "GoogleCloudDialogflowCxV3ImportDocumentsResponse",
      "type": "object",
      "properties": {
        "warnings": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Includes details about skipped documents or any other warnings.",
          "type": "array"
        }
      },
      "description": "Response message for Documents.ImportDocuments."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageText": {
      "type": "object",
      "properties": {
        "text": {
          "description": "Required. A collection of text responses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "description": "The text response message.",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageText"
    },
    "GoogleCloudDialogflowCxV3RestoreAgentRequest": {
      "description": "The request message for Agents.RestoreAgent.",
      "id": "GoogleCloudDialogflowCxV3RestoreAgentRequest",
      "type": "object",
      "properties": {
        "agentContent": {
          "type": "string",
          "format": "byte",
          "description": "Uncompressed raw byte content for agent."
        },
        "restoreOption": {
          "description": "Agent restore mode. If not specified, `KEEP` is assumed.",
          "enumDescriptions": [
            "Unspecified. Treated as KEEP.",
            "Always respect the settings from the exported agent file. It may cause a restoration failure if some settings (e.g. model type) are not supported in the target agent.",
            "Fallback to default settings if some settings are not supported in the target agent."
          ],
          "enum": [
            "RESTORE_OPTION_UNSPECIFIED",
            "KEEP",
            "FALLBACK"
          ],
          "type": "string"
        },
        "agentUri": {
          "type": "string",
          "description": "The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to restore agent from. The format of this URI must be `gs:///`."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCardButton": {
      "description": "Optional. Contains information about a button.",
      "properties": {
        "text": {
          "description": "Optional. The text to show on the button.",
          "type": "string"
        },
        "postback": {
          "type": "string",
          "description": "Optional. The text to send back to the Dialogflow API or a URI to open."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCardButton",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageImage": {
      "properties": {
        "imageUri": {
          "type": "string",
          "description": "Optional. The public URI to an image file."
        },
        "accessibilityText": {
          "type": "string",
          "description": "A text description of the image to be used for accessibility, e.g., screen readers. Required if image_uri is set for CarouselSelect."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageImage",
      "description": "The image response message.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess",
      "description": "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Custom metadata. Dialogflow doesn't impose any structure on this."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessage": {
      "properties": {
        "payload": {
          "description": "Returns a response containing a custom, platform-specific payload.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "liveAgentHandoff": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff",
          "description": "Hands off conversation to a human agent."
        },
        "text": {
          "description": "Returns a text response.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageText"
        },
        "endInteraction": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction",
          "description": "Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.",
          "readOnly": true
        },
        "playAudio": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio",
          "description": "Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way."
        },
        "conversationSuccess": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess",
          "description": "Indicates that the conversation succeeded."
        },
        "outputAudioText": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText",
          "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message."
        },
        "mixedAudio": {
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio",
          "description": "Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user."
        }
      },
      "description": "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessage",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ResponseMessage": {
      "description": "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.",
      "properties": {
        "outputAudioText": {
          "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText"
        },
        "conversationSuccess": {
          "description": "Indicates that the conversation succeeded.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess"
        },
        "mixedAudio": {
          "description": "Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio"
        },
        "text": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageText",
          "description": "Returns a text response."
        },
        "endInteraction": {
          "readOnly": true,
          "description": "Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction"
        },
        "playAudio": {
          "description": "Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio"
        },
        "liveAgentHandoff": {
          "description": "Hands off conversation to a human agent.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff"
        },
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Returns a response containing a custom, platform-specific payload."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessage"
    },
    "GoogleCloudDialogflowCxV3IntentCoverageIntent": {
      "description": "The agent's intent.",
      "id": "GoogleCloudDialogflowCxV3IntentCoverageIntent",
      "properties": {
        "intent": {
          "type": "string",
          "description": "The intent full resource name"
        },
        "covered": {
          "description": "Whether or not the intent is covered by at least one of the agent's test cases.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3AudioInput": {
      "description": "Represents the natural speech audio to be processed.",
      "id": "GoogleCloudDialogflowCxV3AudioInput",
      "properties": {
        "config": {
          "description": "Required. Instructs the speech recognizer how to process the speech audio.",
          "$ref": "GoogleCloudDialogflowCxV3InputAudioConfig"
        },
        "audio": {
          "type": "string",
          "description": "The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.",
          "format": "byte"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2SentimentAnalysisResult": {
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
      "type": "object",
      "properties": {
        "queryTextSentiment": {
          "$ref": "GoogleCloudDialogflowV2Sentiment",
          "description": "The sentiment analysis result for `query_text`."
        }
      },
      "id": "GoogleCloudDialogflowV2SentimentAnalysisResult"
    },
    "GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata": {
      "id": "GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "type": "object",
      "description": "Metadata for ImportDocuments operation."
    },
    "GoogleCloudDialogflowCxV3beta1TestConfig": {
      "type": "object",
      "properties": {
        "trackingParameters": {
          "type": "array",
          "description": "Session parameters to be compared when calculating differences.",
          "items": {
            "type": "string"
          }
        },
        "flow": {
          "description": "Flow name. If not set, default start flow is assumed. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1TestConfig",
      "description": "Represents configurations for a test case."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses": {
      "properties": {
        "simpleResponses": {
          "description": "Required. The list of simple responses.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses",
      "type": "object",
      "description": "The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`."
    },
    "GoogleCloudDialogflowV2SuggestArticlesResponse": {
      "description": "The response message for Participants.SuggestArticles.",
      "id": "GoogleCloudDialogflowV2SuggestArticlesResponse",
      "properties": {
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "type": "integer",
          "format": "int32"
        },
        "articleAnswers": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2ArticleAnswer"
          },
          "description": "Articles ordered by score in descending order."
        },
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1Fulfillment": {
      "description": "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.",
      "type": "object",
      "properties": {
        "webhook": {
          "description": "The webhook to call. Format: `projects//locations//agents//webhooks/`.",
          "type": "string"
        },
        "setParameterActions": {
          "description": "Set parameter values before executing the webhook.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction"
          }
        },
        "conditionalCases": {
          "type": "array",
          "description": "Conditional cases for this fulfillment.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases"
          }
        },
        "tag": {
          "type": "string",
          "description": "The tag used by the webhook to identify which fulfillment is being called. This field is required if `webhook` is specified."
        },
        "messages": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          },
          "description": "The list of rich message responses to present to the user.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1Fulfillment"
    },
    "GoogleCloudDialogflowV2IntentMessageQuickReplies": {
      "description": "The quick replies response message.",
      "id": "GoogleCloudDialogflowV2IntentMessageQuickReplies",
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. The title of the collection of quick replies."
        },
        "quickReplies": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The collection of quick replies."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it."
        },
        "audio": {
          "description": "Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.",
          "format": "byte",
          "type": "string"
        },
        "allowPlaybackInterruption": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request."
        }
      },
      "id": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment",
      "type": "object",
      "description": "Represents one segment of audio."
    },
    "GoogleCloudDialogflowCxV3WebhookRequest": {
      "id": "GoogleCloudDialogflowCxV3WebhookRequest",
      "properties": {
        "triggerIntent": {
          "type": "string",
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
        },
        "pageInfo": {
          "$ref": "GoogleCloudDialogflowCxV3PageInfo",
          "description": "Information about page status."
        },
        "text": {
          "type": "string",
          "description": "If natural language text was provided as input, this field will contain a copy of the text."
        },
        "intentInfo": {
          "description": "Information about the last matched intent.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo"
        },
        "messages": {
          "type": "array",
          "description": "The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          }
        },
        "fulfillmentInfo": {
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo",
          "description": "Always present. Information about the fulfillment that triggered this webhook call."
        },
        "sessionInfo": {
          "$ref": "GoogleCloudDialogflowCxV3SessionInfo",
          "description": "Information about session status."
        },
        "payload": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom data set in QueryParameters.payload."
        },
        "sentimentAnalysisResult": {
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult",
          "description": "The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code specified in the original request."
        },
        "triggerEvent": {
          "type": "string",
          "description": "If an event was provided as input, this field will contain the name of the event."
        },
        "detectIntentResponseId": {
          "description": "Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.",
          "type": "string"
        },
        "transcript": {
          "type": "string",
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio."
        }
      },
      "type": "object",
      "description": "The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases."
    },
    "GoogleCloudDialogflowV2beta1MessageAnnotation": {
      "description": "Represents the result of annotation for the message.",
      "properties": {
        "containEntities": {
          "description": "Required. Indicates whether the text message contains entities.",
          "type": "boolean"
        },
        "parts": {
          "description": "Optional. The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1AnnotatedMessagePart"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1MessageAnnotation",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction": {
      "properties": {
        "uri": {
          "description": "Required. The HTTP or HTTPS scheme URI.",
          "type": "string"
        }
      },
      "description": "Opens the given URI.",
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1ConversationEvent": {
      "description": "Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1ConversationEvent",
      "properties": {
        "conversation": {
          "description": "Required. The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`.",
          "type": "string"
        },
        "newMessagePayload": {
          "description": "Payload of NEW_MESSAGE event.",
          "$ref": "GoogleCloudDialogflowV2beta1Message"
        },
        "errorStatus": {
          "description": "Optional. More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL.",
          "$ref": "GoogleRpcStatus"
        },
        "type": {
          "description": "Required. The type of the event that this notification refers to.",
          "enumDescriptions": [
            "Type not set.",
            "A new conversation has been opened. This is fired when a telephone call is answered, or a conversation is created via the API.",
            "An existing conversation has closed. This is fired when a telephone call is terminated, or a conversation is closed via the API.",
            "An existing conversation has received a new message, either from API or telephony. It is configured in ConversationProfile.new_message_event_notification_config",
            "Unrecoverable error during a telephone call. In general non-recoverable errors only occur if something was misconfigured in the ConversationProfile corresponding to the call. After a non-recoverable error, Dialogflow may stop responding. We don't fire this event: * in an API call because we can directly return the error, or, * when we can recover from an error."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CONVERSATION_STARTED",
            "CONVERSATION_FINISHED",
            "NEW_MESSAGE",
            "UNRECOVERABLE_ERROR"
          ]
        }
      }
    },
    "GoogleCloudDialogflowV2beta1Context": {
      "description": "Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).",
      "properties": {
        "name": {
          "description": "Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, - `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
          "type": "string"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value"
        },
        "lifespanCount": {
          "description": "Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1Context",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3Page": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3Page",
      "properties": {
        "name": {
          "description": "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "transitionRoutes": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TransitionRoute"
          },
          "description": "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.",
          "type": "array"
        },
        "transitionRouteGroups": {
          "description": "Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -\u003e page's transition route group -\u003e flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "form": {
          "$ref": "GoogleCloudDialogflowCxV3Form",
          "description": "The form associated with the page, used for collecting parameters relevant to the page."
        },
        "entryFulfillment": {
          "description": "The fulfillment to call when the session is entering the page.",
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment"
        },
        "eventHandlers": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EventHandler"
          },
          "description": "Handlers associated with the page to handle events such as webhook errors, no match or no input.",
          "type": "array"
        },
        "displayName": {
          "description": "Required. The human-readable name of the page, unique within the agent.",
          "type": "string"
        }
      },
      "description": "A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page)."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard": {
      "type": "object",
      "description": "Standalone Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. You can group multiple rich cards into one using RbmCarouselCard but carousel cards will give you less control over the card layout.",
      "properties": {
        "cardContent": {
          "description": "Required. Card content.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
        },
        "thumbnailImageAlignment": {
          "type": "string",
          "description": "Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout.",
          "enum": [
            "THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED",
            "LEFT",
            "RIGHT"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Thumbnail preview is left-aligned.",
            "Thumbnail preview is right-aligned."
          ]
        },
        "cardOrientation": {
          "enumDescriptions": [
            "Not specified.",
            "Horizontal layout.",
            "Vertical layout."
          ],
          "type": "string",
          "enum": [
            "CARD_ORIENTATION_UNSPECIFIED",
            "HORIZONTAL",
            "VERTICAL"
          ],
          "description": "Required. Orientation of the card."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem": {
      "type": "object",
      "description": "Browsing carousel tile",
      "properties": {
        "openUriAction": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction",
          "description": "Required. Action to present to the user."
        },
        "description": {
          "description": "Optional. Description of the carousel item. Maximum of four lines of text.",
          "type": "string"
        },
        "image": {
          "description": "Optional. Hero image for the carousel item.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "footer": {
          "type": "string",
          "description": "Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text."
        },
        "title": {
          "description": "Required. Title of the carousel item. Maximum of two lines of text.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
    },
    "GoogleCloudDialogflowCxV3TestRunDifference": {
      "id": "GoogleCloudDialogflowCxV3TestRunDifference",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the diff, showing the actual output vs expected output."
        },
        "type": {
          "description": "The type of diff.",
          "type": "string",
          "enumDescriptions": [
            "Should never be used.",
            "The intent.",
            "The page.",
            "The parameters.",
            "The message utterance."
          ],
          "enum": [
            "DIFF_TYPE_UNSPECIFIED",
            "INTENT",
            "PAGE",
            "PARAMETERS",
            "UTTERANCE"
          ]
        }
      },
      "description": "The description of differences between original and replayed agent output.",
      "type": "object"
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "id": "GoogleRpcStatus"
    },
    "GoogleCloudDialogflowCxV3ListAgentsResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ListAgentsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "agents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3Agent"
          },
          "description": "The list of agents. There will be a maximum number of items returned based on the page_size field in the request."
        }
      },
      "description": "The response message for Agents.ListAgents."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio": {
      "description": "Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "properties": {
        "segments": {
          "description": "Segments this audio response is composed of.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1Page": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1Page",
      "properties": {
        "name": {
          "description": "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "transitionRoutes": {
          "type": "array",
          "description": "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRoute"
          }
        },
        "eventHandlers": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EventHandler"
          },
          "description": "Handlers associated with the page to handle events such as webhook errors, no match or no input.",
          "type": "array"
        },
        "entryFulfillment": {
          "description": "The fulfillment to call when the session is entering the page.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment"
        },
        "displayName": {
          "description": "Required. The human-readable name of the page, unique within the agent.",
          "type": "string"
        },
        "transitionRouteGroups": {
          "type": "array",
          "description": "Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -\u003e page's transition route group -\u003e flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.",
          "items": {
            "type": "string"
          }
        },
        "form": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Form",
          "description": "The form associated with the page, used for collecting parameters relevant to the page."
        }
      },
      "description": "A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page)."
    },
    "GoogleCloudDialogflowCxV3TransitionRouteGroup": {
      "type": "object",
      "properties": {
        "transitionRoutes": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TransitionRoute"
          },
          "type": "array",
          "description": "Transition routes associated with the TransitionRouteGroup."
        },
        "name": {
          "description": "The unique identifier of the transition route group. TransitionRouteGroups.CreateTransitionRouteGroup populates the name automatically. Format: `projects//locations//agents//flows//transitionRouteGroups/`.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The human-readable name of the transition route group, unique within the Agent. The display name can be no longer than 30 characters.",
          "type": "string"
        }
      },
      "description": "An TransitionRouteGroup represents a group of `TransitionRoutes` to be used by a Page.",
      "id": "GoogleCloudDialogflowCxV3TransitionRouteGroup"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequest": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequest",
      "description": "The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases.",
      "properties": {
        "fulfillmentInfo": {
          "description": "Always present. Information about the fulfillment that triggered this webhook call.",
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo"
        },
        "intentInfo": {
          "description": "Information about the last matched intent.",
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo"
        },
        "detectIntentResponseId": {
          "type": "string",
          "description": "Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller."
        },
        "pageInfo": {
          "description": "Information about page status.",
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfo"
        },
        "triggerIntent": {
          "type": "string",
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
        },
        "triggerEvent": {
          "type": "string",
          "description": "If an event was provided as input, this field will contain the name of the event."
        },
        "payload": {
          "type": "object",
          "description": "Custom data set in QueryParameters.payload.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "transcript": {
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio.",
          "type": "string"
        },
        "languageCode": {
          "description": "The language code specified in the original request.",
          "type": "string"
        },
        "sessionInfo": {
          "description": "Information about session status.",
          "$ref": "GoogleCloudDialogflowCxV3beta1SessionInfo"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          },
          "description": "The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;"
        },
        "sentimentAnalysisResult": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult",
          "description": "The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request."
        },
        "text": {
          "type": "string",
          "description": "If natural language text was provided as input, this field will contain a copy of the text."
        }
      }
    },
    "GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Required. The word or phrase to be excluded."
        }
      },
      "description": "An excluded entity phrase that should not be matched.",
      "id": "GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase"
    },
    "GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata": {
      "id": "GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata",
      "description": "Metadata returned for the TestCases.BatchRunTestCases long running operation.",
      "properties": {
        "errors": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestError"
          },
          "type": "array",
          "description": "The test errors."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse": {
      "id": "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse",
      "properties": {
        "latestMessage": {
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.",
          "type": "string"
        },
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "format": "int32",
          "type": "integer"
        },
        "faqAnswers": {
          "description": "Output only. Answers extracted from FAQ documents.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1FaqAnswer"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "The request message for Participants.SuggestFaqAnswers."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem": {
      "properties": {
        "info": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo",
          "description": "Required. Additional info about the option item."
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the carousel item."
        },
        "description": {
          "description": "Optional. The body text of the card.",
          "type": "string"
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. The image to display."
        }
      },
      "description": "An item in the carousel.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall": {
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Required. The phone number to transfer the call to in [E.164 format](https://en.wikipedia.org/wiki/E.164). We currently only allow transferring to US numbers (+1xxxyyyzzzz)."
        }
      },
      "description": "Transfers the call in Telephony Gateway.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3PageInfo": {
      "id": "GoogleCloudDialogflowCxV3PageInfo",
      "description": "Represents page information communicated to and from the webhook.",
      "type": "object",
      "properties": {
        "currentPage": {
          "type": "string",
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`."
        },
        "formInfo": {
          "$ref": "GoogleCloudDialogflowCxV3PageInfoFormInfo",
          "description": "Optional for both WebhookRequest and WebhookResponse. Information about the form."
        }
      }
    },
    "GoogleCloudDialogflowCxV3RunTestCaseResponse": {
      "type": "object",
      "properties": {
        "result": {
          "description": "The result.",
          "$ref": "GoogleCloudDialogflowCxV3TestCaseResult"
        }
      },
      "description": "The response message for TestCases.RunTestCase.",
      "id": "GoogleCloudDialogflowCxV3RunTestCaseResponse"
    },
    "GoogleCloudDialogflowCxV3EventHandler": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The unique identifier of this event handler.",
          "readOnly": true
        },
        "triggerFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment",
          "description": "The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks."
        },
        "targetFlow": {
          "type": "string",
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`."
        },
        "event": {
          "description": "Required. The name of the event to handle.",
          "type": "string"
        },
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3EventHandler",
      "type": "object",
      "description": "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow."
    },
    "GoogleCloudDialogflowV2EventInput": {
      "id": "GoogleCloudDialogflowV2EventInput",
      "properties": {
        "parameters": {
          "description": "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the event."
        },
        "languageCode": {
          "description": "Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\"Hello #welcome_event.name! What can I do for you today?\"`."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo": {
      "properties": {
        "synonyms": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of synonyms that can also be used to trigger this item in dialog."
        },
        "key": {
          "type": "string",
          "description": "Required. A unique key that will be sent back to the agent if this response is given."
        }
      },
      "description": "Additional info about the select item for when it is triggered in a dialog.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageListSelect": {
      "properties": {
        "title": {
          "description": "Optional. The overall title of the list.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageListSelectItem"
          },
          "description": "Required. List items."
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. Subtitle of the list."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageListSelect",
      "description": "The card for presenting a list of options to select from.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ExportTestCasesRequest": {
      "id": "GoogleCloudDialogflowCxV3ExportTestCasesRequest",
      "type": "object",
      "description": "The request message for TestCases.ExportTestCases.",
      "properties": {
        "gcsUri": {
          "description": "The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the test cases to. The format of this URI must be `gs:///`. If unspecified, the serialized test cases is returned inline.",
          "type": "string"
        },
        "dataFormat": {
          "description": "The data format of the exported test cases. If not specified, `BLOB` is assumed.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified format.",
            "Raw bytes.",
            "JSON format."
          ],
          "enum": [
            "DATA_FORMAT_UNSPECIFIED",
            "BLOB",
            "JSON"
          ]
        },
        "filter": {
          "description": "The filter expression used to filter exported test cases, see [API Filtering](https://aip.dev/160). The expression is case insensitive and supports the following syntax: name = [OR name = ] ... For example: * \"name = t1 OR name = t2\" matches the test case with the exact resource name \"t1\" or \"t2\".",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3ResponseMessageText": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageText",
      "properties": {
        "allowPlaybackInterruption": {
          "readOnly": true,
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean"
        },
        "text": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. A collection of text responses."
        }
      },
      "description": "The text response message."
    },
    "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo": {
      "description": "Represents parameter information.",
      "id": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo",
      "properties": {
        "displayName": {
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook.",
          "type": "string"
        },
        "value": {
          "description": "Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value.",
          "type": "any"
        },
        "state": {
          "type": "string",
          "enum": [
            "PARAMETER_STATE_UNSPECIFIED",
            "EMPTY",
            "INVALID",
            "FILLED"
          ],
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Indicates that the parameter does not have a value.",
            "Indicates that the parameter value is invalid. This field can be used by the webhook to invalidate the parameter and ask the server to collect it from the user again.",
            "Indicates that the parameter has a value."
          ],
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored."
        },
        "justCollected": {
          "description": "Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn.",
          "type": "boolean"
        },
        "required": {
          "type": "boolean",
          "description": "Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ValidationMessage": {
      "type": "object",
      "properties": {
        "resourceNames": {
          "description": "The resource names of the resources where the message is found.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResourceName"
          }
        },
        "resourceType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Agent.",
            "Intent.",
            "Intent training phrase.",
            "Intent parameter.",
            "Multiple intents.",
            "Multiple training phrases.",
            "Entity type.",
            "Multiple entity types.",
            "Webhook.",
            "Flow.",
            "Page.",
            "Multiple pages.",
            "Transition route group."
          ],
          "description": "The type of the resources where the message is found.",
          "enum": [
            "RESOURCE_TYPE_UNSPECIFIED",
            "AGENT",
            "INTENT",
            "INTENT_TRAINING_PHRASE",
            "INTENT_PARAMETER",
            "INTENTS",
            "INTENT_TRAINING_PHRASES",
            "ENTITY_TYPE",
            "ENTITY_TYPES",
            "WEBHOOK",
            "FLOW",
            "PAGE",
            "PAGES",
            "TRANSITION_ROUTE_GROUP"
          ]
        },
        "detail": {
          "type": "string",
          "description": "The message detail."
        },
        "severity": {
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ERROR"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "The agent doesn't follow Dialogflow best practices.",
            "The agent may not behave as expected.",
            "The agent may experience failures."
          ],
          "type": "string",
          "description": "Indicates the severity of the message."
        },
        "resources": {
          "description": "The names of the resources where the message is found.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ValidationMessage",
      "description": "Agent/flow validation message."
    },
    "GoogleCloudDialogflowV3alpha1ImportDocumentsResponse": {
      "description": "Response message for Documents.ImportDocuments.",
      "type": "object",
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Includes details about skipped documents or any other warnings."
        }
      },
      "id": "GoogleCloudDialogflowV3alpha1ImportDocumentsResponse"
    },
    "GoogleCloudDialogflowCxV3FormParameterFillBehavior": {
      "description": "Configuration for how the filling of a parameter should be handled.",
      "properties": {
        "repromptEventHandlers": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EventHandler"
          },
          "type": "array",
          "description": "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted."
        },
        "initialPromptFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment",
          "description": "Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3FormParameterFillBehavior"
    },
    "GoogleCloudDialogflowV2MessageAnnotation": {
      "type": "object",
      "properties": {
        "containEntities": {
          "type": "boolean",
          "description": "Indicates whether the text message contains entities."
        },
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2AnnotatedMessagePart"
          },
          "type": "array",
          "description": "The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text]."
        }
      },
      "description": "Represents the result of annotation for the message.",
      "id": "GoogleCloudDialogflowV2MessageAnnotation"
    },
    "GoogleCloudDialogflowV2IntentMessageTableCardRow": {
      "properties": {
        "dividerAfter": {
          "description": "Optional. Whether to add a visual divider after this row.",
          "type": "boolean"
        },
        "cells": {
          "description": "Optional. List of cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageTableCardCell"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Row of TableCard.",
      "id": "GoogleCloudDialogflowV2IntentMessageTableCardRow"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard": {
      "properties": {
        "imageDisplayOptions": {
          "description": "Optional. Settings for displaying the image. Applies to every image in items.",
          "enum": [
            "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED",
            "GRAY",
            "WHITE",
            "CROPPED",
            "BLURRED_BACKGROUND"
          ],
          "enumDescriptions": [
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with white bars.",
            "Image is scaled such that the image width and height match or exceed the container dimensions. This may crop the top and bottom of the image if the scaled image height is greater than the container height, or crop the left and right of the image if the scaled image width is greater than the container width. This is similar to \"Zoom Mode\" on a widescreen TV when playing a 4:3 video.",
            "Pad the gaps between image and image frame with a blurred copy of the same image."
          ],
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          },
          "type": "array",
          "description": "Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard",
      "description": "Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Suggested reply text."
        },
        "postbackData": {
          "description": "Opaque payload that the Dialogflow receives in a user event when the user taps the suggested reply. This data will be also forwarded to webhook to allow performing custom business logic.",
          "type": "string"
        }
      },
      "description": "Rich Business Messaging (RBM) suggested reply that the user can click instead of typing in their own response.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction",
      "type": "object",
      "properties": {
        "urlTypeHint": {
          "enum": [
            "URL_TYPE_HINT_UNSPECIFIED",
            "AMP_ACTION",
            "AMP_CONTENT"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Url would be an amp action",
            "URL that points directly to AMP content, or to a canonical URL which refers to AMP content via ."
          ],
          "description": "Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.",
          "type": "string"
        },
        "url": {
          "description": "Required. URL",
          "type": "string"
        }
      },
      "description": "Actions on Google action to open a given url."
    },
    "GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata": {
      "description": "Metadata for UpdateDocument operation.",
      "type": "object",
      "id": "GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1IntentInput": {
      "type": "object",
      "properties": {
        "intent": {
          "description": "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1IntentInput",
      "description": "Represents the intent to trigger programmatically rather than as a result of natural language processing."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow",
      "properties": {
        "cells": {
          "type": "array",
          "description": "Optional. List of cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell"
          }
        },
        "dividerAfter": {
          "type": "boolean",
          "description": "Optional. Whether to add a visual divider after this row."
        }
      },
      "type": "object",
      "description": "Row of TableCard."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies": {
      "description": "The quick replies response message.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. The title of the collection of quick replies."
        },
        "quickReplies": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The collection of quick replies."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ExportTestCasesMetadata": {
      "properties": {},
      "description": "Metadata returned for the TestCases.ExportTestCases long running operation.",
      "id": "GoogleCloudDialogflowCxV3ExportTestCasesMetadata",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo": {
      "id": "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo",
      "type": "object",
      "description": "Represents fulfillment information communicated to the webhook.",
      "properties": {
        "tag": {
          "description": "Always present. The tag used to identify which fulfillment is being called.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech": {
      "properties": {
        "text": {
          "description": "The raw text to be synthesized.",
          "type": "string"
        },
        "ssml": {
          "type": "string",
          "description": "The SSML to be synthesized. For more information, see [SSML](https://developers.google.com/actions/reference/ssml)."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech",
      "type": "object",
      "description": "Synthesizes speech and plays back the synthesized audio to the caller in Telephony Gateway. Telephony Gateway takes the synthesizer settings from `DetectIntentResponse.output_audio_config` which can either be set at request-level or can come from the agent-level synthesizer config."
    },
    "GoogleCloudDialogflowCxV3VoiceSelectionParams": {
      "id": "GoogleCloudDialogflowCxV3VoiceSelectionParams",
      "type": "object",
      "properties": {
        "ssmlGender": {
          "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer substitutes a voice with a different gender rather than failing the request.",
          "enum": [
            "SSML_VOICE_GENDER_UNSPECIFIED",
            "SSML_VOICE_GENDER_MALE",
            "SSML_VOICE_GENDER_FEMALE",
            "SSML_VOICE_GENDER_NEUTRAL"
          ],
          "enumDescriptions": [
            "An unspecified gender, which means that the client doesn't care which gender the selected voice will have.",
            "A male voice.",
            "A female voice.",
            "A gender-neutral voice."
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender. For the list of available voices, please refer to [Supported voices and languages](https://cloud.google.com/text-to-speech/docs/voices)."
        }
      },
      "description": "Description of which voice to use for speech synthesis."
    },
    "GoogleCloudDialogflowCxV3ExperimentDefinition": {
      "description": "Definition of the experiment.",
      "id": "GoogleCloudDialogflowCxV3ExperimentDefinition",
      "type": "object",
      "properties": {
        "condition": {
          "type": "string",
          "description": "The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. \"query_input.language_code=en\" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition)."
        },
        "versionVariants": {
          "$ref": "GoogleCloudDialogflowCxV3VersionVariants",
          "description": "The flow versions as the variants of this experiment."
        }
      }
    },
    "GoogleCloudDialogflowV2WebhookResponse": {
      "id": "GoogleCloudDialogflowV2WebhookResponse",
      "type": "object",
      "properties": {
        "fulfillmentText": {
          "description": "Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller.",
          "type": "string"
        },
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
          "type": "object"
        },
        "outputContexts": {
          "type": "array",
          "description": "Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          }
        },
        "fulfillmentMessages": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          },
          "type": "array",
          "description": "Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller."
        },
        "sessionEntityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
          },
          "type": "array",
          "description": "Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods."
        },
        "followupEventInput": {
          "description": "Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields.",
          "$ref": "GoogleCloudDialogflowV2EventInput"
        },
        "source": {
          "type": "string",
          "description": "Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller."
        }
      },
      "description": "The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `\"\"` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json)."
    },
    "GoogleCloudDialogflowCxV3ConversationTurnUserInput": {
      "type": "object",
      "description": "The input from the human user.",
      "id": "GoogleCloudDialogflowCxV3ConversationTurnUserInput",
      "properties": {
        "input": {
          "description": "Supports text input, event input, dtmf input in the test case.",
          "$ref": "GoogleCloudDialogflowCxV3QueryInput"
        },
        "injectedParameters": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Parameters that need to be injected into the conversation during intent detection."
        },
        "isWebhookEnabled": {
          "type": "boolean",
          "description": "If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1WebhookResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1WebhookResponse",
      "type": "object",
      "properties": {
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Value to append directly to QueryResult.webhook_payloads.",
          "type": "object"
        },
        "sessionInfo": {
          "description": "Information about session status. This field can be omitted by the webhook if it does not intend to modify session status.",
          "$ref": "GoogleCloudDialogflowCxV3beta1SessionInfo"
        },
        "fulfillmentResponse": {
          "description": "The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user.",
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse"
        },
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "pageInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfo",
          "description": "Information about page status. This field can be omitted by the webhook if it does not intend to modify page status."
        }
      },
      "description": "The response message for a webhook call."
    },
    "GoogleCloudDialogflowV2beta1FaqAnswer": {
      "id": "GoogleCloudDialogflowV2beta1FaqAnswer",
      "description": "Represents answer from \"frequently asked questions\".",
      "type": "object",
      "properties": {
        "question": {
          "description": "The corresponding FAQ question.",
          "type": "string"
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "metadata": {
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "source": {
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse": {
      "description": "The response message for TestCases.ImportTestCases.",
      "id": "GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse",
      "type": "object",
      "properties": {
        "names": {
          "items": {
            "type": "string"
          },
          "description": "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3ListTestCaseResultsResponse": {
      "description": "The response message for TestCases.ListTestCaseResults.",
      "properties": {
        "testCaseResults": {
          "description": "The list of test case results.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestCaseResult"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "GoogleCloudDialogflowCxV3ListTestCaseResultsResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1ImportDocumentsResponse": {
      "description": "Response message for Documents.ImportDocuments.",
      "id": "GoogleCloudDialogflowV2beta1ImportDocumentsResponse",
      "type": "object",
      "properties": {
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Includes details about skipped documents or any other warnings."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1SuggestArticlesResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1SuggestArticlesResponse",
      "properties": {
        "latestMessage": {
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.",
          "type": "string"
        },
        "articleAnswers": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1ArticleAnswer"
          },
          "type": "array",
          "description": "Output only. Articles ordered by score in descending order."
        },
        "contextSize": {
          "format": "int32",
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesResponse.context_size field in the request if there aren't that many messages in the conversation.",
          "type": "integer"
        }
      },
      "description": "The response message for Participants.SuggestArticles."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction": {
      "description": "Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDialogflowV2IntentMessageCard": {
      "description": "The card response message.",
      "id": "GoogleCloudDialogflowV2IntentMessageCard",
      "type": "object",
      "properties": {
        "imageUri": {
          "description": "Optional. The public URI to an image file for the card.",
          "type": "string"
        },
        "subtitle": {
          "description": "Optional. The subtitle of the card.",
          "type": "string"
        },
        "title": {
          "description": "Optional. The title of the card.",
          "type": "string"
        },
        "buttons": {
          "type": "array",
          "description": "Optional. The collection of card buttons.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageCardButton"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3DetectIntentRequest": {
      "description": "The request to detect user's intent.",
      "properties": {
        "queryParams": {
          "$ref": "GoogleCloudDialogflowCxV3QueryParameters",
          "description": "The parameters of this query."
        },
        "queryInput": {
          "$ref": "GoogleCloudDialogflowCxV3QueryInput",
          "description": "Required. The input specification."
        },
        "outputAudioConfig": {
          "$ref": "GoogleCloudDialogflowCxV3OutputAudioConfig",
          "description": "Instructs the speech synthesizer how to generate the output audio."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3DetectIntentRequest"
    },
    "GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata": {
      "description": "Metadata associated with the long running operation for Versions.CreateVersion.",
      "properties": {
        "version": {
          "type": "string",
          "description": "Name of the created version. Format: `projects//locations//agents//flows//versions/`."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCard": {
      "properties": {
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. The image for the card."
        },
        "buttons": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          },
          "type": "array",
          "description": "Optional. The collection of card buttons."
        },
        "title": {
          "description": "Optional. The title of the card.",
          "type": "string"
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        },
        "formattedText": {
          "description": "Required, unless image is present. The body text of the card.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCard",
      "type": "object",
      "description": "The basic card message. Useful for displaying information."
    },
    "GoogleCloudDialogflowV2beta1Intent": {
      "properties": {
        "displayName": {
          "description": "Required. The name of this intent.",
          "type": "string"
        },
        "mlDisabled": {
          "description": "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.",
          "type": "boolean"
        },
        "webhookState": {
          "type": "string",
          "enum": [
            "WEBHOOK_STATE_UNSPECIFIED",
            "WEBHOOK_STATE_ENABLED",
            "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
          ],
          "enumDescriptions": [
            "Webhook is disabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent. Also, each slot filling prompt is forwarded to the webhook."
          ],
          "description": "Optional. Indicates whether webhooks are enabled for the intent."
        },
        "resetContexts": {
          "type": "boolean",
          "description": "Optional. Indicates whether to delete all contexts in the current session when this intent is matched."
        },
        "isFallback": {
          "description": "Optional. Indicates whether this is a fallback intent.",
          "type": "boolean"
        },
        "defaultResponsePlatforms": {
          "description": "Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).",
          "items": {
            "enumDescriptions": [
              "Not specified.",
              "Facebook.",
              "Slack.",
              "Telegram.",
              "Kik.",
              "Skype.",
              "Line.",
              "Viber.",
              "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
              "Telephony Gateway.",
              "Google Hangouts."
            ],
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "FACEBOOK",
              "SLACK",
              "TELEGRAM",
              "KIK",
              "SKYPE",
              "LINE",
              "VIBER",
              "ACTIONS_ON_GOOGLE",
              "TELEPHONY",
              "GOOGLE_HANGOUTS"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "liveAgentHandoff": {
          "description": "Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.",
          "type": "boolean"
        },
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentParameter"
          },
          "description": "Optional. The collection of parameters associated with the intent.",
          "type": "array"
        },
        "messages": {
          "type": "array",
          "description": "Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          }
        },
        "name": {
          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` - `projects//locations//agent/intents/`",
          "type": "string"
        },
        "mlEnabled": {
          "description": "Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set to false, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false, then the default value is determined as follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018 the default is: ml_enabled = true / ml_disabled = false.",
          "type": "boolean"
        },
        "action": {
          "type": "string",
          "description": "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
        },
        "events": {
          "description": "Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "trainingPhrases": {
          "description": "Optional. The collection of examples that the agent is trained on.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentTrainingPhrase"
          },
          "type": "array"
        },
        "followupIntentInfo": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output."
        },
        "priority": {
          "type": "integer",
          "description": "Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "format": "int32"
        },
        "outputContexts": {
          "description": "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          },
          "type": "array"
        },
        "rootFollowupIntentName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. Format: `projects//agent/intents/`."
        },
        "parentFollowupIntentName": {
          "description": "Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "inputContextNames": {
          "type": "array",
          "description": "Optional. The list of context names required for this intent to be triggered. Formats: - `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/`",
          "items": {
            "type": "string"
          }
        },
        "endInteraction": {
          "type": "boolean",
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false."
        }
      },
      "type": "object",
      "description": "An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).",
      "id": "GoogleCloudDialogflowV2beta1Intent"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard",
      "properties": {
        "cardContents": {
          "type": "array",
          "description": "Required. The cards in the carousel. A carousel must have at least 2 cards and at most 10.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
          }
        },
        "cardWidth": {
          "description": "Required. The width of the cards in the carousel.",
          "enum": [
            "CARD_WIDTH_UNSPECIFIED",
            "SMALL",
            "MEDIUM"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "120 DP. Note that tall media cannot be used.",
            "232 DP."
          ]
        }
      },
      "type": "object",
      "description": "Carousel Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. If you want to show a single card with more control over the layout, please use RbmStandaloneCard instead."
    },
    "GoogleCloudDialogflowCxV3ListIntentsResponse": {
      "type": "object",
      "description": "The response message for Intents.ListIntents.",
      "properties": {
        "intents": {
          "description": "The list of intents. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3Intent"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "GoogleCloudDialogflowCxV3ListIntentsResponse"
    },
    "GoogleCloudDialogflowCxV3PageInfoFormInfo": {
      "type": "object",
      "properties": {
        "parameterInfo": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo"
          },
          "description": "Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter."
        }
      },
      "description": "Represents form information.",
      "id": "GoogleCloudDialogflowCxV3PageInfoFormInfo"
    },
    "GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverageTransition": {
      "id": "GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverageTransition",
      "description": "A transition coverage in a transition route group.",
      "type": "object",
      "properties": {
        "transitionRoute": {
          "description": "Intent route or condition route.",
          "$ref": "GoogleCloudDialogflowCxV3TransitionRoute"
        },
        "covered": {
          "description": "Whether or not the transition route is covered by at least one of the agent's test cases.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowCxV3MatchIntentRequest": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3MatchIntentRequest",
      "properties": {
        "queryInput": {
          "description": "Required. The input specification.",
          "$ref": "GoogleCloudDialogflowCxV3QueryInput"
        },
        "queryParams": {
          "description": "The parameters of this query.",
          "$ref": "GoogleCloudDialogflowCxV3QueryParameters"
        }
      },
      "description": "Request of MatchIntent."
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1KnowledgeAnswers": {
      "id": "GoogleCloudDialogflowV2beta1KnowledgeAnswers",
      "type": "object",
      "description": "Represents the result of querying a Knowledge base.",
      "properties": {
        "answers": {
          "description": "A list of answers from Knowledge Connector.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2IntentFollowupIntentInfo": {
      "description": "Represents a single followup intent in the chain.",
      "properties": {
        "parentFollowupIntentName": {
          "description": "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "followupIntentName": {
          "type": "string",
          "description": "The unique identifier of the followup intent. Format: `projects//agent/intents/`."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentFollowupIntentInfo",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ListExperimentsResponse": {
      "description": "The response message for Experiments.ListExperiments.",
      "properties": {
        "experiments": {
          "type": "array",
          "description": "The list of experiments. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3Experiment"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ListExperimentsResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentTrainingPhrase": {
      "properties": {
        "parts": {
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart"
          }
        },
        "type": {
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Examples do not contain @-prefixed entity type names, but example parts can be annotated with entity types.",
            "Templates are not annotated with entity types, but they can contain @-prefixed entity type names as substrings. Template mode has been deprecated. Example mode is the only supported way to create new training phrases. If you have existing training phrases that you've created in template mode, those will continue to work."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXAMPLE",
            "TEMPLATE"
          ],
          "description": "Required. The type of the training phrase.",
          "type": "string"
        },
        "timesAddedCount": {
          "format": "int32",
          "description": "Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "description": "Output only. The unique identifier of this training phrase."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentTrainingPhrase",
      "type": "object",
      "description": "Represents an example that the agent is trained on."
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent": {
      "properties": {
        "message": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage",
          "description": "Returned message."
        },
        "additionalCases": {
          "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases",
          "description": "Additional cases to be evaluated."
        }
      },
      "type": "object",
      "description": "The list of messages or conditional cases to activate for this case.",
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent"
    },
    "GoogleCloudDialogflowCxV3beta1Intent": {
      "properties": {
        "priority": {
          "type": "integer",
          "description": "The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "format": "int32"
        },
        "labels": {
          "description": "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys-\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. \"sys-head\" means the intent is a head intent. \"sys-contextual\" means the intent is a contextual intent.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "parameters": {
          "description": "The collection of parameters associated with the intent.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentParameter"
          }
        },
        "displayName": {
          "description": "Required. The human-readable name of the intent, unique within the agent.",
          "type": "string"
        },
        "name": {
          "description": "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters."
        },
        "isFallback": {
          "description": "Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.",
          "type": "boolean"
        },
        "trainingPhrases": {
          "type": "array",
          "description": "The collection of training phrases the agent is trained on to identify the intent.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1Intent",
      "description": "An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Sentiment": {
      "properties": {
        "score": {
          "format": "float",
          "type": "number",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment)."
        },
        "magnitude": {
          "type": "number",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "format": "float"
        }
      },
      "id": "GoogleCloudDialogflowV2Sentiment",
      "type": "object",
      "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text."
    },
    "GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "type": "object",
      "description": "Metadata for DeleteDocument operation."
    },
    "GoogleCloudDialogflowCxV3EnvironmentVersionConfig": {
      "type": "object",
      "description": "Configuration for the version.",
      "properties": {
        "version": {
          "type": "string",
          "description": "Required. Format: projects//locations//agents//flows//versions/."
        }
      },
      "id": "GoogleCloudDialogflowCxV3EnvironmentVersionConfig"
    },
    "GoogleCloudDialogflowV2BatchUpdateIntentsResponse": {
      "id": "GoogleCloudDialogflowV2BatchUpdateIntentsResponse",
      "type": "object",
      "description": "The response message for Intents.BatchUpdateIntents.",
      "properties": {
        "intents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          },
          "description": "The collection of updated or created intents."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCard": {
      "description": "The card response message.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. The title of the card."
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        },
        "buttons": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCardButton"
          },
          "description": "Optional. The collection of card buttons.",
          "type": "array"
        },
        "imageUri": {
          "type": "string",
          "description": "Optional. The public URI to an image file for the card."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCard",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction",
      "description": "Rich Business Messaging (RBM) suggested client-side action that the user can choose from the card.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Text to display alongside the action."
        },
        "dial": {
          "description": "Suggested client side action: Dial a phone number",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial"
        },
        "shareLocation": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation",
          "description": "Suggested client side action: Share user location"
        },
        "postbackData": {
          "type": "string",
          "description": "Opaque payload that the Dialogflow receives in a user event when the user taps the suggested action. This data will be also forwarded to webhook to allow performing custom business logic."
        },
        "openUrl": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri",
          "description": "Suggested client side action: Open a URI on device"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect": {
      "type": "object",
      "description": "The card for presenting a carousel of options to select from.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect",
      "properties": {
        "items": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem"
          },
          "description": "Required. Carousel items.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1EventHandler": {
      "description": "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.",
      "id": "GoogleCloudDialogflowCxV3beta1EventHandler",
      "properties": {
        "event": {
          "description": "Required. The name of the event to handle.",
          "type": "string"
        },
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "targetPage": {
          "type": "string",
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
        },
        "name": {
          "description": "Output only. The unique identifier of this event handler.",
          "readOnly": true,
          "type": "string"
        },
        "triggerFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment",
          "description": "The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3VariantsHistory": {
      "description": "The history of variants update.",
      "id": "GoogleCloudDialogflowCxV3VariantsHistory",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Update time of the variants."
        },
        "versionVariants": {
          "$ref": "GoogleCloudDialogflowCxV3VersionVariants",
          "description": "The flow versions as the variants."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ListPagesResponse": {
      "properties": {
        "pages": {
          "type": "array",
          "description": "The list of pages. There will be a maximum number of items returned based on the page_size field in the request.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3Page"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "description": "The response message for Pages.ListPages.",
      "id": "GoogleCloudDialogflowCxV3ListPagesResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageTableCard": {
      "id": "GoogleCloudDialogflowV2IntentMessageTableCard",
      "description": "Table card for Actions on Google.",
      "type": "object",
      "properties": {
        "title": {
          "description": "Required. Title of the card.",
          "type": "string"
        },
        "subtitle": {
          "description": "Optional. Subtitle to the title.",
          "type": "string"
        },
        "columnProperties": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageColumnProperties"
          },
          "description": "Optional. Display properties for the columns in this table.",
          "type": "array"
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. Image which should be displayed on the card."
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          },
          "description": "Optional. List of buttons for the card."
        },
        "rows": {
          "description": "Optional. Rows in this table of data.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageTableCardRow"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2KnowledgeOperationMetadata": {
      "type": "object",
      "properties": {
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "type": "string",
          "description": "Output only. The current state of this operation."
        }
      },
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "id": "GoogleCloudDialogflowV2KnowledgeOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1AudioInput": {
      "id": "GoogleCloudDialogflowCxV3beta1AudioInput",
      "properties": {
        "config": {
          "$ref": "GoogleCloudDialogflowCxV3beta1InputAudioConfig",
          "description": "Required. Instructs the speech recognizer how to process the speech audio."
        },
        "audio": {
          "type": "string",
          "description": "The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.",
          "format": "byte"
        }
      },
      "type": "object",
      "description": "Represents the natural speech audio to be processed."
    },
    "GoogleCloudDialogflowCxV3SecuritySettings": {
      "type": "object",
      "properties": {
        "redactionStrategy": {
          "description": "Strategy that defines how we do redaction.",
          "type": "string",
          "enumDescriptions": [
            "Do not redact.",
            "Call redaction service to clean up the data to be persisted."
          ],
          "enum": [
            "REDACTION_STRATEGY_UNSPECIFIED",
            "REDACT_WITH_SERVICE"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the security settings, unique within the location."
        },
        "purgeDataTypes": {
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Unspecified. Do not use.",
              "Dialogflow history. This does not include Stackdriver log, which is owned by the user not Dialogflow."
            ],
            "type": "string",
            "enum": [
              "PURGE_DATA_TYPE_UNSPECIFIED",
              "DIALOGFLOW_HISTORY"
            ]
          },
          "description": "List of types of data to remove when retention settings triggers purge."
        },
        "inspectTemplate": {
          "description": "DLP inspect template name. Use this template to define inspect base settings. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR `organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`",
          "type": "string"
        },
        "redactionScope": {
          "description": "Defines on what data we apply redaction. Note that we don't redact data to which we don't have access, e.g., Stackdriver logs.",
          "type": "string",
          "enum": [
            "REDACTION_SCOPE_UNSPECIFIED",
            "REDACT_DISK_STORAGE"
          ],
          "enumDescriptions": [
            "Don't redact any kind of data.",
            "On data to be written to disk or similar devices that are capable of holding data even if power is disconnected. This includes data that are temporarily saved on disk."
          ]
        },
        "retentionWindowDays": {
          "type": "integer",
          "format": "int32",
          "description": "Retains the data for the specified number of days. User must Set a value lower than Dialogflow's default 30d TTL. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use Dialogflow's default TTL."
        },
        "name": {
          "type": "string",
          "description": "Required. Resource name of the settings. Format: `projects//locations//securitySettings/`."
        }
      },
      "id": "GoogleCloudDialogflowCxV3SecuritySettings",
      "description": "Represents the settings related to security issues, such as data redaction and data retention. It may take hours for updates on the settings to propagate to all the related components and take effect."
    },
    "GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse": {
      "type": "object",
      "description": "Response message for Documents.ImportDocuments.",
      "properties": {
        "warnings": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Includes details about skipped documents or any other warnings."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse"
    },
    "GoogleCloudDialogflowCxV3Match": {
      "id": "GoogleCloudDialogflowCxV3Match",
      "type": "object",
      "description": "Represents one match result of MatchIntent.",
      "properties": {
        "parameters": {
          "description": "The collection of parameters extracted from the query. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "The confidence of this match. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation."
        },
        "event": {
          "type": "string",
          "description": "The event that matched the query. Only filled for `EVENT` match type."
        },
        "matchType": {
          "description": "Type of this Match.",
          "enum": [
            "MATCH_TYPE_UNSPECIFIED",
            "INTENT",
            "DIRECT_INTENT",
            "PARAMETER_FILLING",
            "NO_MATCH",
            "NO_INPUT",
            "EVENT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "The query was matched to an intent.",
            "The query directly triggered an intent.",
            "The query was used for parameter filling.",
            "No match was found for the query.",
            "Indicates an empty query.",
            "The query directly triggered an event."
          ]
        },
        "intent": {
          "description": "The Intent that matched the query. Some, not all fields are filled in this message, including but not limited to: `name` and `display_name`. Only filled for `INTENT` match type.",
          "$ref": "GoogleCloudDialogflowCxV3Intent"
        },
        "resolvedInput": {
          "type": "string",
          "description": "Final text input which was matched during MatchIntent. This value can be different from original input sent in request because of spelling correction or other processing."
        }
      }
    },
    "GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics": {
      "description": "Version variant and associated metrics.",
      "id": "GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics",
      "properties": {
        "metrics": {
          "description": "The metrics and corresponding confidence intervals in the inference result.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ExperimentResultMetric"
          },
          "type": "array"
        },
        "sessionCount": {
          "description": "Number of sessions that were allocated to this version.",
          "format": "int32",
          "type": "integer"
        },
        "version": {
          "type": "string",
          "description": "The name of the flow Version. Format: `projects//locations//agents//flows//versions/`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial": {
      "description": "Opens the user's default dialer app with the specified phone number but does not dial automatically.",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Required. The phone number to fill in the default dialer app. This field should be in [E.164](https://en.wikipedia.org/wiki/E.164) format. An example of a correctly formatted phone number: +15556767888."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial"
    },
    "GoogleCloudDialogflowCxV3QueryResult": {
      "description": "Represents the result of a conversational query.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3QueryResult",
      "properties": {
        "transcript": {
          "type": "string",
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio."
        },
        "match": {
          "$ref": "GoogleCloudDialogflowCxV3Match",
          "description": "Intent match result, could be an intent or an event."
        },
        "diagnosticInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The free-form diagnostic info. For example, this field could contain webhook call latency. The string keys of the Struct's fields map can change without notice."
        },
        "triggerEvent": {
          "type": "string",
          "description": "If an event was provided as input, this field will contain the name of the event."
        },
        "intentDetectionConfidence": {
          "format": "float",
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. This field is deprecated, please use QueryResult.match instead.",
          "type": "number"
        },
        "languageCode": {
          "type": "string",
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes."
        },
        "webhookStatuses": {
          "description": "The list of webhook call status in the order of call sequence.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "sentimentAnalysisResult": {
          "$ref": "GoogleCloudDialogflowCxV3SentimentAnalysisResult",
          "description": "The sentiment analyss result, which depends on `analyze_query_text_sentiment`, specified in the request."
        },
        "parameters": {
          "description": "The collected session parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "triggerIntent": {
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "text": {
          "description": "If natural language text was provided as input, this field will contain a copy of the text.",
          "type": "string"
        },
        "currentPage": {
          "$ref": "GoogleCloudDialogflowCxV3Page",
          "description": "The current Page. Some, not all fields are filled in this message, including but not limited to `name` and `display_name`."
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowCxV3Intent",
          "description": "The Intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name` and `display_name`. This field is deprecated, please use QueryResult.match instead."
        },
        "webhookPayloads": {
          "description": "The list of webhook payload in WebhookResponse.payload, in the order of call sequence. If some webhook call fails or doesn't return any payload, an empty `Struct` would be used instead.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object."
            }
          },
          "type": "array"
        },
        "responseMessages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          },
          "description": "The list of rich messages returned to the client. Responses vary from simple text messages to more sophisticated, structured payloads used to drive complex logic."
        }
      }
    },
    "GoogleCloudDialogflowCxV3InputAudioConfig": {
      "properties": {
        "modelVariant": {
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ],
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ],
          "type": "string",
          "description": "Optional. Which variant of the Speech model to use."
        },
        "singleUtterance": {
          "description": "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.",
          "type": "boolean"
        },
        "enableWordInfo": {
          "description": "Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.",
          "type": "boolean"
        },
        "model": {
          "type": "string",
          "description": "Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details."
        },
        "sampleRateHertz": {
          "type": "integer",
          "format": "int32",
          "description": "Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details."
        },
        "phraseHints": {
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.",
          "type": "array"
        },
        "audioEncoding": {
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "AUDIO_ENCODING_LINEAR_16",
            "AUDIO_ENCODING_FLAC",
            "AUDIO_ENCODING_MULAW",
            "AUDIO_ENCODING_AMR",
            "AUDIO_ENCODING_AMR_WB",
            "AUDIO_ENCODING_OGG_OPUS",
            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
          ],
          "type": "string",
          "description": "Required. Audio encoding of the audio content to process.",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.",
            "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000."
          ]
        }
      },
      "description": "Instructs the speech recognizer on how to process the audio content.",
      "id": "GoogleCloudDialogflowCxV3InputAudioConfig",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ExportAgentResponse": {
      "description": "The response message for Agents.ExportAgent.",
      "properties": {
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest.",
          "type": "string"
        },
        "agentContent": {
          "format": "byte",
          "description": "Uncompressed raw byte content for agent.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ExportAgentResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3Environment": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the environment. Format: `projects//locations//agents//environments/`."
        },
        "description": {
          "description": "The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.",
          "type": "string"
        },
        "versionConfigs": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EnvironmentVersionConfig"
          },
          "type": "array",
          "description": "Required. A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned."
        },
        "updateTime": {
          "description": "Output only. Update time of this environment.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      },
      "description": "Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc.",
      "id": "GoogleCloudDialogflowCxV3Environment",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3StartExperimentRequest": {
      "properties": {},
      "description": "The request message for Experiments.StartExperiment.",
      "id": "GoogleCloudDialogflowCxV3StartExperimentRequest",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageListSelectItem": {
      "description": "An item in the list.",
      "properties": {
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "description": {
          "description": "Optional. The main text describing the item.",
          "type": "string"
        },
        "info": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo",
          "description": "Required. Additional information about this option."
        },
        "title": {
          "description": "Required. The title of the list item.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageListSelectItem",
      "type": "object"
    },
    "GoogleCloudDialogflowV2AnnotatedMessagePart": {
      "id": "GoogleCloudDialogflowV2AnnotatedMessagePart",
      "description": "Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.",
      "type": "object",
      "properties": {
        "formattedValue": {
          "type": "any",
          "description": "The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { \"amount\": 5, \"currency\": \"USD\" } "
        },
        "entityType": {
          "type": "string",
          "description": "The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity."
        },
        "text": {
          "description": "A part of a message possibly annotated with an entity.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3TransitionCoverage": {
      "description": "Transition coverage represents the percentage of all possible page transitions (page-level transition routes and event handlers, excluding transition route groups) present within any of a parent's test cases.",
      "id": "GoogleCloudDialogflowCxV3TransitionCoverage",
      "properties": {
        "coverageScore": {
          "type": "number",
          "format": "float",
          "description": "The percent of transitions in the agent that are covered."
        },
        "transitions": {
          "description": "The list of Transitions present in the agent.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TransitionCoverageTransition"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Required. Output only. The current state of this operation.",
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ]
        }
      },
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "id": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "id": "GoogleProtobufEmpty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata": {
      "type": "object",
      "description": "Metadata for ReloadDocument operation.",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "id": "GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3VersionVariants": {
      "id": "GoogleCloudDialogflowCxV3VersionVariants",
      "properties": {
        "variants": {
          "type": "array",
          "description": "A list of flow version variants.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3VersionVariantsVariant"
          }
        }
      },
      "description": "A list of flow version variants.",
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "description": "The response message for Operations.ListOperations."
    },
    "GoogleCloudDialogflowV2ArticleAnswer": {
      "description": "Represents article answer.",
      "properties": {
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "title": {
          "description": "The article title.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "The article URI."
        },
        "confidence": {
          "description": "Article match confidence. The system's confidence score that this article is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        },
        "snippets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Article snippets."
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "type": "object"
        }
      },
      "id": "GoogleCloudDialogflowV2ArticleAnswer",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1WebhookResponse": {
      "description": "The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `\"\"` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).",
      "properties": {
        "outputContexts": {
          "description": "Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          }
        },
        "followupEventInput": {
          "description": "Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields.",
          "$ref": "GoogleCloudDialogflowV2beta1EventInput"
        },
        "payload": {
          "type": "object",
          "description": "Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "fulfillmentText": {
          "type": "string",
          "description": "Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller."
        },
        "sessionEntityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SessionEntityType"
          },
          "description": "Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.",
          "type": "array"
        },
        "endInteraction": {
          "type": "boolean",
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false."
        },
        "liveAgentHandoff": {
          "type": "boolean",
          "description": "Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false."
        },
        "fulfillmentMessages": {
          "description": "Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          },
          "type": "array"
        },
        "source": {
          "description": "Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1WebhookResponse"
    },
    "GoogleCloudDialogflowCxV3beta1TextInput": {
      "properties": {
        "text": {
          "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.",
          "type": "string"
        }
      },
      "description": "Represents the natural language text to be processed.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1TextInput"
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput": {
      "properties": {
        "input": {
          "description": "Supports text input, event input, dtmf input in the test case.",
          "$ref": "GoogleCloudDialogflowCxV3beta1QueryInput"
        },
        "isWebhookEnabled": {
          "type": "boolean",
          "description": "If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled."
        },
        "injectedParameters": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Parameters that need to be injected into the conversation during intent detection."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput",
      "description": "The input from the human user."
    },
    "GoogleCloudDialogflowCxV3beta1TestError": {
      "description": "Error info for running a test.",
      "properties": {
        "testTime": {
          "type": "string",
          "description": "The timestamp when the test was completed.",
          "format": "google-datetime"
        },
        "testCase": {
          "description": "The test case resource name.",
          "type": "string"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status associated with the test."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1TestError",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSuggestions": {
      "description": "The collection of suggestions.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSuggestions",
      "type": "object",
      "properties": {
        "suggestions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSuggestion"
          },
          "description": "Required. The list of suggested replies."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1WebhookRequest": {
      "properties": {
        "session": {
          "description": "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`,",
          "type": "string"
        },
        "originalDetectIntentRequest": {
          "$ref": "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest",
          "description": "Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call."
        },
        "queryResult": {
          "description": "The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.",
          "$ref": "GoogleCloudDialogflowV2beta1QueryResult"
        },
        "responseId": {
          "description": "The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`.",
          "type": "string"
        },
        "alternativeQueryResults": {
          "description": "Alternative query results from KnowledgeService.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1QueryResult"
          },
          "type": "array"
        }
      },
      "description": "The request message for a webhook call.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1WebhookRequest"
    },
    "GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata": {
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata",
      "description": "Metadata for ImportDocuments operation."
    },
    "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Custom metadata. Dialogflow doesn't impose any structure on this."
        }
      },
      "id": "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess",
      "type": "object",
      "description": "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue."
    },
    "GoogleCloudDialogflowV2IntentTrainingPhrasePart": {
      "properties": {
        "entityType": {
          "type": "string",
          "description": "Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase."
        },
        "alias": {
          "description": "Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase.",
          "type": "string"
        },
        "userDefined": {
          "type": "boolean",
          "description": "Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true."
        },
        "text": {
          "description": "Required. The text for this part.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentTrainingPhrasePart",
      "description": "Represents a part of a training phrase."
    },
    "GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata",
      "description": "Metadata returned for the TestCases.RunTestCase long running operation."
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase": {
      "properties": {
        "condition": {
          "description": "The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).",
          "type": "string"
        },
        "caseContent": {
          "description": "A list of case content.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase",
      "type": "object",
      "description": "Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively."
    },
    "GoogleCloudDialogflowV2ExportAgentResponse": {
      "id": "GoogleCloudDialogflowV2ExportAgentResponse",
      "type": "object",
      "properties": {
        "agentUri": {
          "type": "string",
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`."
        },
        "agentContent": {
          "type": "string",
          "description": "Zip compressed raw byte content for agent.",
          "format": "byte"
        }
      },
      "description": "The response message for Agents.ExportAgent."
    },
    "GoogleCloudDialogflowCxV3beta1QueryInput": {
      "description": "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. ",
      "properties": {
        "audio": {
          "description": "The natural language speech audio to be processed.",
          "$ref": "GoogleCloudDialogflowCxV3beta1AudioInput"
        },
        "dtmf": {
          "description": "The DTMF event to be handled.",
          "$ref": "GoogleCloudDialogflowCxV3beta1DtmfInput"
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowCxV3beta1IntentInput",
          "description": "The intent to be triggered."
        },
        "event": {
          "$ref": "GoogleCloudDialogflowCxV3beta1EventInput",
          "description": "The event to be triggered."
        },
        "languageCode": {
          "description": "Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        },
        "text": {
          "description": "The natural language text to be processed.",
          "$ref": "GoogleCloudDialogflowCxV3beta1TextInput"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1QueryInput",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageImage": {
      "properties": {
        "accessibilityText": {
          "type": "string",
          "description": "Optional. A text description of the image to be used for accessibility, e.g., screen readers."
        },
        "imageUri": {
          "type": "string",
          "description": "Optional. The public URI to an image file."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageImage",
      "description": "The image response message."
    },
    "GoogleCloudDialogflowCxV3OutputAudioConfig": {
      "id": "GoogleCloudDialogflowCxV3OutputAudioConfig",
      "type": "object",
      "description": "Instructs the speech synthesizer how to generate the output audio content.",
      "properties": {
        "synthesizeSpeechConfig": {
          "description": "Optional. Configuration of how speech should be synthesized.",
          "$ref": "GoogleCloudDialogflowCxV3SynthesizeSpeechConfig"
        },
        "audioEncoding": {
          "description": "Required. Audio encoding of the synthesized audio content.",
          "enum": [
            "OUTPUT_AUDIO_ENCODING_UNSPECIFIED",
            "OUTPUT_AUDIO_ENCODING_LINEAR_16",
            "OUTPUT_AUDIO_ENCODING_MP3",
            "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS",
            "OUTPUT_AUDIO_ENCODING_OGG_OPUS",
            "OUTPUT_AUDIO_ENCODING_MULAW"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM). Audio content returned as LINEAR16 also contains a WAV header.",
            "MP3 audio at 32kbps.",
            "MP3 audio at 64kbps.",
            "Opus encoded audio wrapped in an ogg container. The result will be a file which can be played natively on Android, and in browsers (at least Chrome and Firefox). The quality of the encoding is considerably higher than MP3 while using approximately the same bitrate.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law."
          ]
        },
        "sampleRateHertz": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality)."
        }
      }
    },
    "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction": {
      "properties": {
        "value": {
          "description": "The new value of the parameter. A null value clears the parameter.",
          "type": "any"
        },
        "parameter": {
          "description": "Display name of the parameter.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction",
      "description": "Setting a parameter value."
    },
    "GoogleCloudDialogflowCxV3TestCaseResult": {
      "properties": {
        "testResult": {
          "type": "string",
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "The test passed.",
            "The test did not pass."
          ],
          "enum": [
            "TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ],
          "description": "Whether the test case passed in the agent environment."
        },
        "conversationTurns": {
          "description": "The conversation turns uttered during the test case replay in chronological order.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ConversationTurn"
          }
        },
        "name": {
          "type": "string",
          "description": "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`."
        },
        "testTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time that the test was run."
        },
        "environment": {
          "description": "Environment where the test was run. If not set, it indicates the draft environment.",
          "type": "string"
        }
      },
      "description": "Represents a result from running a test case in an agent environment.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3TestCaseResult"
    },
    "GoogleCloudDialogflowCxV3beta1InputAudioConfig": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1InputAudioConfig",
      "description": "Instructs the speech recognizer on how to process the audio content.",
      "properties": {
        "modelVariant": {
          "type": "string",
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ],
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ],
          "description": "Optional. Which variant of the Speech model to use."
        },
        "phraseHints": {
          "description": "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enableWordInfo": {
          "description": "Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.",
          "type": "boolean"
        },
        "sampleRateHertz": {
          "format": "int32",
          "description": "Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.",
          "type": "integer"
        },
        "model": {
          "type": "string",
          "description": "Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details."
        },
        "audioEncoding": {
          "type": "string",
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "AUDIO_ENCODING_LINEAR_16",
            "AUDIO_ENCODING_FLAC",
            "AUDIO_ENCODING_MULAW",
            "AUDIO_ENCODING_AMR",
            "AUDIO_ENCODING_AMR_WB",
            "AUDIO_ENCODING_OGG_OPUS",
            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
          ],
          "description": "Required. Audio encoding of the audio content to process.",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.",
            "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000."
          ]
        },
        "singleUtterance": {
          "description": "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata": {
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "id": "GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata",
      "properties": {
        "state": {
          "description": "Required. Output only. The current state of this operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "type": "string",
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo": {
      "type": "object",
      "description": "Represents form information.",
      "properties": {
        "parameterInfo": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo"
          },
          "description": "Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo"
    },
    "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          },
          "description": "The list of rich message responses to present to the user."
        },
        "mergeBehavior": {
          "enumDescriptions": [
            "Not specified. `APPEND` will be used.",
            "`messages` will be appended to the list of messages waiting to be sent to the user.",
            "`messages` will replace the list of messages waiting to be sent to the user."
          ],
          "description": "Merge behavior for `messages`.",
          "type": "string",
          "enum": [
            "MERGE_BEHAVIOR_UNSPECIFIED",
            "APPEND",
            "REPLACE"
          ]
        }
      },
      "description": "Represents a fulfillment response to the user.",
      "id": "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse"
    },
    "GoogleCloudDialogflowCxV3SentimentAnalysisResult": {
      "type": "object",
      "properties": {
        "magnitude": {
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "format": "float",
          "type": "number"
        },
        "score": {
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "format": "float",
          "type": "number"
        }
      },
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral.",
      "id": "GoogleCloudDialogflowCxV3SentimentAnalysisResult"
    },
    "GoogleCloudDialogflowCxV3TextInput": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters."
        }
      },
      "id": "GoogleCloudDialogflowCxV3TextInput",
      "type": "object",
      "description": "Represents the natural language text to be processed."
    },
    "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput": {
      "type": "object",
      "properties": {
        "differences": {
          "description": "Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.",
          "readOnly": true,
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestRunDifference"
          },
          "type": "array"
        },
        "currentPage": {
          "$ref": "GoogleCloudDialogflowCxV3Page",
          "description": "The Page on which the utterance was spoken. Only name and displayName will be set."
        },
        "textResponses": {
          "description": "The text responses from the agent for the turn.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessageText"
          }
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "Response error from the agent in the test result. If set, other output is empty."
        },
        "sessionParameters": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The session parameters available to the bot at this point."
        },
        "diagnosticInfo": {
          "type": "object",
          "description": "Required. Input only. The diagnostic info output for the turn.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "triggeredIntent": {
          "$ref": "GoogleCloudDialogflowCxV3Intent",
          "description": "The Intent that triggered the response. Only name and displayName will be set."
        }
      },
      "description": "The output from the virtual agent.",
      "id": "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput"
    },
    "GoogleCloudDialogflowCxV3WebhookGenericWebService": {
      "description": "Represents configuration for a generic web service.",
      "properties": {
        "password": {
          "type": "string",
          "description": "The password for HTTP Basic authentication."
        },
        "uri": {
          "description": "Required. The webhook URI for receiving POST requests. It must use https protocol.",
          "type": "string"
        },
        "username": {
          "description": "The user name for HTTP Basic authentication.",
          "type": "string"
        },
        "requestHeaders": {
          "type": "object",
          "description": "The HTTP request headers to send together with webhook requests.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3WebhookGenericWebService"
    },
    "GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata",
      "properties": {},
      "type": "object",
      "description": "Metadata returned for the TestCases.ExportTestCases long running operation."
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurn": {
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurn",
      "type": "object",
      "properties": {
        "userInput": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput",
          "description": "The user input."
        },
        "virtualAgentOutput": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput",
          "description": "The virtual agent output."
        }
      },
      "description": "One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response."
    },
    "GoogleCloudDialogflowCxV3ValidateFlowRequest": {
      "description": "The request message for Flows.ValidateFlow.",
      "id": "GoogleCloudDialogflowCxV3ValidateFlowRequest",
      "properties": {
        "languageCode": {
          "description": "If not specified, the agent's default language is used.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard",
      "description": "Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel",
      "properties": {
        "items": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          },
          "description": "Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.",
          "type": "array"
        },
        "imageDisplayOptions": {
          "enumDescriptions": [
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with white bars.",
            "Image is scaled such that the image width and height match or exceed the container dimensions. This may crop the top and bottom of the image if the scaled image height is greater than the container height, or crop the left and right of the image if the scaled image width is greater than the container width. This is similar to \"Zoom Mode\" on a widescreen TV when playing a 4:3 video.",
            "Pad the gaps between image and image frame with a blurred copy of the same image."
          ],
          "enum": [
            "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED",
            "GRAY",
            "WHITE",
            "CROPPED",
            "BLURRED_BACKGROUND"
          ],
          "description": "Optional. Settings for displaying the image. Applies to every image in items.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment": {
      "description": "Represents one segment of audio.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment",
      "properties": {
        "uri": {
          "description": "Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.",
          "type": "string"
        },
        "audio": {
          "type": "string",
          "format": "byte",
          "description": "Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request."
        },
        "allowPlaybackInterruption": {
          "type": "boolean",
          "description": "Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.",
          "readOnly": true
        }
      }
    },
    "GoogleCloudDialogflowV2SuggestFaqAnswersResponse": {
      "description": "The request message for Participants.SuggestFaqAnswers.",
      "properties": {
        "faqAnswers": {
          "type": "array",
          "description": "Answers extracted from FAQ documents.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2FaqAnswer"
          }
        },
        "latestMessage": {
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.",
          "type": "string"
        },
        "contextSize": {
          "type": "integer",
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1TestCase": {
      "properties": {
        "displayName": {
          "description": "Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."
        },
        "testConfig": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TestConfig",
          "description": "Config for the test case."
        },
        "notes": {
          "type": "string",
          "description": "Additional freeform notes about the test case. Limit of 400 characters."
        },
        "lastTestResult": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult",
          "description": "The latest test result."
        },
        "testCaseConversationTurns": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurn"
          },
          "description": "The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.",
          "type": "array"
        },
        "creationTime": {
          "type": "string",
          "description": "Output only. When the test was created.",
          "readOnly": true,
          "format": "google-datetime"
        },
        "tags": {
          "type": "array",
          "description": "Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with \"#\" and has a limit of 30 characters.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Represents a test case.",
      "id": "GoogleCloudDialogflowCxV3beta1TestCase"
    },
    "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase": {
      "properties": {
        "repeatCount": {
          "type": "integer",
          "description": "Indicates how many times this example was added to the intent.",
          "format": "int32"
        },
        "id": {
          "description": "Output only. The unique identifier of the training phrase.",
          "type": "string"
        },
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart"
          },
          "type": "array",
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase",
      "description": "Represents an example that the agent is trained on to identify the intent.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageCarouselSelect": {
      "type": "object",
      "description": "The card for presenting a carousel of options to select from.",
      "properties": {
        "items": {
          "description": "Required. Carousel items.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageCarouselSelect"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation": {
      "description": "Opens the device's location chooser so the user can pick a location to send back to the agent.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult": {
      "properties": {
        "magnitude": {
          "type": "number",
          "format": "float",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative)."
        },
        "score": {
          "format": "float",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "type": "number"
        }
      },
      "description": "Represents the result of sentiment analysis.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult"
    },
    "GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode": {
      "type": "object",
      "properties": {
        "flow": {
          "$ref": "GoogleCloudDialogflowCxV3Flow",
          "description": "Indicates a transition to a Flow. Only some fields such as name and displayname will be set."
        },
        "page": {
          "description": "Indicates a transition to a Page. Only some fields such as name and displayname will be set.",
          "$ref": "GoogleCloudDialogflowCxV3Page"
        }
      },
      "description": "The source or target of a transition.",
      "id": "GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode"
    },
    "GoogleCloudDialogflowCxV3SessionInfo": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3SessionInfo",
      "description": "Represents session information communicated to and from the webhook.",
      "properties": {
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "any"
          },
          "description": "Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names."
        },
        "session": {
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3LookupEnvironmentHistoryResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "environments": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3Environment"
          },
          "description": "Represents a list of snapshots for an environment. Time of the snapshots is stored in `update_time`.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3LookupEnvironmentHistoryResponse",
      "description": "The response message for Environments.LookupEnvironmentHistory.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3VersionVariantsVariant": {
      "description": "A single flow version with specified traffic allocation.",
      "properties": {
        "isControlGroup": {
          "type": "boolean",
          "description": "Whether the variant is for the control group."
        },
        "trafficAllocation": {
          "type": "number",
          "description": "Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.",
          "format": "float"
        },
        "version": {
          "description": "The name of the flow version. Format: `projects//locations//agents//flows//versions/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3VersionVariantsVariant",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCardButton": {
      "properties": {
        "title": {
          "description": "Required. The title of the button.",
          "type": "string"
        },
        "openUriAction": {
          "description": "Required. Action to take when a user taps on the button.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction"
        }
      },
      "type": "object",
      "description": "The button object that appears at the bottom of a card.",
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCardButton"
    },
    "GoogleCloudDialogflowV2IntentMessageMediaContent": {
      "description": "The media content card for Actions on Google.",
      "properties": {
        "mediaObjects": {
          "description": "Required. List of media objects.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject"
          },
          "type": "array"
        },
        "mediaType": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Response media type is audio."
          ],
          "enum": [
            "RESPONSE_MEDIA_TYPE_UNSPECIFIED",
            "AUDIO"
          ],
          "description": "Optional. What type of media is the content (ie \"audio\")."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageMediaContent",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "description": "Always present. The tag used to identify which fulfillment is being called."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo",
      "description": "Represents fulfillment information communicated to the webhook."
    },
    "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff": {
      "description": "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this."
        }
      }
    },
    "GoogleCloudDialogflowCxV3IntentInput": {
      "description": "Represents the intent to trigger programmatically rather than as a result of natural language processing.",
      "properties": {
        "intent": {
          "type": "string",
          "description": "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3IntentInput"
    },
    "GoogleCloudDialogflowCxV3LoadVersionRequest": {
      "type": "object",
      "properties": {
        "allowOverrideAgentResources": {
          "description": "This field is used to prevent accidental overwrite of other agent resources, which can potentially impact other flow's behavior. If `allow_override_agent_resources` is false, conflicted agent-level resources will not be overridden (i.e. intents, entities, webhooks).",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDialogflowCxV3LoadVersionRequest",
      "description": "The request message for Versions.LoadVersion."
    },
    "GoogleCloudDialogflowCxV3SessionEntityType": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment."
        },
        "entities": {
          "description": "Required. The collection of entities to override or supplement the custom entity type.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EntityTypeEntity"
          },
          "type": "array"
        },
        "entityOverrideMode": {
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition.",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ],
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ],
          "type": "string"
        }
      },
      "description": "Session entity types are referred to as **User** entity types and are entities that are built for an individual user such as favorites, preferences, playlists, and so on. You can redefine a session entity type at the session level to extend or replace a custom entity type at the user session level (we refer to the entity types defined at the agent level as \"custom entity types\"). Note: session entity types apply to all queries, regardless of the language. For more information about entity types, see the [Dialogflow documentation](https://cloud.google.com/dialogflow/docs/entities-overview).",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3SessionEntityType"
    },
    "GoogleCloudDialogflowCxV3ListTestCasesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "testCases": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestCase"
          },
          "type": "array",
          "description": "The list of test cases. There will be a maximum number of items returned based on the page_size field in the request."
        }
      },
      "id": "GoogleCloudDialogflowCxV3ListTestCasesResponse",
      "type": "object",
      "description": "The response message for TestCases.ListTestCases."
    },
    "GoogleCloudDialogflowV2beta1SuggestionResult": {
      "description": "One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.",
      "properties": {
        "suggestSmartRepliesResponse": {
          "description": "SuggestSmartRepliesResponse if request is for SMART_REPLY.",
          "$ref": "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse"
        },
        "suggestArticlesResponse": {
          "$ref": "GoogleCloudDialogflowV2beta1SuggestArticlesResponse",
          "description": "SuggestArticlesResponse if request is for ARTICLE_SUGGESTION."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Error status if the request failed."
        },
        "suggestFaqAnswersResponse": {
          "$ref": "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse",
          "description": "SuggestFaqAnswersResponse if request is for FAQ_ANSWER."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1SuggestionResult"
    },
    "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior": {
      "description": "Configuration for how the filling of a parameter should be handled.",
      "id": "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior",
      "type": "object",
      "properties": {
        "initialPromptFulfillment": {
          "description": "Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment"
        },
        "repromptEventHandlers": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EventHandler"
          },
          "description": "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3Flow": {
      "properties": {
        "nluSettings": {
          "$ref": "GoogleCloudDialogflowCxV3NluSettings",
          "description": "NLU related settings of the flow."
        },
        "name": {
          "description": "The unique identifier of the flow. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "eventHandlers": {
          "type": "array",
          "description": "A flow's event handlers serve two purposes: * They are responsible for handling events (e.g. no match, webhook errors) in the flow. * They are inherited by every page's event handlers, which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow. Unlike transition_routes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EventHandler"
          }
        },
        "transitionRoutes": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TransitionRoute"
          },
          "type": "array",
          "description": "A flow's transition routes serve two purposes: * They are responsible for matching the user's first utterances in the flow. * They are inherited by every page's transition routes and can support use cases such as the user saying \"help\" or \"can I talk to a human?\", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow. TransitionRoutes are evalauted in the following order: * TransitionRoutes with intent specified.. * TransitionRoutes with only condition specified. TransitionRoutes with intent specified are inherited by pages in the flow."
        },
        "description": {
          "type": "string",
          "description": "The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the flow."
        },
        "transitionRouteGroups": {
          "items": {
            "type": "string"
          },
          "description": "A flow's transition route group serve two purposes: * They are responsible for matching the user's first utterances in the flow. * They are inherited by every page's transition route groups. Transition route groups defined in the page have higher priority than those defined in the flow. Format:`projects//locations//agents//flows//transitionRouteGroups/`.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Flows represents the conversation flows when you build your chatbot agent. A flow consists of many pages connected by the transition routes. Conversations always start with the built-in Start Flow (with an all-0 ID). Transition routes can direct the conversation session from the current flow (parent flow) to another flow (sub flow). When the sub flow is finished, Dialogflow will bring the session back to the parent flow, where the sub flow is started. Usually, when a transition route is followed by a matched intent, the intent will be \"consumed\". This means the intent won't activate more transition routes. However, when the followed transition route moves the conversation session into a different flow, the matched intent can be carried over and to be consumed in the target flow.",
      "id": "GoogleCloudDialogflowCxV3Flow"
    },
    "GoogleCloudDialogflowV2FaqAnswer": {
      "properties": {
        "source": {
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`.",
          "type": "string"
        },
        "answer": {
          "description": "The piece of text from the `source` knowledge base document.",
          "type": "string"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        },
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "metadata": {
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "confidence": {
          "format": "float",
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        }
      },
      "description": "Represents answer from \"frequently asked questions\".",
      "type": "object",
      "id": "GoogleCloudDialogflowV2FaqAnswer"
    },
    "GoogleCloudDialogflowCxV3TestConfig": {
      "properties": {
        "trackingParameters": {
          "items": {
            "type": "string"
          },
          "description": "Session parameters to be compared when calculating differences.",
          "type": "array"
        },
        "flow": {
          "description": "Flow name. If not set, default start flow is assumed. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3TestConfig",
      "type": "object",
      "description": "Represents configurations for a test case."
    },
    "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion": {
      "type": "object",
      "properties": {
        "destinationName": {
          "type": "string",
          "description": "Required. The name of the app or site this chip is linking to."
        },
        "uri": {
          "description": "Required. The URI of the app or site to open when the user taps the suggestion chip.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion",
      "description": "The suggestion chip message that allows the user to jump out to the app or website associated with this agent."
    },
    "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it."
        },
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "description": "Specifies an audio clip to be played by the client as part of the response."
    },
    "GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata": {
      "description": "Metadata returned for the TestCases.ImportTestCases long running operation.",
      "type": "object",
      "properties": {
        "errors": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseError"
          },
          "type": "array",
          "description": "Errors for failed test cases."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata",
      "description": "Metadata for ReloadDocument operation.",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
        }
      }
    },
    "GoogleCloudDialogflowV2OriginalDetectIntentRequest": {
      "properties": {
        "version": {
          "description": "Optional. The version of the protocol used for this request. This field is AoG-specific.",
          "type": "string"
        },
        "source": {
          "description": "The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers.",
          "type": "string"
        },
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { \"telephony\": { \"caller_id\": \"+18558363987\" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.",
          "type": "object"
        }
      },
      "id": "GoogleCloudDialogflowV2OriginalDetectIntentRequest",
      "type": "object",
      "description": "Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call."
    },
    "GoogleCloudDialogflowCxV3RunTestCaseMetadata": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3RunTestCaseMetadata",
      "properties": {},
      "description": "Metadata returned for the TestCases.RunTestCase long running operation."
    },
    "GoogleCloudDialogflowV2beta1Message": {
      "id": "GoogleCloudDialogflowV2beta1Message",
      "type": "object",
      "description": "Represents a message posted into a conversation.",
      "properties": {
        "sendTime": {
          "type": "string",
          "description": "Optional. The time when the message was sent.",
          "format": "google-datetime"
        },
        "sentimentAnalysis": {
          "description": "Output only. The sentiment analysis result for the message.",
          "$ref": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult",
          "readOnly": true
        },
        "content": {
          "type": "string",
          "description": "Required. The message content."
        },
        "participantRole": {
          "type": "string",
          "description": "Output only. The role of the participant.",
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ],
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
        },
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time when the message was created in Contact Center AI.",
          "type": "string"
        },
        "participant": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The participant that sends this message."
        },
        "languageCode": {
          "description": "Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
          "type": "string"
        },
        "messageAnnotation": {
          "$ref": "GoogleCloudDialogflowV2beta1MessageAnnotation",
          "description": "Output only. The annotation for the message.",
          "readOnly": true
        }
      }
    },
    "GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse": {
      "id": "GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse",
      "type": "object",
      "properties": {
        "intents": {
          "type": "array",
          "description": "The collection of updated or created intents.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Intent"
          }
        }
      },
      "description": "The response message for Intents.BatchUpdateIntents."
    },
    "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult": {
      "type": "object",
      "description": "Represents the result of sentiment analysis.",
      "properties": {
        "score": {
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "type": "number",
          "format": "float"
        },
        "magnitude": {
          "type": "number",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "format": "float"
        }
      },
      "id": "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult"
    },
    "GoogleCloudDialogflowCxV3ListEntityTypesResponse": {
      "id": "GoogleCloudDialogflowCxV3ListEntityTypesResponse",
      "properties": {
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EntityType"
          },
          "type": "array",
          "description": "The list of entity types. There will be a maximum number of items returned based on the page_size field in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "description": "The response message for EntityTypes.ListEntityTypes.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCases": {
      "type": "object",
      "properties": {
        "cases": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase"
          },
          "description": "A list of cascading if-else conditions.",
          "type": "array"
        }
      },
      "description": "A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.",
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "agents": {
              "methods": {
                "patch": {
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3Agent"
                  },
                  "description": "Updates the specified agent.",
                  "path": "v3/{+name}",
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3Agent"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}",
                  "id": "dialogflow.projects.locations.agents.patch",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                      "description": "The unique identifier of the agent. Required for the Agents.UpdateAgent method. Agents.CreateAgent populates the name automatically. Format: `projects//locations//agents/`.",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.locations.agents.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the agent to delete. Format: `projects//locations//agents/`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$"
                    }
                  },
                  "description": "Deletes the specified agent.",
                  "path": "v3/{+name}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  }
                },
                "validate": {
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}:validate",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                      "description": "Required. The agent to validate. Format: `projects//locations//agents/`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3AgentValidationResult"
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3ValidateAgentRequest"
                  },
                  "path": "v3/{+name}:validate",
                  "description": "Validates the specified agent and creates or updates validation results. The agent in draft version is validated. Please call this API after the training is completed to get the complete validation results.",
                  "id": "dialogflow.projects.locations.agents.validate",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST"
                },
                "create": {
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.agents.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates an agent in the specified location.",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The location to create a agent for. Format: `projects//locations/`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3Agent"
                  },
                  "path": "v3/{+parent}/agents",
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3Agent"
                  },
                  "httpMethod": "POST"
                },
                "get": {
                  "path": "v3/{+name}",
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3Agent"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.locations.agents.get",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the agent. Format: `projects//locations//agents/`.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "description": "Retrieves the specified agent.",
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}"
                },
                "getValidationResult": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v3/{+name}",
                  "parameters": {
                    "languageCode": {
                      "type": "string",
                      "location": "query",
                      "description": "If not specified, the agent's default language is used."
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/validationResult$",
                      "type": "string",
                      "description": "Required. The agent name. Format: `projects//locations//agents//validationResult`."
                    }
                  },
                  "id": "dialogflow.projects.locations.agents.getValidationResult",
                  "description": "Gets the latest agent validation result. Agent validation is performed when ValidateAgent is called.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3AgentValidationResult"
                  },
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/validationResult",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "export": {
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}:export",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v3/{+name}:export",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the agent to export. Format: `projects//locations//agents/`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.agents.export",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3ExportAgentRequest"
                  },
                  "description": "Exports the specified agent to a binary file."
                },
                "restore": {
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3RestoreAgentRequest"
                  },
                  "description": "Restores the specified agent from a binary file. Replaces the current agent with a new one. Note that all existing resources in agent (e.g. intents, entity types, flows) will be removed.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the agent to restore into. Format: `projects//locations//agents/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v3/{+name}:restore",
                  "id": "dialogflow.projects.locations.agents.restore",
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}:restore",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3ListAgentsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "Required. The location to list all agents for. Format: `projects//locations/`."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous list request."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "description": "Returns the list of all agents in the specified location.",
                  "path": "v3/{+parent}/agents",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents",
                  "id": "dialogflow.projects.locations.agents.list"
                }
              },
              "resources": {
                "intents": {
                  "methods": {
                    "get": {
                      "path": "v3/{+name}",
                      "parameters": {
                        "languageCode": {
                          "description": "The language to retrieve the intent for. The following fields are language dependent: * `Intent.training_phrases.parts.text` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the intent. Format: `projects//locations//agents//intents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/intents/[^/]+$"
                        }
                      },
                      "id": "dialogflow.projects.locations.agents.intents.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Retrieves the specified intent.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3Intent"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents/{intentsId}",
                      "httpMethod": "GET"
                    },
                    "delete": {
                      "id": "dialogflow.projects.locations.agents.intents.delete",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents/{intentsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Deletes the specified intent.",
                      "path": "v3/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the intent to delete. Format: `projects//locations//agents//intents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/intents/[^/]+$",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      }
                    },
                    "create": {
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3Intent"
                      },
                      "parameters": {
                        "parent": {
                          "description": "Required. The agent to create an intent for. Format: `projects//locations//agents/`.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "required": true
                        },
                        "languageCode": {
                          "description": "The language of the following fields in `intent`: * `Intent.training_phrases.parts.text` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "path": "v3/{+parent}/intents",
                      "description": "Creates an intent in the specified agent.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.intents.create",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3Intent"
                      },
                      "httpMethod": "POST",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3Intent"
                      },
                      "id": "dialogflow.projects.locations.agents.intents.patch",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents/{intentsId}",
                      "description": "Updates the specified intent.",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated."
                        },
                        "languageCode": {
                          "description": "The language of the following fields in `intent`: * `Intent.training_phrases.parts.text` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/intents/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`."
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3Intent"
                      },
                      "path": "v3/{+name}"
                    },
                    "list": {
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "location": "query"
                        },
                        "languageCode": {
                          "location": "query",
                          "type": "string",
                          "description": "The language to list intents for. The following fields are language dependent: * `Intent.training_phrases.parts.text` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                        },
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The agent to list all intents for. Format: `projects//locations//agents/`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$"
                        },
                        "intentView": {
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_PARTIAL",
                            "INTENT_VIEW_FULL"
                          ],
                          "enumDescriptions": [
                            "Not specified. Treated as INTENT_VIEW_FULL.",
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ],
                          "location": "query",
                          "type": "string",
                          "description": "The resource view to apply to the returned intent."
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3ListIntentsResponse"
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/intents",
                      "description": "Returns the list of all intents in the specified agent.",
                      "path": "v3/{+parent}/intents",
                      "id": "dialogflow.projects.locations.agents.intents.list"
                    }
                  }
                },
                "environments": {
                  "methods": {
                    "create": {
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. The Agent to create an Environment for. Format: `projects//locations//agents/`.",
                          "type": "string"
                        }
                      },
                      "path": "v3/{+parent}/environments",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "id": "dialogflow.projects.locations.agents.environments.create",
                      "httpMethod": "POST",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Creates an Environment in the specified Agent.",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3Environment"
                      }
                    },
                    "lookupEnvironmentHistory": {
                      "path": "v3/{+name}:lookupEnvironmentHistory",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}:lookupEnvironmentHistory",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3LookupEnvironmentHistoryResponse"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. Resource name of the environment to look up the history for. Format: `projects//locations//agents//environments/`.",
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                          "required": true
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "The next_page_token value returned from a previous list request.",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "type": "integer"
                        }
                      },
                      "description": "Looks up the history of the specified Environment.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.environments.lookupEnvironmentHistory",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "get": {
                      "id": "dialogflow.projects.locations.agents.environments.get",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the Environment. Format: `projects//locations//agents//environments/`.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3Environment"
                      },
                      "description": "Retrieves the specified Environment.",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v3/{+name}",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "patch": {
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3Environment"
                      },
                      "httpMethod": "PATCH",
                      "description": "Updates the specified Environment.",
                      "path": "v3/{+name}",
                      "id": "dialogflow.projects.locations.agents.environments.patch",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                          "required": true,
                          "description": "The name of the environment. Format: `projects//locations//agents//environments/`."
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "Required. The mask to control which fields get updated.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "path": "v3/{+parent}/environments",
                      "httpMethod": "GET",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments",
                      "id": "dialogflow.projects.locations.agents.environments.list",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3ListEnvironmentsResponse"
                      },
                      "description": "Returns the list of all environments in the specified Agent.",
                      "parameters": {
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The Agent to list all environments for. Format: `projects//locations//agents/`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "location": "path"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "type": "integer",
                          "description": "The maximum number of items to return in a single page. By default 20 and at most 100."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "delete": {
                      "id": "dialogflow.projects.locations.agents.environments.delete",
                      "path": "v3/{+name}",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the Environment to delete. Format: `projects//locations//agents//environments/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Deletes the specified Environment.",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}"
                    }
                  },
                  "resources": {
                    "sessions": {
                      "methods": {
                        "matchIntent": {
                          "path": "v3/{+session}:matchIntent",
                          "id": "dialogflow.projects.locations.agents.environments.sessions.matchIntent",
                          "parameterOrder": [
                            "session"
                          ],
                          "parameters": {
                            "session": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session)."
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3MatchIntentResponse"
                          },
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3MatchIntentRequest"
                          },
                          "httpMethod": "POST",
                          "description": "Returns preliminary intent match results, doesn't change the session status.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}:matchIntent"
                        },
                        "fulfillIntent": {
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3FulfillIntentResponse"
                          },
                          "path": "v3/{+session}:fulfillIntent",
                          "id": "dialogflow.projects.locations.agents.environments.sessions.fulfillIntent",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "session"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3FulfillIntentRequest"
                          },
                          "description": "Fulfills a matched intent returned by MatchIntent. Must be called after MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is undefined.",
                          "parameters": {
                            "session": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+$",
                              "location": "path",
                              "required": true,
                              "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session)."
                            }
                          },
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}:fulfillIntent",
                          "httpMethod": "POST"
                        },
                        "detectIntent": {
                          "id": "dialogflow.projects.locations.agents.environments.sessions.detectIntent",
                          "httpMethod": "POST",
                          "path": "v3/{+session}:detectIntent",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "session"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3DetectIntentRequest"
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3DetectIntentResponse"
                          },
                          "parameters": {
                            "session": {
                              "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+$",
                              "location": "path",
                              "required": true
                            }
                          },
                          "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}:detectIntent"
                        }
                      },
                      "resources": {
                        "entityTypes": {
                          "methods": {
                            "get": {
                              "parameters": {
                                "name": {
                                  "type": "string",
                                  "location": "path",
                                  "required": true,
                                  "description": "Required. The name of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+/entityTypes/[^/]+$"
                                }
                              },
                              "httpMethod": "GET",
                              "path": "v3/{+name}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "response": {
                                "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
                              },
                              "description": "Retrieves the specified session entity type.",
                              "id": "dialogflow.projects.locations.agents.environments.sessions.entityTypes.get",
                              "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "parameterOrder": [
                                "name"
                              ]
                            },
                            "list": {
                              "response": {
                                "$ref": "GoogleCloudDialogflowCxV3ListSessionEntityTypesResponse"
                              },
                              "path": "v3/{+parent}/entityTypes",
                              "parameters": {
                                "parent": {
                                  "type": "string",
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+$",
                                  "description": "Required. The session to list all session entity types from. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                                  "required": true
                                },
                                "pageSize": {
                                  "location": "query",
                                  "format": "int32",
                                  "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                                  "type": "integer"
                                },
                                "pageToken": {
                                  "type": "string",
                                  "description": "The next_page_token value returned from a previous list request.",
                                  "location": "query"
                                }
                              },
                              "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes",
                              "description": "Returns the list of all session entity types in the specified session.",
                              "id": "dialogflow.projects.locations.agents.environments.sessions.entityTypes.list",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "httpMethod": "GET",
                              "parameterOrder": [
                                "parent"
                              ]
                            },
                            "delete": {
                              "parameters": {
                                "name": {
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                  "location": "path",
                                  "description": "Required. The name of the session entity type to delete. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                                  "type": "string",
                                  "required": true
                                }
                              },
                              "httpMethod": "DELETE",
                              "response": {
                                "$ref": "GoogleProtobufEmpty"
                              },
                              "id": "dialogflow.projects.locations.agents.environments.sessions.entityTypes.delete",
                              "path": "v3/{+name}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "parameterOrder": [
                                "name"
                              ],
                              "description": "Deletes the specified session entity type."
                            },
                            "create": {
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "request": {
                                "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
                              },
                              "description": "Creates a session entity type.",
                              "parameterOrder": [
                                "parent"
                              ],
                              "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes",
                              "httpMethod": "POST",
                              "id": "dialogflow.projects.locations.agents.environments.sessions.entityTypes.create",
                              "response": {
                                "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
                              },
                              "path": "v3/{+parent}/entityTypes",
                              "parameters": {
                                "parent": {
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+$",
                                  "description": "Required. The session to create a session entity type for. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                                  "required": true,
                                  "type": "string"
                                }
                              }
                            },
                            "patch": {
                              "path": "v3/{+name}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "response": {
                                "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
                              },
                              "id": "dialogflow.projects.locations.agents.environments.sessions.entityTypes.patch",
                              "request": {
                                "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
                              },
                              "httpMethod": "PATCH",
                              "description": "Updates the specified session entity type.",
                              "parameterOrder": [
                                "name"
                              ],
                              "parameters": {
                                "updateMask": {
                                  "format": "google-fieldmask",
                                  "type": "string",
                                  "description": "The mask to control which fields get updated.",
                                  "location": "query"
                                },
                                "name": {
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                  "required": true,
                                  "type": "string",
                                  "location": "path",
                                  "description": "Required. The unique identifier of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "experiments": {
                      "methods": {
                        "list": {
                          "path": "v3/{+parent}/experiments",
                          "description": "Returns the list of all experiments in the specified Environment.",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3ListExperimentsResponse"
                          },
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments",
                          "parameters": {
                            "pageSize": {
                              "format": "int32",
                              "description": "The maximum number of items to return in a single page. By default 20 and at most 100.",
                              "location": "query",
                              "type": "integer"
                            },
                            "pageToken": {
                              "location": "query",
                              "description": "The next_page_token value returned from a previous list request.",
                              "type": "string"
                            },
                            "parent": {
                              "description": "Required. The Environment to list all environments for. Format: `projects//locations//agents//environments/`.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.locations.agents.environments.experiments.list",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "create": {
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+$",
                              "description": "Required. The Agent to create an Environment for. Format: `projects//locations//agents//environments/`."
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3Experiment"
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3Experiment"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.locations.agents.environments.experiments.create",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments",
                          "httpMethod": "POST",
                          "description": "Creates an Experiment in the specified Environment.",
                          "path": "v3/{+parent}/experiments"
                        },
                        "delete": {
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/experiments/[^/]+$",
                              "description": "Required. The name of the Environment to delete. Format: `projects//locations//agents//environments//experiments/`.",
                              "type": "string"
                            }
                          },
                          "path": "v3/{+name}",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "description": "Deletes the specified Experiment.",
                          "httpMethod": "DELETE",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "dialogflow.projects.locations.agents.environments.experiments.delete",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "stop": {
                          "id": "dialogflow.projects.locations.agents.environments.experiments.stop",
                          "httpMethod": "POST",
                          "path": "v3/{+name}:stop",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3StopExperimentRequest"
                          },
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}:stop",
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3Experiment"
                          },
                          "description": "Stops the specified Experiment. This rpc only changes the state of experiment from RUNNING to DONE.",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/experiments/[^/]+$",
                              "location": "path",
                              "description": "Required. Resource name of the experiment to stop. Format: `projects//locations//agents//environments//experiments/`.",
                              "type": "string",
                              "required": true
                            }
                          }
                        },
                        "get": {
                          "httpMethod": "GET",
                          "id": "dialogflow.projects.locations.agents.environments.experiments.get",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3Experiment"
                          },
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}",
                          "description": "Retrieves the specified Experiment.",
                          "path": "v3/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/experiments/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "description": "Required. The name of the Environment. Format: `projects//locations//agents//environments//experiments/`."
                            }
                          }
                        },
                        "patch": {
                          "path": "v3/{+name}",
                          "parameters": {
                            "updateMask": {
                              "type": "string",
                              "location": "query",
                              "description": "Required. The mask to control which fields get updated.",
                              "format": "google-fieldmask"
                            },
                            "name": {
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "description": "The name of the experiment. Format: projects//locations//agents//environments//experiments/..",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/experiments/[^/]+$"
                            }
                          },
                          "description": "Updates the specified Experiment.",
                          "id": "dialogflow.projects.locations.agents.environments.experiments.patch",
                          "httpMethod": "PATCH",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3Experiment"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3Experiment"
                          }
                        },
                        "start": {
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3StartExperimentRequest"
                          },
                          "description": "Starts the specified Experiment. This rpc only changes the state of experiment from PENDING to RUNNING.",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3Experiment"
                          },
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/environments/[^/]+/experiments/[^/]+$",
                              "description": "Required. Resource name of the experiment to start. Format: `projects//locations//agents//environments//experiments/`."
                            }
                          },
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/environments/{environmentsId}/experiments/{experimentsId}:start",
                          "path": "v3/{+name}:start",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.locations.agents.environments.experiments.start",
                          "httpMethod": "POST"
                        }
                      }
                    }
                  }
                },
                "testCases": {
                  "resources": {
                    "results": {
                      "methods": {
                        "get": {
                          "parameters": {
                            "name": {
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/testCases/[^/]+/results/[^/]+$",
                              "description": "Required. The name of the testcase. Format: `projects//locations//agents//testCases//results/`.",
                              "type": "string"
                            }
                          },
                          "path": "v3/{+name}",
                          "id": "dialogflow.projects.locations.agents.testCases.results.get",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3TestCaseResult"
                          },
                          "httpMethod": "GET",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}/results/{resultsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Gets a test case result.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "list": {
                          "parameters": {
                            "pageToken": {
                              "location": "query",
                              "description": "The next_page_token value returned from a previous list request.",
                              "type": "string"
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/testCases/[^/]+$",
                              "description": "Required. The test case to list results for. Format: `projects//locations//agents// testCases/`. Specify a `-` as a wildcard for TestCase ID to list results across multiple test cases.",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            },
                            "pageSize": {
                              "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                              "type": "integer",
                              "format": "int32",
                              "location": "query"
                            },
                            "filter": {
                              "location": "query",
                              "type": "string",
                              "description": "The filter expression used to filter test case results. See [API Filtering](https://aip.dev/160). The expression is case insensitive. Only 'AND' is supported for logical operators. The supported syntax is listed below in detail: [AND ] ... [AND latest] The supported fields and operators are: field operator `environment` `=`, `IN` (Use value `draft` for draft environment) `test_time` `\u003e`, `\u003c` `latest` only returns the latest test result in all results for each test case. Examples: * \"environment=draft AND latest\" matches the latest test result for each test case in the draft environment. * \"environment IN (e1,e2)\" matches any test case results with an environment resource name of either \"e1\" or \"e2\". * \"test_time \u003e 1602540713\" matches any test case results with test time later than a unix timestamp in seconds 1602540713."
                            }
                          },
                          "id": "dialogflow.projects.locations.agents.testCases.results.list",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}/results",
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v3/{+parent}/results",
                          "httpMethod": "GET",
                          "description": "Fetches a list of results for a given test case.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3ListTestCaseResultsResponse"
                          }
                        }
                      }
                    }
                  },
                  "methods": {
                    "export": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3ExportTestCasesRequest"
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Exports the test cases under the agent to a Cloud Storage bucket or a local file. Filter can be applied to export a subset of test cases.",
                      "path": "v3/{+parent}/testCases:export",
                      "httpMethod": "POST",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:export",
                      "id": "dialogflow.projects.locations.agents.testCases.export",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "description": "Required. The agent where to export test cases from. Format: `projects//locations//agents/`.",
                          "required": true
                        }
                      }
                    },
                    "calculateCoverage": {
                      "path": "v3/{+agent}/testCases:calculateCoverage",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3CalculateCoverageResponse"
                      },
                      "parameters": {
                        "type": {
                          "enumDescriptions": [
                            "Should never be used.",
                            "Intent coverage.",
                            "Page transition coverage.",
                            "Transition route group coverage."
                          ],
                          "location": "query",
                          "type": "string",
                          "enum": [
                            "COVERAGE_TYPE_UNSPECIFIED",
                            "INTENT",
                            "PAGE_TRANSITION",
                            "TRANSITION_ROUTE_GROUP"
                          ],
                          "description": "Required. The type of coverage requested."
                        },
                        "agent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The agent to calculate coverage for. Format: `projects//locations//agents/`."
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Calculates the test coverage for an agent.",
                      "id": "dialogflow.projects.locations.agents.testCases.calculateCoverage",
                      "parameterOrder": [
                        "agent"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:calculateCoverage",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "run": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3RunTestCaseRequest"
                      },
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}:run",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agents.testCases.run",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/testCases/[^/]+$",
                          "description": "Required. Format of test case name to run: `projects//locations/ /agents//testCases/`."
                        }
                      },
                      "path": "v3/{+name}:run",
                      "description": "Kicks off a test case run."
                    },
                    "create": {
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The agent to create the test case for. Format: `projects//locations//agents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3TestCase"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.testCases.create",
                      "description": "Creates a test case for the given agent.",
                      "path": "v3/{+parent}/testCases",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3TestCase"
                      }
                    },
                    "list": {
                      "path": "v3/{+parent}/testCases",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The next_page_token value returned from a previous list request."
                        },
                        "pageSize": {
                          "description": "The maximum number of items to return in a single page. By default 20. Note that when TestCaseView = FULL, the maximum page size allowed is 20. When TestCaseView = BASIC, the maximum page size allowed is 500.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "description": "Required. The agent to list all pages for. Format: `projects//locations//agents/`."
                        },
                        "view": {
                          "type": "string",
                          "enumDescriptions": [
                            "The default / unset value. The API will default to the BASIC view.",
                            "Include basic metadata about the test case, but not the conversation turns. This is the default value.",
                            "Include everything."
                          ],
                          "enum": [
                            "TEST_CASE_VIEW_UNSPECIFIED",
                            "BASIC",
                            "FULL"
                          ],
                          "location": "query",
                          "description": "Specifies whether response should include all fields or just the metadata."
                        }
                      },
                      "id": "dialogflow.projects.locations.agents.testCases.list",
                      "description": "Fetches a list of test cases for a given agent.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3ListTestCasesResponse"
                      }
                    },
                    "batchDelete": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v3/{+parent}/testCases:batchDelete",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The agent to delete test cases from. Format: `projects//locations//agents/`.",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.testCases.batchDelete",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:batchDelete",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3BatchDeleteTestCasesRequest"
                      },
                      "description": "Batch deletes test cases.",
                      "httpMethod": "POST"
                    },
                    "patch": {
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3TestCase"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.testCases.patch",
                      "description": "Updates the specified test case.",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/testCases/[^/]+$",
                          "required": true
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "Required. The mask to specify which fields should be updated. The `creationTime` and `lastTestResult` cannot be updated.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}",
                      "path": "v3/{+name}",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3TestCase"
                      }
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the testcase. Format: `projects//locations//agents//testCases/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/testCases/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.locations.agents.testCases.get",
                      "description": "Gets a test case.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3TestCase"
                      },
                      "path": "v3/{+name}",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases/{testCasesId}",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "batchRun": {
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:batchRun",
                      "description": "Kicks off a batch run of test cases.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3BatchRunTestCasesRequest"
                      },
                      "id": "dialogflow.projects.locations.agents.testCases.batchRun",
                      "path": "v3/{+parent}/testCases:batchRun",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "description": "Required. Agent name. Format: `projects//locations//agents/ `.",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      }
                    },
                    "import": {
                      "id": "dialogflow.projects.locations.agents.testCases.import",
                      "path": "v3/{+parent}/testCases:import",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The agent to import test cases to. Format: `projects//locations//agents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3ImportTestCasesRequest"
                      },
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/testCases:import",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Imports the test cases from a Cloud Storage bucket or a local file. It always creates new test cases and won't overwite any existing ones. The provided ID in the imported test case is neglected.",
                      "httpMethod": "POST"
                    }
                  }
                },
                "entityTypes": {
                  "methods": {
                    "patch": {
                      "parameters": {
                        "languageCode": {
                          "type": "string",
                          "location": "query",
                          "description": "The language of the following fields in `entity_type`: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                        },
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "The mask to control which fields get updated."
                        },
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/entityTypes/[^/]+$",
                          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Updates the specified entity type.",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3EntityType"
                      },
                      "id": "dialogflow.projects.locations.agents.entityTypes.patch",
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3EntityType"
                      },
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes/{entityTypesId}",
                      "path": "v3/{+name}"
                    },
                    "list": {
                      "description": "Returns the list of all entity types in the specified agent.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3ListEntityTypesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes",
                      "path": "v3/{+parent}/entityTypes",
                      "id": "dialogflow.projects.locations.agents.entityTypes.list",
                      "parameters": {
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request.",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "languageCode": {
                          "type": "string",
                          "description": "The language to list entity types for. The following fields are language dependent: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The agent to list all entity types for. Format: `projects//locations//agents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      }
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes/{entityTypesId}",
                      "id": "dialogflow.projects.locations.agents.entityTypes.delete",
                      "path": "v3/{+name}",
                      "httpMethod": "DELETE",
                      "description": "Deletes the specified entity type.",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the entity type to delete. Format: `projects//locations//agents//entityTypes/`.",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/entityTypes/[^/]+$"
                        },
                        "force": {
                          "location": "query",
                          "type": "boolean",
                          "description": "This field has no effect for entity type not being used. For entity types that are used by intents or pages: * If `force` is set to false, an error will be returned with message indicating the referencing resources. * If `force` is set to true, Dialogflow will remove the entity type, as well as any references to the entity type (i.e. Page parameter of the entity type will be changed to '@sys.any' and intent parameter of the entity type will be removed)."
                        }
                      }
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "languageCode": {
                          "type": "string",
                          "description": "The language to retrieve the entity type for. The following fields are language dependent: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query"
                        },
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the entity type. Format: `projects//locations//agents//entityTypes/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/entityTypes/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3EntityType"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "path": "v3/{+name}",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes/{entityTypesId}",
                      "description": "Retrieves the specified entity type.",
                      "id": "dialogflow.projects.locations.agents.entityTypes.get"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Creates an entity type in the specified agent.",
                      "path": "v3/{+parent}/entityTypes",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3EntityType"
                      },
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/entityTypes",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The agent to create a entity type for. Format: `projects//locations//agents/`.",
                          "required": true
                        },
                        "languageCode": {
                          "location": "query",
                          "description": "The language of the following fields in `entity_type`: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.locations.agents.entityTypes.create",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3EntityType"
                      }
                    }
                  }
                },
                "sessions": {
                  "resources": {
                    "entityTypes": {
                      "methods": {
                        "delete": {
                          "path": "v3/{+name}",
                          "id": "dialogflow.projects.locations.agents.sessions.entityTypes.delete",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the session entity type to delete. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "description": "Deletes the specified session entity type.",
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "DELETE",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}"
                        },
                        "create": {
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+$",
                              "description": "Required. The session to create a session entity type for. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
                          },
                          "description": "Creates a session entity type.",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
                          },
                          "httpMethod": "POST",
                          "path": "v3/{+parent}/entityTypes",
                          "id": "dialogflow.projects.locations.agents.sessions.entityTypes.create",
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "patch": {
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                              "required": true,
                              "description": "Required. The unique identifier of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                              "type": "string",
                              "location": "path"
                            },
                            "updateMask": {
                              "description": "The mask to control which fields get updated.",
                              "format": "google-fieldmask",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
                          },
                          "id": "dialogflow.projects.locations.agents.sessions.entityTypes.patch",
                          "path": "v3/{+name}",
                          "description": "Updates the specified session entity type.",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
                          },
                          "httpMethod": "PATCH",
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}"
                        },
                        "list": {
                          "httpMethod": "GET",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes",
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Returns the list of all session entity types in the specified session.",
                          "path": "v3/{+parent}/entityTypes",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.locations.agents.sessions.entityTypes.list",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3ListSessionEntityTypesResponse"
                          },
                          "parameters": {
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+$",
                              "description": "Required. The session to list all session entity types from. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                              "type": "string",
                              "location": "path",
                              "required": true
                            },
                            "pageSize": {
                              "location": "query",
                              "format": "int32",
                              "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                              "type": "integer"
                            }
                          }
                        },
                        "get": {
                          "path": "v3/{+name}",
                          "httpMethod": "GET",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                              "type": "string",
                              "description": "Required. The name of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment.",
                              "location": "path",
                              "required": true
                            }
                          },
                          "id": "dialogflow.projects.locations.agents.sessions.entityTypes.get",
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3SessionEntityType"
                          },
                          "description": "Retrieves the specified session entity type."
                        }
                      }
                    }
                  },
                  "methods": {
                    "fulfillIntent": {
                      "path": "v3/{+session}:fulfillIntent",
                      "parameters": {
                        "session": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+$",
                          "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session)."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3FulfillIntentResponse"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3FulfillIntentRequest"
                      },
                      "id": "dialogflow.projects.locations.agents.sessions.fulfillIntent",
                      "description": "Fulfills a matched intent returned by MatchIntent. Must be called after MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is undefined.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "session"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}:fulfillIntent"
                    },
                    "matchIntent": {
                      "parameters": {
                        "session": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session)."
                        }
                      },
                      "parameterOrder": [
                        "session"
                      ],
                      "path": "v3/{+session}:matchIntent",
                      "httpMethod": "POST",
                      "description": "Returns preliminary intent match results, doesn't change the session status.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.sessions.matchIntent",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3MatchIntentRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3MatchIntentResponse"
                      },
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}:matchIntent"
                    },
                    "detectIntent": {
                      "path": "v3/{+session}:detectIntent",
                      "parameters": {
                        "session": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/sessions/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3DetectIntentResponse"
                      },
                      "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).",
                      "id": "dialogflow.projects.locations.agents.sessions.detectIntent",
                      "parameterOrder": [
                        "session"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/sessions/{sessionsId}:detectIntent",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3DetectIntentRequest"
                      }
                    }
                  }
                },
                "flows": {
                  "methods": {
                    "patch": {
                      "path": "v3/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Updates the specified flow.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3Flow"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3Flow"
                      },
                      "httpMethod": "PATCH",
                      "parameters": {
                        "languageCode": {
                          "description": "The language of the following fields in `flow`: * `Flow.event_handlers.trigger_fulfillment.messages` * `Flow.transition_routes.trigger_fulfillment.messages` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "The unique identifier of the flow. Format: `projects//locations//agents//flows/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$"
                        },
                        "updateMask": {
                          "description": "Required. The mask to control which fields get updated. If `update_mask` is not specified, an error will be returned.",
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query"
                        }
                      },
                      "id": "dialogflow.projects.locations.agents.flows.patch",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}"
                    },
                    "create": {
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3Flow"
                      },
                      "path": "v3/{+parent}/flows",
                      "description": "Creates a flow in the specified agent.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3Flow"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.locations.agents.flows.create",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "description": "Required. The agent to create a flow for. Format: `projects//locations//agents/`.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "languageCode": {
                          "location": "query",
                          "type": "string",
                          "description": "The language of the following fields in `flow`: * `Flow.event_handlers.trigger_fulfillment.messages` * `Flow.transition_routes.trigger_fulfillment.messages` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                        }
                      },
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows"
                    },
                    "delete": {
                      "path": "v3/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Deletes a specified flow.",
                      "id": "dialogflow.projects.locations.agents.flows.delete",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the flow to delete. Format: `projects//locations//agents//flows/`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                          "type": "string"
                        },
                        "force": {
                          "type": "boolean",
                          "location": "query",
                          "description": "This field has no effect for flows with no incoming transitions. For flows with incoming transitions: * If `force` is set to false, an error will be returned with message indicating the incoming transitions. * If `force` is set to true, Dialogflow will remove the flow, as well as any transitions to the flow (i.e. Target flow in event handlers or Target flow in transition routes that point to this flow will be cleared)."
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}",
                      "parameters": {
                        "languageCode": {
                          "description": "The language to retrieve the flow for. The following fields are language dependent: * `Flow.event_handlers.trigger_fulfillment.messages` * `Flow.transition_routes.trigger_fulfillment.messages` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the flow to get. Format: `projects//locations//agents//flows/`."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Retrieves the specified flow.",
                      "id": "dialogflow.projects.locations.agents.flows.get",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3Flow"
                      },
                      "path": "v3/{+name}"
                    },
                    "train": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                          "location": "path",
                          "description": "Required. The flow to train. Format: `projects//locations//agents//flows/`."
                        }
                      },
                      "description": "Trains the specified flow. Note that only the flow in 'draft' environment is trained.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.locations.agents.flows.train",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3TrainFlowRequest"
                      },
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}:train",
                      "path": "v3/{+name}:train",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "validate": {
                      "id": "dialogflow.projects.locations.agents.flows.validate",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3FlowValidationResult"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                          "description": "Required. The flow to validate. Format: `projects//locations//agents//flows/`.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "description": "Validates the specified flow and creates or updates validation results. Please call this API after the training is completed to get the complete validation results.",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}:validate",
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3ValidateFlowRequest"
                      },
                      "path": "v3/{+name}:validate",
                      "httpMethod": "POST"
                    },
                    "list": {
                      "path": "v3/{+parent}/flows",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.flows.list",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3ListFlowsResponse"
                      },
                      "parameters": {
                        "languageCode": {
                          "description": "The language to list flows for. The following fields are language dependent: * `Flow.event_handlers.trigger_fulfillment.messages` * `Flow.transition_routes.trigger_fulfillment.messages` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "type": "string",
                          "description": "Required. The agent containing the flows. Format: `projects//locations//agents/`."
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "The next_page_token value returned from a previous list request."
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Returns the list of all flows in the specified agent."
                    },
                    "getValidationResult": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3FlowValidationResult"
                      },
                      "description": "Gets the latest flow validation result. Flow validation is performed when ValidateFlow is called.",
                      "path": "v3/{+name}",
                      "parameters": {
                        "languageCode": {
                          "location": "query",
                          "description": "If not specified, the agent's default language is used.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Required. The flow name. Format: `projects//locations//agents//flows//validationResult`.",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/validationResult$"
                        }
                      },
                      "httpMethod": "GET",
                      "id": "dialogflow.projects.locations.agents.flows.getValidationResult",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/validationResult",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    }
                  },
                  "resources": {
                    "pages": {
                      "methods": {
                        "delete": {
                          "httpMethod": "DELETE",
                          "id": "dialogflow.projects.locations.agents.flows.pages.delete",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages/{pagesId}",
                          "description": "Deletes the specified page.",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v3/{+name}",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/pages/[^/]+$",
                              "type": "string",
                              "description": "Required. The name of the page to delete. Format: `projects//locations//agents//Flows//pages/`.",
                              "required": true
                            },
                            "force": {
                              "type": "boolean",
                              "location": "query",
                              "description": "This field has no effect for pages with no incoming transitions. For pages with incoming transitions: * If `force` is set to false, an error will be returned with message indicating the incoming transitions. * If `force` is set to true, Dialogflow will remove the page, as well as any transitions to the page (i.e. Target page in event handlers or Target page in transition routes that point to this page will be cleared)."
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "create": {
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3Page"
                          },
                          "parameters": {
                            "languageCode": {
                              "location": "query",
                              "type": "string",
                              "description": "The language of the following fields in `page`: * `Page.entry_fulfillment.messages` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` * `Page.transition_routes.trigger_fulfillment.messages` * `Page.transition_route_groups.transition_routes.trigger_fulfillment.messages` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                            },
                            "parent": {
                              "description": "Required. The flow to create a page for. Format: `projects//locations//agents//flows/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.locations.agents.flows.pages.create",
                          "description": "Creates a page in the specified flow.",
                          "path": "v3/{+parent}/pages",
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "parent"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3Page"
                          },
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages"
                        },
                        "get": {
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3Page"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages/{pagesId}",
                          "description": "Retrieves the specified page.",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v3/{+name}",
                          "parameters": {
                            "languageCode": {
                              "location": "query",
                              "type": "string",
                              "description": "The language to retrieve the page for. The following fields are language dependent: * `Page.entry_fulfillment.messages` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` * `Page.transition_routes.trigger_fulfillment.messages` * `Page.transition_route_groups.transition_routes.trigger_fulfillment.messages` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                            },
                            "name": {
                              "description": "Required. The name of the page. Format: `projects//locations//agents//flows//pages/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/pages/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "httpMethod": "GET",
                          "id": "dialogflow.projects.locations.agents.flows.pages.get"
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "description": "Returns the list of all pages in the specified flow.",
                          "path": "v3/{+parent}/pages",
                          "parameters": {
                            "parent": {
                              "description": "Required. The flow to list all pages for. Format: `projects//locations//agents//flows/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                              "required": true,
                              "type": "string",
                              "location": "path"
                            },
                            "pageSize": {
                              "type": "integer",
                              "location": "query",
                              "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                              "format": "int32"
                            },
                            "languageCode": {
                              "type": "string",
                              "location": "query",
                              "description": "The language to list pages for. The following fields are language dependent: * `Page.entry_fulfillment.messages` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` * `Page.transition_routes.trigger_fulfillment.messages` * `Page.transition_route_groups.transition_routes.trigger_fulfillment.messages` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                            },
                            "pageToken": {
                              "description": "The next_page_token value returned from a previous list request.",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3ListPagesResponse"
                          },
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages",
                          "id": "dialogflow.projects.locations.agents.flows.pages.list",
                          "httpMethod": "GET"
                        },
                        "patch": {
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/pages/{pagesId}",
                          "description": "Updates the specified page.",
                          "path": "v3/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "httpMethod": "PATCH",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3Page"
                          },
                          "id": "dialogflow.projects.locations.agents.flows.pages.patch",
                          "parameterOrder": [
                            "name"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3Page"
                          },
                          "parameters": {
                            "updateMask": {
                              "location": "query",
                              "format": "google-fieldmask",
                              "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                              "type": "string"
                            },
                            "languageCode": {
                              "type": "string",
                              "location": "query",
                              "description": "The language of the following fields in `page`: * `Page.entry_fulfillment.messages` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` * `Page.transition_routes.trigger_fulfillment.messages` * `Page.transition_route_groups.transition_routes.trigger_fulfillment.messages` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                            },
                            "name": {
                              "required": true,
                              "description": "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/pages/[^/]+$",
                              "type": "string",
                              "location": "path"
                            }
                          }
                        }
                      }
                    },
                    "transitionRouteGroups": {
                      "methods": {
                        "patch": {
                          "description": "Updates the specified TransitionRouteGroup.",
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3TransitionRouteGroup"
                          },
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3TransitionRouteGroup"
                          },
                          "httpMethod": "PATCH",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups/{transitionRouteGroupsId}",
                          "path": "v3/{+name}",
                          "parameters": {
                            "updateMask": {
                              "type": "string",
                              "description": "The mask to control which fields get updated.",
                              "format": "google-fieldmask",
                              "location": "query"
                            },
                            "languageCode": {
                              "type": "string",
                              "location": "query",
                              "description": "The language to list transition route groups for. The field `messages` in TransitionRoute is language dependent. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                            },
                            "name": {
                              "description": "The unique identifier of the transition route group. TransitionRouteGroups.CreateTransitionRouteGroup populates the name automatically. Format: `projects//locations//agents//flows//transitionRouteGroups/`.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/transitionRouteGroups/[^/]+$",
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "dialogflow.projects.locations.agents.flows.transitionRouteGroups.patch",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "list": {
                          "parameters": {
                            "pageSize": {
                              "format": "int32",
                              "type": "integer",
                              "location": "query",
                              "description": "The maximum number of items to return in a single page. By default 100 and at most 1000."
                            },
                            "languageCode": {
                              "type": "string",
                              "description": "The language to list transition route groups for. The field `messages` in TransitionRoute is language dependent. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                              "location": "query"
                            },
                            "pageToken": {
                              "location": "query",
                              "type": "string",
                              "description": "The next_page_token value returned from a previous list request."
                            },
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                              "required": true,
                              "type": "string",
                              "description": "Required. The flow to list all transition route groups for. Format: `projects//locations//agents//flows/`."
                            }
                          },
                          "httpMethod": "GET",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.locations.agents.flows.transitionRouteGroups.list",
                          "path": "v3/{+parent}/transitionRouteGroups",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3ListTransitionRouteGroupsResponse"
                          },
                          "description": "Returns the list of all transition route groups in the specified flow.",
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "get": {
                          "description": "Retrieves the specified TransitionRouteGroup.",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3TransitionRouteGroup"
                          },
                          "path": "v3/{+name}",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups/{transitionRouteGroupsId}",
                          "httpMethod": "GET",
                          "id": "dialogflow.projects.locations.agents.flows.transitionRouteGroups.get",
                          "parameters": {
                            "languageCode": {
                              "description": "The language to list transition route groups for. The field `messages` in TransitionRoute is language dependent. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                              "type": "string",
                              "location": "query"
                            },
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/transitionRouteGroups/[^/]+$",
                              "type": "string",
                              "description": "Required. The name of the TransitionRouteGroup. Format: `projects//locations//agents//flows//transitionRouteGroups/`.",
                              "required": true,
                              "location": "path"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "delete": {
                          "id": "dialogflow.projects.locations.agents.flows.transitionRouteGroups.delete",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v3/{+name}",
                          "parameters": {
                            "force": {
                              "description": "This field has no effect for transition route group that no page is using. If the transition route group is referenced by any page: * If `force` is set to false, an error will be returned with message indicating pages that reference the transition route group. * If `force` is set to true, Dialogflow will remove the transition route group, as well as any reference to it.",
                              "location": "query",
                              "type": "boolean"
                            },
                            "name": {
                              "required": true,
                              "description": "Required. The name of the TransitionRouteGroup to delete. Format: `projects//locations//agents//flows//transitionRouteGroups/`.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/transitionRouteGroups/[^/]+$",
                              "type": "string"
                            }
                          },
                          "description": "Deletes the specified TransitionRouteGroup.",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "httpMethod": "DELETE",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups/{transitionRouteGroupsId}"
                        },
                        "create": {
                          "httpMethod": "POST",
                          "id": "dialogflow.projects.locations.agents.flows.transitionRouteGroups.create",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/transitionRouteGroups",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3TransitionRouteGroup"
                          },
                          "parameters": {
                            "languageCode": {
                              "type": "string",
                              "location": "query",
                              "description": "The language to list transition route groups for. The field `messages` in TransitionRoute is language dependent. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                            },
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                              "type": "string",
                              "description": "Required. The flow to create an TransitionRouteGroup for. Format: `projects//locations//agents//flows/`.",
                              "location": "path",
                              "required": true
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v3/{+parent}/transitionRouteGroups",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3TransitionRouteGroup"
                          },
                          "description": "Creates an TransitionRouteGroup in the specified flow."
                        }
                      }
                    },
                    "versions": {
                      "methods": {
                        "get": {
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3Version"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v3/{+name}",
                          "id": "dialogflow.projects.locations.agents.flows.versions.get",
                          "description": "Retrieves the specified Version.",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/versions/[^/]+$",
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "description": "Required. The name of the Version. Format: `projects//locations//agents//flows//versions/`."
                            }
                          },
                          "httpMethod": "GET",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "list": {
                          "parameters": {
                            "pageSize": {
                              "location": "query",
                              "type": "integer",
                              "description": "The maximum number of items to return in a single page. By default 20 and at most 100.",
                              "format": "int32"
                            },
                            "parent": {
                              "description": "Required. The Flow to list all versions for. Format: `projects//locations//agents//flows/`.",
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                              "location": "path"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "The next_page_token value returned from a previous list request."
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET",
                          "path": "v3/{+parent}/versions",
                          "description": "Returns the list of all versions in the specified Flow.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.locations.agents.flows.versions.list",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3ListVersionsResponse"
                          },
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions"
                        },
                        "delete": {
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "httpMethod": "DELETE",
                          "id": "dialogflow.projects.locations.agents.flows.versions.delete",
                          "path": "v3/{+name}",
                          "description": "Deletes the specified Version.",
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}",
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/versions/[^/]+$",
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "Required. The name of the Version to delete. Format: `projects//locations//agents//flows//versions/`."
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "load": {
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}:load",
                          "id": "dialogflow.projects.locations.agents.flows.versions.load",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v3/{+name}:load",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameters": {
                            "name": {
                              "location": "path",
                              "required": true,
                              "description": "Required. The Version to be loaded to draft flow. Format: `projects//locations//agents//flows//versions/`.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/versions/[^/]+$"
                            }
                          },
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3LoadVersionRequest"
                          },
                          "httpMethod": "POST",
                          "description": "Loads resources in the specified version to the draft flow."
                        },
                        "patch": {
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "PATCH",
                          "description": "Updates the specified Version.",
                          "id": "dialogflow.projects.locations.agents.flows.versions.patch",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions/{versionsId}",
                          "response": {
                            "$ref": "GoogleCloudDialogflowCxV3Version"
                          },
                          "path": "v3/{+name}",
                          "parameters": {
                            "updateMask": {
                              "format": "google-fieldmask",
                              "location": "query",
                              "description": "Required. The mask to control which fields get updated. Currently only `description` and `display_name` can be updated.",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+/versions/[^/]+$",
                              "location": "path",
                              "description": "Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation."
                            }
                          },
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3Version"
                          }
                        },
                        "create": {
                          "request": {
                            "$ref": "GoogleCloudDialogflowCxV3Version"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameters": {
                            "parent": {
                              "required": true,
                              "description": "Required. The Flow to create an Version for. Format: `projects//locations//agents//flows/`.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/flows/[^/]+$",
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/flows/{flowsId}/versions",
                          "httpMethod": "POST",
                          "path": "v3/{+parent}/versions",
                          "description": "Creates a Version in the specified Flow.",
                          "id": "dialogflow.projects.locations.agents.flows.versions.create"
                        }
                      }
                    }
                  }
                },
                "webhooks": {
                  "methods": {
                    "get": {
                      "description": "Retrieves the specified webhook.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v3/{+name}",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks/{webhooksId}",
                      "id": "dialogflow.projects.locations.agents.webhooks.get",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3Webhook"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/webhooks/[^/]+$",
                          "description": "Required. The name of the webhook. Format: `projects//locations//agents//webhooks/`.",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "delete": {
                      "path": "v3/{+name}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/webhooks/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the webhook to delete. Format: `projects//locations//agents//webhooks/`."
                        },
                        "force": {
                          "location": "query",
                          "description": "This field has no effect for webhook not being used. For webhooks that are used by pages/flows/transition route groups: * If `force` is set to false, an error will be returned with message indicating the referenced resources. * If `force` is set to true, Dialogflow will remove the webhook, as well as any references to the webhook (i.e. Webhook and tagin fulfillments that point to this webhook will be removed).",
                          "type": "boolean"
                        }
                      },
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks/{webhooksId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.webhooks.delete",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deletes the specified webhook."
                    },
                    "create": {
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3Webhook"
                      },
                      "path": "v3/{+parent}/webhooks",
                      "description": "Creates a webhook in the specified agent.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.agents.webhooks.create",
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3Webhook"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "description": "Required. The agent to create a webhook for. Format: `projects//locations//agents/`.",
                          "type": "string",
                          "required": true
                        }
                      }
                    },
                    "list": {
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The agent to list all webhooks for. Format: `projects//locations//agents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+$",
                          "location": "path",
                          "required": true
                        },
                        "pageSize": {
                          "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "The next_page_token value returned from a previous list request.",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3ListWebhooksResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks",
                      "path": "v3/{+parent}/webhooks",
                      "id": "dialogflow.projects.locations.agents.webhooks.list",
                      "description": "Returns the list of all webhooks in the specified agent."
                    },
                    "patch": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowCxV3Webhook"
                      },
                      "path": "v3/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "PATCH",
                      "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/agents/{agentsId}/webhooks/{webhooksId}",
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "description": "The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                          "format": "google-fieldmask",
                          "type": "string"
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agents/[^/]+/webhooks/[^/]+$",
                          "type": "string",
                          "description": "The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowCxV3Webhook"
                      },
                      "description": "Updates the specified webhook.",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.locations.agents.webhooks.patch"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "id": "dialogflow.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v3/{+name}",
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "list": {
                  "path": "v3/{+name}/operations",
                  "httpMethod": "GET",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The standard list filter."
                    }
                  },
                  "id": "dialogflow.projects.locations.operations.list",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/operations"
                },
                "cancel": {
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "path": "v3/{+name}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "dialogflow.projects.locations.operations.cancel",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled."
                    }
                  }
                }
              }
            },
            "securitySettings": {
              "methods": {
                "patch": {
                  "path": "v3/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Updates the specified SecuritySettings.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/securitySettings/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Resource name of the settings. Format: `projects//locations//securitySettings/`."
                    }
                  },
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/securitySettings/{securitySettingsId}",
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3SecuritySettings"
                  },
                  "id": "dialogflow.projects.locations.securitySettings.patch",
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3SecuritySettings"
                  }
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v3/{+parent}/securitySettings",
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3ListSecuritySettingsResponse"
                  },
                  "httpMethod": "GET",
                  "description": "Returns the list of all security settings in the specified location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The location to list all security settings for. Format: `projects//locations/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "The next_page_token value returned from a previous list request."
                    },
                    "pageSize": {
                      "description": "The maximum number of items to return in a single page. By default 20 and at most 100.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/securitySettings",
                  "id": "dialogflow.projects.locations.securitySettings.list"
                },
                "delete": {
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/securitySettings/{securitySettingsId}",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "path": "v3/{+name}",
                  "description": "Deletes the specified SecuritySettings.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.securitySettings.delete",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/securitySettings/[^/]+$",
                      "description": "Required. The name of the SecuritySettings to delete. Format: `projects//locations//securitySettings/`.",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/securitySettings/{securitySettingsId}",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3SecuritySettings"
                  },
                  "path": "v3/{+name}",
                  "id": "dialogflow.projects.locations.securitySettings.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "description": "Retrieves the specified SecuritySettings. The returned settings may be stale by up to 1 minute.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/securitySettings/[^/]+$",
                      "description": "Required. Resource name of the settings. Format: `projects//locations//securitySettings/`."
                    }
                  }
                },
                "create": {
                  "flatPath": "v3/projects/{projectsId}/locations/{locationsId}/securitySettings",
                  "request": {
                    "$ref": "GoogleCloudDialogflowCxV3SecuritySettings"
                  },
                  "path": "v3/{+parent}/securitySettings",
                  "httpMethod": "POST",
                  "id": "dialogflow.projects.locations.securitySettings.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowCxV3SecuritySettings"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The location to create an SecuritySettings for. Format: `projects//locations/`.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Create security settings in the specified location."
                }
              }
            }
          }
        },
        "operations": {
          "methods": {
            "get": {
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "The name of the operation resource."
                }
              },
              "path": "v3/{+name}",
              "flatPath": "v3/projects/{projectsId}/operations/{operationsId}",
              "parameterOrder": [
                "name"
              ],
              "id": "dialogflow.projects.operations.get"
            },
            "list": {
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "id": "dialogflow.projects.operations.list",
              "parameterOrder": [
                "name"
              ],
              "path": "v3/{+name}/operations",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "The name of the operation's parent resource."
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                }
              },
              "flatPath": "v3/projects/{projectsId}/operations",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ]
            },
            "cancel": {
              "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
              "parameterOrder": [
                "name"
              ],
              "path": "v3/{+name}:cancel",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "description": "The name of the operation resource to be cancelled.",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "flatPath": "v3/projects/{projectsId}/operations/{operationsId}:cancel",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "httpMethod": "POST",
              "id": "dialogflow.projects.operations.cancel"
            }
          }
        }
      }
    }
  },
  "ownerName": "Google"
}
