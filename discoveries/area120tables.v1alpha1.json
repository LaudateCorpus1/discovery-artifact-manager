{
  "discoveryVersion": "v1",
  "version_module": true,
  "canonicalName": "Area120 Tables",
  "documentationLink": "https://support.google.com/area120-tables/answer/10011390",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "ownerDomain": "google.com",
  "servicePath": "",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "description": "",
  "resources": {
    "workspaces": {
      "methods": {
        "get": {
          "id": "area120tables.workspaces.get",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Workspace"
          },
          "path": "v1alpha1/{+name}",
          "parameters": {
            "name": {
              "description": "Required. The name of the workspace to retrieve. Format: workspaces/{workspace}",
              "required": true,
              "location": "path",
              "pattern": "^workspaces/[^/]+$",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/spreadsheets.readonly",
            "https://www.googleapis.com/auth/tables"
          ],
          "flatPath": "v1alpha1/workspaces/{workspacesId}",
          "description": "Gets a workspace. Returns NOT_FOUND if the workspace does not exist."
        },
        "list": {
          "id": "area120tables.workspaces.list",
          "response": {
            "$ref": "ListWorkspacesResponse"
          },
          "flatPath": "v1alpha1/workspaces",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/spreadsheets.readonly",
            "https://www.googleapis.com/auth/tables"
          ],
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A page token, received from a previous `ListWorkspaces` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListWorkspaces` must match the call that provided the page token."
            },
            "pageSize": {
              "format": "int32",
              "type": "integer",
              "description": "The maximum number of workspaces to return. The service may return fewer than this value. If unspecified, at most 10 workspaces are returned. The maximum value is 25; values above 25 are coerced to 25.",
              "location": "query"
            }
          },
          "path": "v1alpha1/workspaces",
          "description": "Lists workspaces for the user.",
          "httpMethod": "GET",
          "parameterOrder": []
        }
      }
    },
    "tables": {
      "methods": {
        "list": {
          "description": "Lists tables for the user.",
          "parameters": {
            "pageSize": {
              "location": "query",
              "description": "The maximum number of tables to return. The service may return fewer than this value. If unspecified, at most 20 tables are returned. The maximum value is 100; values above 100 are coerced to 100.",
              "format": "int32",
              "type": "integer"
            },
            "pageToken": {
              "description": "A page token, received from a previous `ListTables` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTables` must match the call that provided the page token.",
              "type": "string",
              "location": "query"
            },
            "orderBy": {
              "location": "query",
              "type": "string",
              "description": "Optional. Sorting order for the list of tables on createTime/updateTime."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/spreadsheets.readonly",
            "https://www.googleapis.com/auth/tables"
          ],
          "response": {
            "$ref": "ListTablesResponse"
          },
          "parameterOrder": [],
          "path": "v1alpha1/tables",
          "httpMethod": "GET",
          "id": "area120tables.tables.list",
          "flatPath": "v1alpha1/tables"
        },
        "get": {
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/tables/{tablesId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/spreadsheets.readonly",
            "https://www.googleapis.com/auth/tables"
          ],
          "id": "area120tables.tables.get",
          "description": "Gets a table. Returns NOT_FOUND if the table does not exist.",
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^tables/[^/]+$",
              "location": "path",
              "required": true,
              "description": "Required. The name of the table to retrieve. Format: tables/{table}"
            }
          },
          "response": {
            "$ref": "Table"
          }
        }
      },
      "resources": {
        "rows": {
          "methods": {
            "get": {
              "id": "area120tables.tables.rows.get",
              "path": "v1alpha1/{+name}",
              "description": "Gets a row. Returns NOT_FOUND if the row does not exist in the table.",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/drive.readonly",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/spreadsheets.readonly",
                "https://www.googleapis.com/auth/tables"
              ],
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "response": {
                "$ref": "Row"
              },
              "parameters": {
                "name": {
                  "pattern": "^tables/[^/]+/rows/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the row to retrieve. Format: tables/{table}/rows/{row}",
                  "location": "path",
                  "type": "string"
                },
                "view": {
                  "location": "query",
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "type": "string",
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ]
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "path": "v1alpha1/{+parent}/rows",
              "description": "Lists rows in a table. Returns NOT_FOUND if the table does not exist.",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "ListRowsResponse"
              },
              "flatPath": "v1alpha1/tables/{tablesId}/rows",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/drive.readonly",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/spreadsheets.readonly",
                "https://www.googleapis.com/auth/tables"
              ],
              "id": "area120tables.tables.rows.list",
              "parameters": {
                "pageToken": {
                  "description": "A page token, received from a previous `ListRows` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRows` must match the call that provided the page token.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of rows to return. The service may return fewer than this value. If unspecified, at most 50 rows are returned. The maximum value is 1,000; values above 1,000 are coerced to 1,000.",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^tables/[^/]+$",
                  "required": true,
                  "description": "Required. The parent table. Format: tables/{table}"
                },
                "orderBy": {
                  "description": "Optional. Sorting order for the list of rows on createTime/updateTime.",
                  "location": "query",
                  "type": "string"
                },
                "view": {
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ]
                },
                "filter": {
                  "type": "string",
                  "description": "Optional. Filter to only include resources matching the requirements. For more information, see [Filtering list results](https://support.google.com/area120-tables/answer/10503371).",
                  "location": "query"
                }
              }
            },
            "batchDelete": {
              "path": "v1alpha1/{+parent}/rows:batchDelete",
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The parent table shared by all rows being deleted. Format: tables/{table}",
                  "required": true,
                  "pattern": "^tables/[^/]+$"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Deletes multiple rows.",
              "flatPath": "v1alpha1/tables/{tablesId}/rows:batchDelete",
              "id": "area120tables.tables.rows.batchDelete",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ],
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "POST",
              "request": {
                "$ref": "BatchDeleteRowsRequest"
              }
            },
            "batchUpdate": {
              "flatPath": "v1alpha1/tables/{tablesId}/rows:batchUpdate",
              "response": {
                "$ref": "BatchUpdateRowsResponse"
              },
              "description": "Updates multiple rows.",
              "request": {
                "$ref": "BatchUpdateRowsRequest"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^tables/[^/]+$",
                  "location": "path",
                  "description": "Required. The parent table shared by all rows being updated. Format: tables/{table}",
                  "type": "string"
                }
              },
              "id": "area120tables.tables.rows.batchUpdate",
              "path": "v1alpha1/{+parent}/rows:batchUpdate",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ]
            },
            "batchCreate": {
              "flatPath": "v1alpha1/tables/{tablesId}/rows:batchCreate",
              "parameterOrder": [
                "parent"
              ],
              "id": "area120tables.tables.rows.batchCreate",
              "path": "v1alpha1/{+parent}/rows:batchCreate",
              "description": "Creates multiple rows.",
              "request": {
                "$ref": "BatchCreateRowsRequest"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent table where the rows will be created. Format: tables/{table}",
                  "pattern": "^tables/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "BatchCreateRowsResponse"
              }
            },
            "patch": {
              "description": "Updates a row.",
              "parameters": {
                "updateMask": {
                  "description": "The list of fields to update.",
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "view": {
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "type": "string",
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "location": "query",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.",
                  "location": "path",
                  "required": true,
                  "pattern": "^tables/[^/]+/rows/[^/]+$"
                }
              },
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "Row"
              },
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ],
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "id": "area120tables.tables.rows.patch",
              "response": {
                "$ref": "Row"
              }
            },
            "delete": {
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "name": {
                  "pattern": "^tables/[^/]+/rows/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the row to delete. Format: tables/{table}/rows/{row}"
                }
              },
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "id": "area120tables.tables.rows.delete",
              "description": "Deletes a row.",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ]
            },
            "create": {
              "httpMethod": "POST",
              "flatPath": "v1alpha1/tables/{tablesId}/rows",
              "path": "v1alpha1/{+parent}/rows",
              "description": "Creates a row.",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ],
              "id": "area120tables.tables.rows.create",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "Row"
              },
              "parameters": {
                "parent": {
                  "pattern": "^tables/[^/]+$",
                  "description": "Required. The parent table where this row will be created. Format: tables/{table}",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "view": {
                  "location": "query",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ],
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "type": "string",
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name."
                }
              },
              "response": {
                "$ref": "Row"
              }
            }
          }
        }
      }
    }
  },
  "baseUrl": "https://area120tables.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/spreadsheets": {
          "description": "See, edit, create, and delete your spreadsheets in Google Drive"
        },
        "https://www.googleapis.com/auth/spreadsheets.readonly": {
          "description": "View your Google Spreadsheets"
        },
        "https://www.googleapis.com/auth/drive.file": {
          "description": "See, edit, create, and delete only the specific Google Drive files you use with this app"
        },
        "https://www.googleapis.com/auth/tables": {
          "description": "See, edit, create, and delete your tables in Tables by Area 120"
        },
        "https://www.googleapis.com/auth/drive": {
          "description": "See, edit, create, and delete all of your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.readonly": {
          "description": "See and download all your Google Drive files"
        }
      }
    }
  },
  "revision": "20210413",
  "name": "area120tables",
  "fullyEncodeReservedExpansion": true,
  "id": "area120tables:v1alpha1",
  "rootUrl": "https://area120tables.googleapis.com/",
  "mtlsRootUrl": "https://area120tables.mtls.googleapis.com/",
  "parameters": {
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    }
  },
  "schemas": {
    "RelationshipDetails": {
      "properties": {
        "linkedTable": {
          "type": "string",
          "description": "The name of the table this relationship is linked to."
        }
      },
      "description": "Details about a relationship column.",
      "id": "RelationshipDetails",
      "type": "object"
    },
    "BatchCreateRowsResponse": {
      "type": "object",
      "id": "BatchCreateRowsResponse",
      "properties": {
        "rows": {
          "description": "The created rows.",
          "type": "array",
          "items": {
            "$ref": "Row"
          }
        }
      },
      "description": "Response message for TablesService.BatchCreateRows."
    },
    "CreateRowRequest": {
      "description": "Request message for TablesService.CreateRow.",
      "id": "CreateRowRequest",
      "properties": {
        "row": {
          "description": "Required. The row to create.",
          "$ref": "Row"
        },
        "parent": {
          "type": "string",
          "description": "Required. The parent table where this row will be created. Format: tables/{table}"
        },
        "view": {
          "type": "string",
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
          "enum": [
            "VIEW_UNSPECIFIED",
            "COLUMN_ID_VIEW"
          ],
          "enumDescriptions": [
            "Defaults to user entered text.",
            "Uses internally generated column id to identify values."
          ]
        }
      },
      "type": "object"
    },
    "SavedView": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Display name of the saved view.",
          "type": "string"
        },
        "id": {
          "description": "Internal id associated with the saved view.",
          "type": "string"
        }
      },
      "id": "SavedView",
      "description": "A saved view of a table. NextId: 3"
    },
    "BatchCreateRowsRequest": {
      "description": "Request message for TablesService.BatchCreateRows.",
      "properties": {
        "requests": {
          "description": "Required. The request message specifying the rows to create. A maximum of 500 rows can be created in a single batch.",
          "items": {
            "$ref": "CreateRowRequest"
          },
          "type": "array"
        }
      },
      "id": "BatchCreateRowsRequest",
      "type": "object"
    },
    "BatchUpdateRowsRequest": {
      "id": "BatchUpdateRowsRequest",
      "type": "object",
      "description": "Request message for TablesService.BatchUpdateRows.",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "UpdateRowRequest"
          },
          "description": "Required. The request messages specifying the rows to update. A maximum of 500 rows can be modified in a single batch."
        }
      }
    },
    "LabeledItem": {
      "type": "object",
      "id": "LabeledItem",
      "description": "A single item in a labeled column.",
      "properties": {
        "id": {
          "description": "Internal id associated with the item.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Display string as entered by user."
        }
      }
    },
    "ListRowsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.",
          "type": "string"
        },
        "rows": {
          "type": "array",
          "description": "The rows from the specified table.",
          "items": {
            "$ref": "Row"
          }
        }
      },
      "type": "object",
      "description": "Response message for TablesService.ListRows.",
      "id": "ListRowsResponse"
    },
    "BatchUpdateRowsResponse": {
      "description": "Response message for TablesService.BatchUpdateRows.",
      "properties": {
        "rows": {
          "description": "The updated rows.",
          "items": {
            "$ref": "Row"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "BatchUpdateRowsResponse"
    },
    "LookupDetails": {
      "description": "Details about a lookup column whose value comes from the associated relationship.",
      "properties": {
        "relationshipColumnId": {
          "description": "The id of the relationship column.",
          "type": "string"
        },
        "relationshipColumn": {
          "type": "string",
          "description": "The name of the relationship column associated with the lookup."
        }
      },
      "id": "LookupDetails",
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "ListWorkspacesResponse": {
      "type": "object",
      "id": "ListWorkspacesResponse",
      "properties": {
        "workspaces": {
          "items": {
            "$ref": "Workspace"
          },
          "description": "The list of workspaces.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."
        }
      },
      "description": "Response message for TablesService.ListWorkspaces."
    },
    "ColumnDescription": {
      "description": "Details on a column in the table.",
      "type": "object",
      "id": "ColumnDescription",
      "properties": {
        "dataType": {
          "type": "string",
          "description": "Data type of the column Supported types are auto_id, boolean, boolean_list, creator, create_timestamp, date, dropdown, location, integer, integer_list, number, number_list, person, person_list, tags, check_list, text, text_list, update_timestamp, updater, relationship, file_attachment_list. These types directly map to the column types supported on Tables website."
        },
        "relationshipDetails": {
          "$ref": "RelationshipDetails",
          "description": "Optional. Additional details about a relationship column. Specified when data_type is relationship."
        },
        "name": {
          "description": "column name",
          "type": "string"
        },
        "multipleValuesDisallowed": {
          "description": "Optional. Indicates whether or not multiple values are allowed for array types where such a restriction is possible.",
          "type": "boolean"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "LabeledItem"
          },
          "description": "Optional. Range of labeled values for the column. Some columns like tags and drop-downs limit the values to a set of possible values. We return the range of values in such cases to help clients implement better user data validation."
        },
        "id": {
          "type": "string",
          "description": "Internal id for a column."
        },
        "lookupDetails": {
          "$ref": "LookupDetails",
          "description": "Optional. Indicates that this is a lookup column whose value is derived from the relationship column specified in the details. Lookup columns can not be updated directly. To change the value you must update the associated relationship column."
        }
      }
    },
    "ListTablesResponse": {
      "description": "Response message for TablesService.ListTables.",
      "id": "ListTablesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."
        },
        "tables": {
          "items": {
            "$ref": "Table"
          },
          "description": "The list of tables.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "Row": {
      "description": "A single row in a table.",
      "properties": {
        "createTime": {
          "type": "string",
          "description": "Time when the row was created.",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row."
        },
        "updateTime": {
          "type": "string",
          "description": "Time when the row was last updated.",
          "format": "google-datetime"
        },
        "values": {
          "additionalProperties": {
            "type": "any"
          },
          "type": "object",
          "description": "The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request."
        }
      },
      "id": "Row",
      "type": "object"
    },
    "Workspace": {
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Time when the workspace was last updated.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The human readable title of the workspace."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the workspace. Workspace names have the form `workspaces/{workspace}`."
        },
        "createTime": {
          "description": "Time when the workspace was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "Table"
          },
          "description": "The list of tables in the workspace."
        }
      },
      "type": "object",
      "description": "A single workspace.",
      "id": "Workspace"
    },
    "Table": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the table. Table names have the form `tables/{table}`.",
          "type": "string"
        },
        "savedViews": {
          "items": {
            "$ref": "SavedView"
          },
          "description": "Saved views for this table.",
          "type": "array"
        },
        "createTime": {
          "description": "Time when the table was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Time when the table was last updated excluding updates to individual rows",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "The human readable title of the table.",
          "type": "string"
        },
        "columns": {
          "description": "List of columns in this table. Order of columns matches the display order.",
          "type": "array",
          "items": {
            "$ref": "ColumnDescription"
          }
        }
      },
      "id": "Table",
      "description": "A single table. NextId: 7"
    },
    "BatchDeleteRowsRequest": {
      "type": "object",
      "properties": {
        "names": {
          "type": "array",
          "description": "Required. The names of the rows to delete. All rows must belong to the parent table or else the entire batch will fail. A maximum of 500 rows can be deleted in a batch. Format: tables/{table}/rows/{row}",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Request message for TablesService.BatchDeleteRows",
      "id": "BatchDeleteRowsRequest"
    },
    "UpdateRowRequest": {
      "description": "Request message for TablesService.UpdateRow.",
      "id": "UpdateRowRequest",
      "properties": {
        "view": {
          "enumDescriptions": [
            "Defaults to user entered text.",
            "Uses internally generated column id to identify values."
          ],
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
          "enum": [
            "VIEW_UNSPECIFIED",
            "COLUMN_ID_VIEW"
          ],
          "type": "string"
        },
        "updateMask": {
          "type": "string",
          "description": "The list of fields to update.",
          "format": "google-fieldmask"
        },
        "row": {
          "$ref": "Row",
          "description": "Required. The row to update."
        }
      },
      "type": "object"
    }
  },
  "title": "Area120 Tables API",
  "protocol": "rest",
  "version": "v1alpha1",
  "basePath": "",
  "ownerName": "Google"
}
