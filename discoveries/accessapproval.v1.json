{
  "kind": "discovery#restDescription",
  "version": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "id": "accessapproval:v1",
  "revision": "20210416",
  "schemas": {
    "ApprovalRequest": {
      "properties": {
        "dismiss": {
          "description": "The request was dismissed.",
          "$ref": "DismissDecision"
        },
        "requestedLocations": {
          "description": "The locations for which approval is being requested.",
          "$ref": "AccessLocations"
        },
        "approve": {
          "$ref": "ApproveDecision",
          "description": "Access was approved."
        },
        "name": {
          "description": "The resource name of the request. Format is \"{projects|folders|organizations}/{id}/approvalRequests/{approval_request}\".",
          "type": "string"
        },
        "requestedExpiration": {
          "description": "The requested expiration for the approval. If the request is approved, access will be granted from the time of approval until the expiration time.",
          "format": "google-datetime",
          "type": "string"
        },
        "requestedResourceName": {
          "description": "The resource for which approval is being requested. The format of the resource name is defined at https://cloud.google.com/apis/design/resource_names. The resource name here may either be a \"full\" resource name (e.g. \"//library.googleapis.com/shelves/shelf1/books/book2\") or a \"relative\" resource name (e.g. \"shelves/shelf1/books/book2\") as described in the resource name specification.",
          "type": "string"
        },
        "requestedReason": {
          "$ref": "AccessReason",
          "description": "The justification for which approval is being requested."
        },
        "requestedResourceProperties": {
          "$ref": "ResourceProperties",
          "description": "Properties related to the resource represented by requested_resource_name."
        },
        "requestTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which approval was requested."
        }
      },
      "description": "A request for the customer to approve access to a resource.",
      "type": "object",
      "id": "ApprovalRequest"
    },
    "ListApprovalRequestsResponse": {
      "description": "Response to listing of ApprovalRequest objects.",
      "type": "object",
      "id": "ListApprovalRequestsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more."
        },
        "approvalRequests": {
          "type": "array",
          "items": {
            "$ref": "ApprovalRequest"
          },
          "description": "Approval request details."
        }
      }
    },
    "AccessApprovalSettings": {
      "properties": {
        "enrolledServices": {
          "items": {
            "$ref": "EnrolledService"
          },
          "description": "A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the resource given by name against any of these services contained here will be required to have explicit approval. If name refers to an organization, enrollment can be done for individual services. If name refers to a folder or project, enrollment can only be done on an all or nothing basis. If a cloud_product is repeated in this list, the first entry will be honored and all following entries will be discarded. A maximum of 10 enrolled services will be enforced, to be expanded as the set of supported services is expanded.",
          "type": "array"
        },
        "notificationEmails": {
          "description": "A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email addresses are allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enrolledAncestor": {
          "type": "boolean",
          "description": "Output only. This field is read only (not settable via UpdateAccessAccessApprovalSettings method). If the field is true, that indicates that at least one service is enrolled for Access Approval in one or more ancestors of the Project or Folder (this field will always be unset for the organization since organizations do not have ancestors).",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The resource name of the settings. Format is one of: * \"projects/{project}/accessApprovalSettings\" * \"folders/{folder}/accessApprovalSettings\" * \"organizations/{organization}/accessApprovalSettings\""
        }
      },
      "type": "object",
      "description": "Settings on a Project/Folder/Organization related to Access Approval.",
      "id": "AccessApprovalSettings"
    },
    "ApproveDecision": {
      "id": "ApproveDecision",
      "description": "A decision that has been made to approve access to a resource.",
      "properties": {
        "approveTime": {
          "description": "The time at which approval was granted.",
          "type": "string",
          "format": "google-datetime"
        },
        "expireTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which the approval expires."
        }
      },
      "type": "object"
    },
    "DismissApprovalRequestMessage": {
      "description": "Request to dismiss an approval request.",
      "properties": {},
      "type": "object",
      "id": "DismissApprovalRequestMessage"
    },
    "ApproveApprovalRequestMessage": {
      "properties": {
        "expireTime": {
          "description": "The expiration time of this approval.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Request to approve an ApprovalRequest.",
      "type": "object",
      "id": "ApproveApprovalRequestMessage"
    },
    "AccessLocations": {
      "description": "Home office and physical location of the principal.",
      "type": "object",
      "id": "AccessLocations",
      "properties": {
        "principalOfficeCountry": {
          "type": "string",
          "description": "The \"home office\" location of the principal. A two-letter country code (ISO 3166-1 alpha-2), such as \"US\", \"DE\" or \"GB\" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location"
        },
        "principalPhysicalLocationCountry": {
          "description": "Physical location of the principal at the time of the access. A two-letter country code (ISO 3166-1 alpha-2), such as \"US\", \"DE\" or \"GB\" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location",
          "type": "string"
        }
      }
    },
    "DismissDecision": {
      "description": "A decision that has been made to dismiss an approval request.",
      "properties": {
        "dismissTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time at which the approval request was dismissed."
        },
        "implicit": {
          "description": "This field will be true if the ApprovalRequest was implcitly dismissed due to inaction by the access approval approvers (the request is not acted on by the approvers before the exiration time).",
          "type": "boolean"
        }
      },
      "id": "DismissDecision",
      "type": "object"
    },
    "AccessReason": {
      "properties": {
        "detail": {
          "type": "string",
          "description": "More detail about certain reason types. See comments for each type above."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CUSTOMER_INITIATED_SUPPORT",
            "GOOGLE_INITIATED_SERVICE",
            "GOOGLE_INITIATED_REVIEW"
          ],
          "type": "string",
          "description": "Type of access justification.",
          "enumDescriptions": [
            "Default value for proto, shouldn't be used.",
            "Customer made a request or raised an issue that required the principal to access customer data. `detail` is of the form (\"#####\" is the issue ID): * \"Feedback Report: #####\" * \"Case Number: #####\" * \"Case ID: #####\" * \"E-PIN Reference: #####\" * \"Google-#####\" * \"T-#####\"",
            "The principal accessed customer data in order to diagnose or resolve a suspected issue in services or a known outage. Often this access is used to confirm that customers are not affected by a suspected service issue or to remediate a reversible system issue.",
            "Google initiated service for security, fraud, abuse, or compliance purposes."
          ]
        }
      },
      "type": "object",
      "id": "AccessReason"
    },
    "ResourceProperties": {
      "properties": {
        "excludesDescendants": {
          "description": "Whether an approval will exclude the descendants of the resource being requested.",
          "type": "boolean"
        }
      },
      "description": "The properties associated with the resource of the request.",
      "id": "ResourceProperties",
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object"
    },
    "EnrolledService": {
      "id": "EnrolledService",
      "type": "object",
      "description": "Represents the enrollment of a cloud resource into a specific service.",
      "properties": {
        "enrollmentLevel": {
          "type": "string",
          "enum": [
            "ENROLLMENT_LEVEL_UNSPECIFIED",
            "BLOCK_ALL"
          ],
          "description": "The enrollment level of the service.",
          "enumDescriptions": [
            "Default value for proto, shouldn't be used.",
            "Service is enrolled in Access Approval for all requests"
          ]
        },
        "cloudProduct": {
          "description": "The product for which Access Approval will be enrolled. Allowed values are listed below (case-sensitive): * all * App Engine * BigQuery * Cloud Bigtable * Cloud Key Management Service * Compute Engine * Cloud Dataflow * Cloud Identity and Access Management * Cloud Logging * Cloud Pub/Sub * Cloud Spanner * Cloud Storage * Persistent Disk Note: These values are supported as input for legacy purposes, but will not be returned from the API. * all * appengine.googleapis.com * bigquery.googleapis.com * bigtable.googleapis.com * cloudkms.googleapis.com * compute.googleapis.com * dataflow.googleapis.com * iam.googleapis.com * logging.googleapis.com * pubsub.googleapis.com * spanner.googleapis.com * storage.googleapis.com Calls to UpdateAccessApprovalSettings using 'all' or any of the XXX.googleapis.com will be translated to the associated product name ('all', 'App Engine', etc.). Note: 'all' will enroll the resource in all products supported at both 'GA' and 'Preview' levels. More information about levels of support is available at https://cloud.google.com/access-approval/docs/supported-services",
          "type": "string"
        }
      }
    }
  },
  "mtlsRootUrl": "https://accessapproval.mtls.googleapis.com/",
  "version_module": true,
  "protocol": "rest",
  "documentationLink": "https://cloud.google.com/access-approval/docs",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "description": "An API for controlling access to data by Google personnel.",
  "canonicalName": "Access Approval",
  "name": "accessapproval",
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "batchPath": "batch",
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format.",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "type": "string",
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    }
  },
  "basePath": "",
  "ownerName": "Google",
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://accessapproval.googleapis.com/",
  "resources": {
    "folders": {
      "resources": {
        "approvalRequests": {
          "methods": {
            "dismiss": {
              "flatPath": "v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:dismiss",
              "description": "Dismisses a request. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It is equivalent in effect to ignoring the request altogether. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.",
              "id": "accessapproval.folders.approvalRequests.dismiss",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^folders/[^/]+/approvalRequests/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Name of the ApprovalRequest to dismiss."
                }
              },
              "response": {
                "$ref": "ApprovalRequest"
              },
              "path": "v1/{+name}:dismiss",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "DismissApprovalRequestMessage"
              }
            },
            "list": {
              "id": "accessapproval.folders.approvalRequests.list",
              "flatPath": "v1/folders/{foldersId}/approvalRequests",
              "parameters": {
                "parent": {
                  "pattern": "^folders/[^/]+$",
                  "location": "path",
                  "description": "The parent resource. This may be \"projects/{project}\", \"folders/{folder}\", or \"organizations/{organization}\".",
                  "type": "string",
                  "required": true
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "Requested page size.",
                  "format": "int32"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter on the type of approval requests to retrieve. Must be one of the following values: * [not set]: Requests that are pending or have active approvals. * ALL: All requests. * PENDING: Only pending requests. * ACTIVE: Only active (i.e. currently approved) requests. * DISMISSED: Only requests that have been dismissed, or requests that are not approved and past expiration. * EXPIRED: Only requests that have been approved, and the approval has expired. * HISTORY: Active, dismissed and expired requests.",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A token identifying the page of results to return.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListApprovalRequestsResponse"
              },
              "description": "Lists approval requests associated with a project, folder, or organization. Approval requests can be filtered by state (pending, active, dismissed). The order is reverse chronological.",
              "path": "v1/{+parent}/approvalRequests"
            },
            "approve": {
              "response": {
                "$ref": "ApprovalRequest"
              },
              "httpMethod": "POST",
              "request": {
                "$ref": "ApproveApprovalRequestMessage"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Name of the approval request to approve.",
                  "type": "string",
                  "pattern": "^folders/[^/]+/approvalRequests/[^/]+$",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "accessapproval.folders.approvalRequests.approve",
              "flatPath": "v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}:approve",
              "parameterOrder": [
                "name"
              ],
              "description": "Approves a request and returns the updated ApprovalRequest. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.",
              "path": "v1/{+name}:approve"
            },
            "get": {
              "flatPath": "v1/folders/{foldersId}/approvalRequests/{approvalRequestsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ApprovalRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "accessapproval.folders.approvalRequests.get",
              "description": "Gets an approval request. Returns NOT_FOUND if the request does not exist.",
              "parameters": {
                "name": {
                  "pattern": "^folders/[^/]+/approvalRequests/[^/]+$",
                  "description": "Name of the approval request to retrieve.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "path": "v1/{+name}"
            }
          }
        }
      },
      "methods": {
        "getAccessApprovalSettings": {
          "description": "Gets the settings associated with a project, folder, or organization.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "location": "path",
              "description": "Name of the AccessApprovalSettings to retrieve.",
              "pattern": "^folders/[^/]+/accessApprovalSettings$",
              "type": "string",
              "required": true
            }
          },
          "id": "accessapproval.folders.getAccessApprovalSettings",
          "path": "v1/{+name}",
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/folders/{foldersId}/accessApprovalSettings",
          "response": {
            "$ref": "AccessApprovalSettings"
          }
        },
        "updateAccessApprovalSettings": {
          "parameters": {
            "name": {
              "description": "The resource name of the settings. Format is one of: * \"projects/{project}/accessApprovalSettings\" * \"folders/{folder}/accessApprovalSettings\" * \"organizations/{organization}/accessApprovalSettings\"",
              "location": "path",
              "type": "string",
              "pattern": "^folders/[^/]+/accessApprovalSettings$",
              "required": true
            },
            "updateMask": {
              "location": "query",
              "format": "google-fieldmask",
              "description": "The update mask applies to the settings. Only the top level fields of AccessApprovalSettings (notification_emails & enrolled_services) are supported. For each field, if it is included, the currently stored value will be entirely overwritten with the value of the field passed in this request. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If this field is left unset, only the notification_emails field will be updated.",
              "type": "string"
            }
          },
          "id": "accessapproval.folders.updateAccessApprovalSettings",
          "description": "Updates the settings associated with a project, folder, or organization. Settings to update are determined by the value of field_mask.",
          "request": {
            "$ref": "AccessApprovalSettings"
          },
          "flatPath": "v1/folders/{foldersId}/accessApprovalSettings",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "AccessApprovalSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}",
          "httpMethod": "PATCH"
        },
        "deleteAccessApprovalSettings": {
          "httpMethod": "DELETE",
          "description": "Deletes the settings associated with a project, folder, or organization. This will have the effect of disabling Access Approval for the project, folder, or organization, but only if all ancestors also have Access Approval disabled. If Access Approval is enabled at a higher level of the hierarchy, then Access Approval will still be enabled at this level as the settings are inherited.",
          "path": "v1/{+name}",
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^folders/[^/]+/accessApprovalSettings$",
              "description": "Name of the AccessApprovalSettings to delete.",
              "type": "string",
              "location": "path"
            }
          },
          "id": "accessapproval.folders.deleteAccessApprovalSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/folders/{foldersId}/accessApprovalSettings",
          "parameterOrder": [
            "name"
          ]
        }
      }
    },
    "projects": {
      "methods": {
        "getAccessApprovalSettings": {
          "path": "v1/{+name}",
          "flatPath": "v1/projects/{projectsId}/accessApprovalSettings",
          "description": "Gets the settings associated with a project, folder, or organization.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "pattern": "^projects/[^/]+/accessApprovalSettings$",
              "description": "Name of the AccessApprovalSettings to retrieve.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "id": "accessapproval.projects.getAccessApprovalSettings",
          "response": {
            "$ref": "AccessApprovalSettings"
          },
          "parameterOrder": [
            "name"
          ]
        },
        "updateAccessApprovalSettings": {
          "parameters": {
            "updateMask": {
              "type": "string",
              "location": "query",
              "format": "google-fieldmask",
              "description": "The update mask applies to the settings. Only the top level fields of AccessApprovalSettings (notification_emails & enrolled_services) are supported. For each field, if it is included, the currently stored value will be entirely overwritten with the value of the field passed in this request. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If this field is left unset, only the notification_emails field will be updated."
            },
            "name": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The resource name of the settings. Format is one of: * \"projects/{project}/accessApprovalSettings\" * \"folders/{folder}/accessApprovalSettings\" * \"organizations/{organization}/accessApprovalSettings\"",
              "pattern": "^projects/[^/]+/accessApprovalSettings$"
            }
          },
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/projects/{projectsId}/accessApprovalSettings",
          "description": "Updates the settings associated with a project, folder, or organization. Settings to update are determined by the value of field_mask.",
          "request": {
            "$ref": "AccessApprovalSettings"
          },
          "path": "v1/{+name}",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "AccessApprovalSettings"
          },
          "id": "accessapproval.projects.updateAccessApprovalSettings"
        },
        "deleteAccessApprovalSettings": {
          "response": {
            "$ref": "Empty"
          },
          "id": "accessapproval.projects.deleteAccessApprovalSettings",
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}",
          "flatPath": "v1/projects/{projectsId}/accessApprovalSettings",
          "description": "Deletes the settings associated with a project, folder, or organization. This will have the effect of disabling Access Approval for the project, folder, or organization, but only if all ancestors also have Access Approval disabled. If Access Approval is enabled at a higher level of the hierarchy, then Access Approval will still be enabled at this level as the settings are inherited.",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "description": "Name of the AccessApprovalSettings to delete.",
              "type": "string",
              "location": "path",
              "required": true,
              "pattern": "^projects/[^/]+/accessApprovalSettings$"
            }
          }
        }
      },
      "resources": {
        "approvalRequests": {
          "methods": {
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "description": "A token identifying the page of results to return.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "description": "Requested page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "parent": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The parent resource. This may be \"projects/{project}\", \"folders/{folder}\", or \"organizations/{organization}\".",
                  "pattern": "^projects/[^/]+$"
                },
                "filter": {
                  "type": "string",
                  "description": "A filter on the type of approval requests to retrieve. Must be one of the following values: * [not set]: Requests that are pending or have active approvals. * ALL: All requests. * PENDING: Only pending requests. * ACTIVE: Only active (i.e. currently approved) requests. * DISMISSED: Only requests that have been dismissed, or requests that are not approved and past expiration. * EXPIRED: Only requests that have been approved, and the approval has expired. * HISTORY: Active, dismissed and expired requests.",
                  "location": "query"
                }
              },
              "id": "accessapproval.projects.approvalRequests.list",
              "path": "v1/{+parent}/approvalRequests",
              "flatPath": "v1/projects/{projectsId}/approvalRequests",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListApprovalRequestsResponse"
              },
              "description": "Lists approval requests associated with a project, folder, or organization. Approval requests can be filtered by state (pending, active, dismissed). The order is reverse chronological.",
              "httpMethod": "GET"
            },
            "approve": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}:approve",
              "flatPath": "v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:approve",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/approvalRequests/[^/]+$",
                  "location": "path",
                  "description": "Name of the approval request to approve."
                }
              },
              "response": {
                "$ref": "ApprovalRequest"
              },
              "id": "accessapproval.projects.approvalRequests.approve",
              "description": "Approves a request and returns the updated ApprovalRequest. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.",
              "request": {
                "$ref": "ApproveApprovalRequestMessage"
              }
            },
            "dismiss": {
              "path": "v1/{+name}:dismiss",
              "flatPath": "v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}:dismiss",
              "id": "accessapproval.projects.approvalRequests.dismiss",
              "httpMethod": "POST",
              "description": "Dismisses a request. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It is equivalent in effect to ignoring the request altogether. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.",
              "response": {
                "$ref": "ApprovalRequest"
              },
              "request": {
                "$ref": "DismissApprovalRequestMessage"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Name of the ApprovalRequest to dismiss.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/approvalRequests/[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "accessapproval.projects.approvalRequests.get",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/approvalRequests/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Name of the approval request to retrieve.",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "ApprovalRequest"
              },
              "description": "Gets an approval request. Returns NOT_FOUND if the request does not exist.",
              "flatPath": "v1/projects/{projectsId}/approvalRequests/{approvalRequestsId}"
            }
          }
        }
      }
    },
    "organizations": {
      "methods": {
        "deleteAccessApprovalSettings": {
          "response": {
            "$ref": "Empty"
          },
          "id": "accessapproval.organizations.deleteAccessApprovalSettings",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Deletes the settings associated with a project, folder, or organization. This will have the effect of disabling Access Approval for the project, folder, or organization, but only if all ancestors also have Access Approval disabled. If Access Approval is enabled at a higher level of the hierarchy, then Access Approval will still be enabled at this level as the settings are inherited.",
          "httpMethod": "DELETE",
          "path": "v1/{+name}",
          "flatPath": "v1/organizations/{organizationsId}/accessApprovalSettings",
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^organizations/[^/]+/accessApprovalSettings$",
              "location": "path",
              "required": true,
              "description": "Name of the AccessApprovalSettings to delete."
            }
          }
        },
        "updateAccessApprovalSettings": {
          "response": {
            "$ref": "AccessApprovalSettings"
          },
          "httpMethod": "PATCH",
          "id": "accessapproval.organizations.updateAccessApprovalSettings",
          "description": "Updates the settings associated with a project, folder, or organization. Settings to update are determined by the value of field_mask.",
          "parameters": {
            "name": {
              "location": "path",
              "description": "The resource name of the settings. Format is one of: * \"projects/{project}/accessApprovalSettings\" * \"folders/{folder}/accessApprovalSettings\" * \"organizations/{organization}/accessApprovalSettings\"",
              "type": "string",
              "pattern": "^organizations/[^/]+/accessApprovalSettings$",
              "required": true
            },
            "updateMask": {
              "type": "string",
              "location": "query",
              "format": "google-fieldmask",
              "description": "The update mask applies to the settings. Only the top level fields of AccessApprovalSettings (notification_emails & enrolled_services) are supported. For each field, if it is included, the currently stored value will be entirely overwritten with the value of the field passed in this request. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If this field is left unset, only the notification_emails field will be updated."
            }
          },
          "request": {
            "$ref": "AccessApprovalSettings"
          },
          "flatPath": "v1/organizations/{organizationsId}/accessApprovalSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}",
          "parameterOrder": [
            "name"
          ]
        },
        "getAccessApprovalSettings": {
          "description": "Gets the settings associated with a project, folder, or organization.",
          "id": "accessapproval.organizations.getAccessApprovalSettings",
          "flatPath": "v1/organizations/{organizationsId}/accessApprovalSettings",
          "response": {
            "$ref": "AccessApprovalSettings"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "pattern": "^organizations/[^/]+/accessApprovalSettings$",
              "location": "path",
              "description": "Name of the AccessApprovalSettings to retrieve.",
              "type": "string",
              "required": true
            }
          }
        }
      },
      "resources": {
        "approvalRequests": {
          "methods": {
            "get": {
              "response": {
                "$ref": "ApprovalRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}",
              "id": "accessapproval.organizations.approvalRequests.get",
              "parameters": {
                "name": {
                  "description": "Name of the approval request to retrieve.",
                  "pattern": "^organizations/[^/]+/approvalRequests/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Gets an approval request. Returns NOT_FOUND if the request does not exist.",
              "path": "v1/{+name}",
              "httpMethod": "GET"
            },
            "list": {
              "id": "accessapproval.organizations.approvalRequests.list",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/approvalRequests",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/organizations/{organizationsId}/approvalRequests",
              "response": {
                "$ref": "ListApprovalRequestsResponse"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^organizations/[^/]+$",
                  "description": "The parent resource. This may be \"projects/{project}\", \"folders/{folder}\", or \"organizations/{organization}\"."
                },
                "pageToken": {
                  "description": "A token identifying the page of results to return.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Requested page size.",
                  "location": "query"
                },
                "filter": {
                  "type": "string",
                  "description": "A filter on the type of approval requests to retrieve. Must be one of the following values: * [not set]: Requests that are pending or have active approvals. * ALL: All requests. * PENDING: Only pending requests. * ACTIVE: Only active (i.e. currently approved) requests. * DISMISSED: Only requests that have been dismissed, or requests that are not approved and past expiration. * EXPIRED: Only requests that have been approved, and the approval has expired. * HISTORY: Active, dismissed and expired requests.",
                  "location": "query"
                }
              },
              "description": "Lists approval requests associated with a project, folder, or organization. Approval requests can be filtered by state (pending, active, dismissed). The order is reverse chronological."
            },
            "dismiss": {
              "description": "Dismisses a request. Returns the updated ApprovalRequest. NOTE: This does not deny access to the resource if another request has been made and approved. It is equivalent in effect to ignoring the request altogether. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.",
              "response": {
                "$ref": "ApprovalRequest"
              },
              "httpMethod": "POST",
              "path": "v1/{+name}:dismiss",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "accessapproval.organizations.approvalRequests.dismiss",
              "request": {
                "$ref": "DismissApprovalRequestMessage"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Name of the ApprovalRequest to dismiss.",
                  "pattern": "^organizations/[^/]+/approvalRequests/[^/]+$"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:dismiss"
            },
            "approve": {
              "flatPath": "v1/organizations/{organizationsId}/approvalRequests/{approvalRequestsId}:approve",
              "request": {
                "$ref": "ApproveApprovalRequestMessage"
              },
              "path": "v1/{+name}:approve",
              "id": "accessapproval.organizations.approvalRequests.approve",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Approves a request and returns the updated ApprovalRequest. Returns NOT_FOUND if the request does not exist. Returns FAILED_PRECONDITION if the request exists but is not in a pending state.",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/approvalRequests/[^/]+$",
                  "type": "string",
                  "description": "Name of the approval request to approve.",
                  "location": "path",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "ApprovalRequest"
              },
              "parameterOrder": [
                "name"
              ]
            }
          }
        }
      }
    }
  },
  "title": "Access Approval API",
  "baseUrl": "https://accessapproval.googleapis.com/",
  "servicePath": ""
}
