{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/ediscovery": {
          "description": "Manage your eDiscovery data"
        },
        "https://www.googleapis.com/auth/ediscovery.readonly": {
          "description": "View your eDiscovery data"
        }
      }
    }
  },
  "baseUrl": "https://vault.googleapis.com/",
  "basePath": "",
  "rootUrl": "https://vault.googleapis.com/",
  "ownerName": "Google",
  "protocol": "rest",
  "fullyEncodeReservedExpansion": true,
  "documentationLink": "https://developers.google.com/vault",
  "description": "Archiving and eDiscovery for G Suite.",
  "canonicalName": "Vault",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "version": "v1",
  "id": "vault:v1",
  "parameters": {
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    }
  },
  "name": "vault",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "title": "G Suite Vault API",
  "version_module": true,
  "schemas": {
    "HangoutsChatOptions": {
      "properties": {
        "includeRooms": {
          "type": "boolean",
          "description": "Set to true to include rooms."
        }
      },
      "description": "Hangouts chat search advanced options",
      "id": "HangoutsChatOptions",
      "type": "object"
    },
    "ListOperationsResponse": {
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GroupsExportOptions": {
      "id": "GroupsExportOptions",
      "properties": {
        "exportFormat": {
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "description": "The export format for groups export.",
          "type": "string"
        }
      },
      "description": "The options for groups export.",
      "type": "object"
    },
    "AccountCountError": {
      "description": "An error that occurred when querying a specific account",
      "id": "AccountCountError",
      "type": "object",
      "properties": {
        "account": {
          "$ref": "UserInfo",
          "description": "Account owner."
        },
        "errorType": {
          "type": "string",
          "enumDescriptions": [
            "Default.",
            "Permanent - prefix terms expanded to too many query terms.",
            "Permanent - query contains too many terms.",
            "Transient - data in transit between storage replicas, temporarily unavailable.",
            "Unrecognized error.",
            "Deadline exceeded when querying the account."
          ],
          "description": "Account query error.",
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "WILDCARD_TOO_BROAD",
            "TOO_MANY_TERMS",
            "LOCATION_UNAVAILABLE",
            "UNKNOWN",
            "DEADLINE_EXCEEDED"
          ]
        }
      }
    },
    "ReopenMatterResponse": {
      "description": "Response to a ReopenMatterRequest.",
      "type": "object",
      "properties": {
        "matter": {
          "description": "The updated matter, with state OPEN.",
          "$ref": "Matter"
        }
      },
      "id": "ReopenMatterResponse"
    },
    "CountArtifactsMetadata": {
      "description": "Long running operation metadata for CountArtifacts.",
      "properties": {
        "matterId": {
          "type": "string",
          "description": "The matter ID of the associated matter."
        },
        "query": {
          "$ref": "Query",
          "description": "The search query from the request."
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Creation time of count operation."
        },
        "endTime": {
          "type": "string",
          "description": "End time of count operation. Available when operation is done.",
          "format": "google-datetime"
        }
      },
      "id": "CountArtifactsMetadata",
      "type": "object"
    },
    "HeldGroupsQuery": {
      "id": "HeldGroupsQuery",
      "description": "Query options for group holds.",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date."
        },
        "endTime": {
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "format": "google-datetime",
          "type": "string"
        },
        "terms": {
          "type": "string",
          "description": "The search terms for the hold."
        }
      },
      "type": "object"
    },
    "HeldDriveQuery": {
      "properties": {
        "includeTeamDriveFiles": {
          "description": "If true, include files in Team Drives in the hold.",
          "type": "boolean"
        },
        "includeSharedDriveFiles": {
          "type": "boolean",
          "description": "If true, include files in shared drives in the hold."
        }
      },
      "description": "Query options for Drive holds.",
      "type": "object",
      "id": "HeldDriveQuery"
    },
    "CloseMatterRequest": {
      "description": "Close a matter by ID.",
      "properties": {},
      "id": "CloseMatterRequest",
      "type": "object"
    },
    "DriveExportOptions": {
      "type": "object",
      "description": "The options for Drive export.",
      "id": "DriveExportOptions",
      "properties": {
        "includeAccessInfo": {
          "description": "Set to true to include access level information for users with indirect access to files.",
          "type": "boolean"
        }
      }
    },
    "UndeleteMatterRequest": {
      "type": "object",
      "properties": {},
      "id": "UndeleteMatterRequest",
      "description": "Undelete a matter by ID."
    },
    "HeldVoiceQuery": {
      "description": "Query options for Voice holds.",
      "id": "HeldVoiceQuery",
      "properties": {
        "coveredData": {
          "items": {
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ],
            "type": "string",
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text message will be covered.",
              "Voicemail will be covered.",
              "Call logs will be covered."
            ]
          },
          "type": "array",
          "description": "Data covered by this rule. Should be non-empty. Order does not matter and duplicates will be ignored."
        }
      },
      "type": "object"
    },
    "OrgUnitInfo": {
      "id": "OrgUnitInfo",
      "description": "Org Unit to search",
      "type": "object",
      "properties": {
        "orgUnitId": {
          "description": "Org unit to search, as provided by the Admin SDK Directory API.",
          "type": "string"
        }
      }
    },
    "CountArtifactsRequest": {
      "description": "Count artifacts request.",
      "type": "object",
      "properties": {
        "view": {
          "type": "string",
          "enum": [
            "COUNT_RESULT_VIEW_UNSPECIFIED",
            "TOTAL_COUNT",
            "ALL"
          ],
          "description": "Specifies the granularity of the count result returned in response.",
          "enumDescriptions": [
            "Default. It works the same as TOTAL_COUNT.",
            "Response includes: total count, queried accounts count, matching accounts count, non-queryable accounts, queried account errors.",
            "Response includes additional breakdown of account count."
          ]
        },
        "query": {
          "description": "The search query.",
          "$ref": "Query"
        }
      },
      "id": "CountArtifactsRequest"
    },
    "HeldMailQuery": {
      "properties": {
        "endTime": {
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "format": "google-datetime",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date."
        },
        "terms": {
          "type": "string",
          "description": "The search terms for the hold."
        }
      },
      "description": "Query options for mail holds.",
      "id": "HeldMailQuery",
      "type": "object"
    },
    "AddHeldAccountResult": {
      "description": "A status detailing the status of each account creation, and the HeldAccount, if successful.",
      "type": "object",
      "id": "AddHeldAccountResult",
      "properties": {
        "account": {
          "$ref": "HeldAccount",
          "description": "If present, this account was successfully created."
        },
        "status": {
          "description": "This represents the success status. If failed, check message.",
          "$ref": "Status"
        }
      }
    },
    "Status": {
      "id": "Status",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "ReopenMatterRequest": {
      "type": "object",
      "description": "Reopen a matter by ID.",
      "properties": {},
      "id": "ReopenMatterRequest"
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {}
    },
    "Matter": {
      "type": "object",
      "description": "Represents a matter. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the matter."
        },
        "matterId": {
          "description": "The matter ID which is generated by the server. Should be blank when creating a new matter.",
          "type": "string"
        },
        "name": {
          "description": "The name of the matter.",
          "type": "string"
        },
        "matterPermissions": {
          "description": "List of users and access to the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.",
          "items": {
            "$ref": "MatterPermission"
          },
          "type": "array"
        },
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "OPEN",
            "CLOSED",
            "DELETED"
          ],
          "enumDescriptions": [
            "The matter has no specified state.",
            "This matter is open.",
            "This matter is closed.",
            "This matter is deleted."
          ],
          "description": "The state of the matter."
        }
      },
      "id": "Matter"
    },
    "ExportStats": {
      "properties": {
        "sizeInBytes": {
          "description": "The size of export in bytes.",
          "format": "int64",
          "type": "string"
        },
        "exportedArtifactCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of documents already processed by the export."
        },
        "totalArtifactCount": {
          "description": "The number of documents to be exported.",
          "format": "int64",
          "type": "string"
        }
      },
      "description": "Stats of an export.",
      "type": "object",
      "id": "ExportStats"
    },
    "AccountCount": {
      "description": "Count number for each account.",
      "properties": {
        "account": {
          "$ref": "UserInfo",
          "description": "Account owner."
        },
        "count": {
          "type": "string",
          "format": "int64",
          "description": "The number of artifacts found for this account."
        }
      },
      "id": "AccountCount",
      "type": "object"
    },
    "MatterPermission": {
      "type": "object",
      "description": "Currently each matter only has one owner, and all others are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist.",
      "id": "MatterPermission",
      "properties": {
        "role": {
          "enumDescriptions": [
            "No role assigned.",
            "A collaborator to the matter.",
            "The owner of the matter."
          ],
          "enum": [
            "ROLE_UNSPECIFIED",
            "COLLABORATOR",
            "OWNER"
          ],
          "type": "string",
          "description": "The user's role in this matter."
        },
        "accountId": {
          "type": "string",
          "description": "The account ID, as provided by Admin SDK."
        }
      }
    },
    "AccountInfo": {
      "description": "Accounts to search",
      "id": "AccountInfo",
      "type": "object",
      "properties": {
        "emails": {
          "type": "array",
          "description": "A set of accounts to search.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CountArtifactsResponse": {
      "properties": {
        "totalCount": {
          "type": "string",
          "description": "Total count of artifacts. For mail and groups, artifacts refers to messages.",
          "format": "int64"
        },
        "groupsCountResult": {
          "$ref": "GroupsCountResult",
          "description": "Count metrics of Groups."
        },
        "mailCountResult": {
          "description": "Count metrics of Mail.",
          "$ref": "MailCountResult"
        }
      },
      "type": "object",
      "id": "CountArtifactsResponse",
      "description": "Definition of the response for method CountArtifacts."
    },
    "SharedDriveInfo": {
      "properties": {
        "sharedDriveIds": {
          "description": "List of Shared drive IDs, as provided by Drive API.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "SharedDriveInfo",
      "description": "Shared drives to search"
    },
    "VoiceExportOptions": {
      "type": "object",
      "description": "The options for voice export.",
      "properties": {
        "exportFormat": {
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "type": "string",
          "description": "The export format for voice export."
        }
      },
      "id": "VoiceExportOptions"
    },
    "Query": {
      "id": "Query",
      "type": "object",
      "description": "A query definition relevant for search & export.",
      "properties": {
        "endTime": {
          "type": "string",
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "format": "google-datetime"
        },
        "hangoutsChatInfo": {
          "description": "When 'ROOM' is chosen as search method, hangout_chats_info needs to be specified. (read-only)",
          "$ref": "HangoutsChatInfo"
        },
        "accountInfo": {
          "$ref": "AccountInfo",
          "description": "When 'ACCOUNT' is chosen as search method, account_info needs to be specified."
        },
        "orgUnitInfo": {
          "description": "When 'ORG_UNIT' is chosen as as search method, org_unit_info needs to be specified.",
          "$ref": "OrgUnitInfo"
        },
        "terms": {
          "type": "string",
          "description": "The corpus-specific search operators used to generate search results."
        },
        "dataScope": {
          "type": "string",
          "enumDescriptions": [
            "No data scope specified.",
            "All available data.",
            "Data on hold.",
            "Data not processed."
          ],
          "description": "The data source to search from.",
          "enum": [
            "DATA_SCOPE_UNSPECIFIED",
            "ALL_DATA",
            "HELD_DATA",
            "UNPROCESSED_DATA"
          ]
        },
        "corpus": {
          "type": "string",
          "enumDescriptions": [
            "No corpus specified.",
            "Drive.",
            "Mail.",
            "Groups.",
            "Hangouts Chat.",
            "Google Voice."
          ],
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ],
          "description": "The corpus to search."
        },
        "sharedDriveInfo": {
          "$ref": "SharedDriveInfo",
          "description": "When 'SHARED_DRIVE' is chosen as search method, shared_drive_info needs to be specified."
        },
        "timeZone": {
          "description": "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For more information, see Time Zone.",
          "type": "string"
        },
        "voiceOptions": {
          "description": "For voice search, specify more options in this field.",
          "$ref": "VoiceOptions"
        },
        "method": {
          "enumDescriptions": [
            "A search method must be specified. If a request does not specify a search method, it will be rejected.",
            "Will search all accounts provided in account_info.",
            "Will search all accounts in the OU specified in org_unit_info.",
            "Will search for all accounts in the Team Drive specified in team_drive_info.",
            "Will search for all accounts in the organization. No need to set account_info or org_unit_info. Not all CORPUS_TYPE support this scope. Supported by MAIL.",
            "Will search in the Room specified in hangout_chats_info. (read-only)",
            "Will search for all accounts in the shared drive specified in shared_drive_info."
          ],
          "type": "string",
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "description": "The search method to use. This field is similar to the search_method field but is introduced to support shared drives. It supports all search method types. In case the search_method is TEAM_DRIVE the response of this field will be SHARED_DRIVE only."
        },
        "teamDriveInfo": {
          "$ref": "TeamDriveInfo",
          "description": "When 'TEAM_DRIVE' is chosen as search method, team_drive_info needs to be specified."
        },
        "hangoutsChatOptions": {
          "description": "For hangouts chat search, specify more options in this field. (read-only)",
          "$ref": "HangoutsChatOptions"
        },
        "driveOptions": {
          "description": "For Drive search, specify more options in this field.",
          "$ref": "DriveOptions"
        },
        "mailOptions": {
          "$ref": "MailOptions",
          "description": "For mail search, specify more options in this field."
        },
        "searchMethod": {
          "type": "string",
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "enumDescriptions": [
            "A search method must be specified. If a request does not specify a search method, it will be rejected.",
            "Will search all accounts provided in account_info.",
            "Will search all accounts in the OU specified in org_unit_info.",
            "Will search for all accounts in the Team Drive specified in team_drive_info.",
            "Will search for all accounts in the organization. No need to set account_info or org_unit_info. Not all CORPUS_TYPE support this scope. Supported by MAIL.",
            "Will search in the Room specified in hangout_chats_info. (read-only)",
            "Will search for all accounts in the shared drive specified in shared_drive_info."
          ],
          "description": "The search method to use."
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "type": "string"
        }
      }
    },
    "HangoutsChatInfo": {
      "description": "Accounts to search",
      "properties": {
        "roomId": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of rooms to search."
        }
      },
      "id": "HangoutsChatInfo",
      "type": "object"
    },
    "UserInfo": {
      "description": "User's information.",
      "id": "UserInfo",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address of the user.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The displayed name of the user."
        }
      }
    },
    "CorpusQuery": {
      "description": "Corpus specific queries.",
      "id": "CorpusQuery",
      "properties": {
        "voiceQuery": {
          "$ref": "HeldVoiceQuery",
          "description": "Details pertaining to Voice holds. If set, corpus must be Voice."
        },
        "hangoutsChatQuery": {
          "description": "Details pertaining to Hangouts Chat holds. If set, corpus must be Hangouts Chat.",
          "$ref": "HeldHangoutsChatQuery"
        },
        "groupsQuery": {
          "description": "Details pertaining to Groups holds. If set, corpus must be Groups.",
          "$ref": "HeldGroupsQuery"
        },
        "driveQuery": {
          "description": "Details pertaining to Drive holds. If set, corpus must be Drive.",
          "$ref": "HeldDriveQuery"
        },
        "mailQuery": {
          "description": "Details pertaining to mail holds. If set, corpus must be mail.",
          "$ref": "HeldMailQuery"
        }
      },
      "type": "object"
    },
    "Hold": {
      "id": "Hold",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the hold."
        },
        "orgUnit": {
          "description": "If set, the hold applies to all members of the organizational unit and accounts must be empty. This property is mutable. For groups holds, set the accounts field.",
          "$ref": "HeldOrgUnit"
        },
        "corpus": {
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT",
            "VOICE"
          ],
          "type": "string",
          "description": "The corpus to be searched.",
          "enumDescriptions": [
            "No corpus specified.",
            "Drive.",
            "Mail.",
            "Groups.",
            "Hangouts Chat.",
            "Google Voice."
          ]
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last time this hold was modified."
        },
        "accounts": {
          "description": "If set, the hold applies to the enumerated accounts and org_unit must be empty.",
          "type": "array",
          "items": {
            "$ref": "HeldAccount"
          }
        },
        "holdId": {
          "type": "string",
          "description": "The unique immutable ID of the hold. Assigned during creation."
        },
        "query": {
          "description": "The corpus-specific query. If set, the corpusQuery must match corpus type.",
          "$ref": "CorpusQuery"
        }
      },
      "description": "Represents a hold within Vault. A hold restricts purging of artifacts based on the combination of the query and accounts restrictions. A hold can be configured to either apply to an explicitly configured set of accounts, or can be applied to all members of an organizational unit. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege."
    },
    "HeldAccount": {
      "id": "HeldAccount",
      "description": "An account being held in a particular hold. This structure is immutable. This can be either a single user or a google group, depending on the corpus. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "properties": {
        "holdTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. When the account was put on hold."
        },
        "accountId": {
          "type": "string",
          "description": "The account's ID as provided by the Admin SDK."
        },
        "lastName": {
          "type": "string",
          "description": "Output only. The last name of the account holder."
        },
        "firstName": {
          "description": "Output only. The first name of the account holder.",
          "type": "string"
        },
        "email": {
          "description": "The primary email address of the account. If used as an input, this takes precedence over account ID.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TeamDriveInfo": {
      "properties": {
        "teamDriveIds": {
          "description": "List of Team Drive IDs, as provided by Drive API.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Team Drives to search",
      "id": "TeamDriveInfo"
    },
    "ListHeldAccountsResponse": {
      "id": "ListHeldAccountsResponse",
      "type": "object",
      "description": "Returns a list of held accounts for a hold.",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "HeldAccount"
          },
          "description": "The held accounts on a hold."
        }
      }
    },
    "RemoveHeldAccountsRequest": {
      "properties": {
        "accountIds": {
          "description": "Account IDs to identify HeldAccounts to remove.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Remove a list of accounts from a hold.",
      "id": "RemoveHeldAccountsRequest"
    },
    "GroupsCountResult": {
      "properties": {
        "queriedAccountsCount": {
          "description": "Total number of accounts involved in this count operation.",
          "format": "int64",
          "type": "string"
        },
        "accountCountErrors": {
          "items": {
            "$ref": "AccountCountError"
          },
          "type": "array",
          "description": "Error occurred when querying these accounts."
        },
        "accountCounts": {
          "type": "array",
          "description": "Subtotal count per matching account that have more than zero messages.",
          "items": {
            "$ref": "AccountCount"
          }
        },
        "nonQueryableAccounts": {
          "type": "array",
          "description": "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
          "items": {
            "type": "string"
          }
        },
        "matchingAccountsCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of accounts that can be queried and have more than zero messages."
        }
      },
      "id": "GroupsCountResult",
      "description": "Groups specific count metrics.",
      "type": "object"
    },
    "DriveOptions": {
      "properties": {
        "includeTeamDrives": {
          "type": "boolean",
          "description": "Set to true to include Team Drive."
        },
        "versionDate": {
          "description": "Search the versions of the Drive file as of the reference date. These timestamps are in GMT and rounded down to the given date.",
          "format": "google-datetime",
          "type": "string"
        },
        "includeSharedDrives": {
          "type": "boolean",
          "description": "Set to true to include shared drive."
        }
      },
      "type": "object",
      "id": "DriveOptions",
      "description": "Drive search advanced options"
    },
    "ListExportsResponse": {
      "properties": {
        "exports": {
          "description": "The list of exports.",
          "items": {
            "$ref": "Export"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list."
        }
      },
      "description": "The holds for a matter.",
      "id": "ListExportsResponse",
      "type": "object"
    },
    "MailCountResult": {
      "type": "object",
      "description": "Mail specific count metrics.",
      "id": "MailCountResult",
      "properties": {
        "accountCounts": {
          "description": "Subtotal count per matching account that have more than zero messages.",
          "items": {
            "$ref": "AccountCount"
          },
          "type": "array"
        },
        "queriedAccountsCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of accounts involved in this count operation."
        },
        "accountCountErrors": {
          "type": "array",
          "items": {
            "$ref": "AccountCountError"
          },
          "description": "Error occurred when querying these accounts."
        },
        "matchingAccountsCount": {
          "description": "Total number of accounts that can be queried and have more than zero messages.",
          "type": "string",
          "format": "int64"
        },
        "nonQueryableAccounts": {
          "items": {
            "type": "string"
          },
          "description": "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
          "type": "array"
        }
      }
    },
    "RemoveMatterPermissionsRequest": {
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The account ID."
        }
      },
      "description": "Remove an account as a matter collaborator.",
      "type": "object",
      "id": "RemoveMatterPermissionsRequest"
    },
    "CloudStorageFile": {
      "type": "object",
      "properties": {
        "md5Hash": {
          "type": "string",
          "description": "The md5 hash of the file."
        },
        "objectName": {
          "type": "string",
          "description": "The cloud storage object name of this export file. Can be used in cloud storage JSON/XML API."
        },
        "size": {
          "type": "string",
          "description": "The size of the export file.",
          "format": "int64"
        },
        "bucketName": {
          "type": "string",
          "description": "The cloud storage bucket name of this export file. Can be used in cloud storage JSON/XML API, but not to list the bucket contents. Instead, you can get individual export files by object name."
        }
      },
      "id": "CloudStorageFile",
      "description": "An export file on cloud storage"
    },
    "MailExportOptions": {
      "properties": {
        "exportFormat": {
          "description": "The export file format.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "type": "string"
        },
        "showConfidentialModeContent": {
          "type": "boolean",
          "description": "Set to true to export confidential mode content."
        }
      },
      "type": "object",
      "id": "MailExportOptions",
      "description": "The options for mail export."
    },
    "HangoutsChatExportOptions": {
      "description": "The options for hangouts chat export.",
      "type": "object",
      "id": "HangoutsChatExportOptions",
      "properties": {
        "exportFormat": {
          "description": "The export format for hangouts chat export.",
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ]
        }
      }
    },
    "CloudStorageSink": {
      "properties": {
        "files": {
          "type": "array",
          "description": "Output only. The exported files on cloud storage.",
          "items": {
            "$ref": "CloudStorageFile"
          }
        }
      },
      "type": "object",
      "description": "Export sink for cloud storage files.",
      "id": "CloudStorageSink"
    },
    "RemoveHeldAccountsResponse": {
      "description": "Response for batch delete held accounts.",
      "properties": {
        "statuses": {
          "description": "A list of statuses for deleted accounts. Results have the same order as the request.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        }
      },
      "id": "RemoveHeldAccountsResponse",
      "type": "object"
    },
    "MailOptions": {
      "description": "Mail search advanced options",
      "type": "object",
      "properties": {
        "excludeDrafts": {
          "type": "boolean",
          "description": "Set to true to exclude drafts."
        }
      },
      "id": "MailOptions"
    },
    "ListSavedQueriesResponse": {
      "type": "object",
      "properties": {
        "savedQueries": {
          "description": "List of output saved queries.",
          "type": "array",
          "items": {
            "$ref": "SavedQuery"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list."
        }
      },
      "description": "Definition of the response for method ListSaveQuery.",
      "id": "ListSavedQueriesResponse"
    },
    "VoiceOptions": {
      "type": "object",
      "properties": {
        "coveredData": {
          "description": "Datatypes to search",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Covered data unspecified.",
              "Voice text message will be covered.",
              "Voicemail will be covered.",
              "Call logs will be covered."
            ],
            "enum": [
              "COVERED_DATA_UNSPECIFIED",
              "TEXT_MESSAGES",
              "VOICEMAILS",
              "CALL_LOGS"
            ]
          },
          "type": "array"
        }
      },
      "description": "Voice search options",
      "id": "VoiceOptions"
    },
    "HeldHangoutsChatQuery": {
      "description": "Query options for hangouts chat holds.",
      "id": "HeldHangoutsChatQuery",
      "properties": {
        "includeRooms": {
          "type": "boolean",
          "description": "If true, include rooms the user has participated in."
        }
      },
      "type": "object"
    },
    "ListMattersResponse": {
      "description": "Provides the list of matters.",
      "properties": {
        "matters": {
          "items": {
            "$ref": "Matter"
          },
          "description": "List of matters.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        }
      },
      "id": "ListMattersResponse",
      "type": "object"
    },
    "SavedQuery": {
      "description": "Definition of the saved query. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "type": "object",
      "id": "SavedQuery",
      "properties": {
        "displayName": {
          "description": "Name of the saved query.",
          "type": "string"
        },
        "matterId": {
          "description": "Output only. The matter ID of the associated matter. The server does not look at this field during create and always uses matter id in the URL.",
          "type": "string"
        },
        "savedQueryId": {
          "type": "string",
          "description": "A unique identifier for the saved query."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The server generated timestamp at which saved query was created."
        },
        "query": {
          "description": "The underlying Query object which contains all the information of the saved query.",
          "$ref": "Query"
        }
      }
    },
    "Export": {
      "description": "An export To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.",
      "properties": {
        "requester": {
          "description": "Output only. The requester of the export.",
          "$ref": "UserInfo"
        },
        "query": {
          "$ref": "Query",
          "description": "The search query being exported."
        },
        "cloudStorageSink": {
          "$ref": "CloudStorageSink",
          "description": "Output only. Export sink for cloud storage files."
        },
        "matterId": {
          "description": "Output only. The matter ID.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Output only. The generated export ID."
        },
        "stats": {
          "description": "Output only. Export statistics.",
          "$ref": "ExportStats"
        },
        "status": {
          "enum": [
            "EXPORT_STATUS_UNSPECIFIED",
            "COMPLETED",
            "FAILED",
            "IN_PROGRESS"
          ],
          "description": "Output only. The export status.",
          "type": "string",
          "enumDescriptions": [
            "The status is unspecified.",
            "The export completed.",
            "The export failed.",
            "The export is still being executed."
          ]
        },
        "exportOptions": {
          "$ref": "ExportOptions",
          "description": "Advanced options of the export."
        },
        "name": {
          "type": "string",
          "description": "The export name."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the export was created."
        }
      },
      "id": "Export",
      "type": "object"
    },
    "ExportOptions": {
      "description": "Export advanced options",
      "type": "object",
      "properties": {
        "hangoutsChatOptions": {
          "description": "Option available for hangouts chat export.",
          "$ref": "HangoutsChatExportOptions"
        },
        "groupsOptions": {
          "$ref": "GroupsExportOptions",
          "description": "Option available for groups export."
        },
        "driveOptions": {
          "description": "Option available for Drive export.",
          "$ref": "DriveExportOptions"
        },
        "mailOptions": {
          "$ref": "MailExportOptions",
          "description": "Option available for mail export."
        },
        "region": {
          "enum": [
            "EXPORT_REGION_UNSPECIFIED",
            "ANY",
            "US",
            "EUROPE"
          ],
          "description": "The requested export location.",
          "type": "string",
          "enumDescriptions": [
            "The region is unspecified. Will be treated the same as ANY.",
            "Any region.",
            "US region.",
            "Europe region."
          ]
        },
        "voiceOptions": {
          "$ref": "VoiceExportOptions",
          "description": "Option available for voice export."
        }
      },
      "id": "ExportOptions"
    },
    "AddHeldAccountsResponse": {
      "type": "object",
      "id": "AddHeldAccountsResponse",
      "description": "Response for batch create held accounts.",
      "properties": {
        "responses": {
          "description": "The list of responses, in the same order as the batch request.",
          "type": "array",
          "items": {
            "$ref": "AddHeldAccountResult"
          }
        }
      }
    },
    "ListHoldsResponse": {
      "type": "object",
      "id": "ListHoldsResponse",
      "description": "The holds for a matter.",
      "properties": {
        "holds": {
          "description": "The list of holds.",
          "items": {
            "$ref": "Hold"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list.",
          "type": "string"
        }
      }
    },
    "AddHeldAccountsRequest": {
      "description": "Add a list of accounts to a hold.",
      "id": "AddHeldAccountsRequest",
      "properties": {
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Account IDs to identify which accounts to add. Only account_ids or only emails should be specified, but not both."
        },
        "emails": {
          "type": "array",
          "description": "Emails to identify which accounts to add. Only emails or only account_ids should be specified, but not both.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "CloseMatterResponse": {
      "type": "object",
      "id": "CloseMatterResponse",
      "description": "Response to a CloseMatterRequest.",
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state CLOSED."
        }
      }
    },
    "HeldOrgUnit": {
      "type": "object",
      "id": "HeldOrgUnit",
      "properties": {
        "orgUnitId": {
          "description": "The org unit's immutable ID as provided by the Admin SDK.",
          "type": "string"
        },
        "holdTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "When the org unit was put on hold. This property is immutable."
        }
      },
      "description": "A organizational unit being held in a particular hold. This structure is immutable."
    },
    "AddMatterPermissionsRequest": {
      "description": "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, it will be overwritten.",
      "type": "object",
      "id": "AddMatterPermissionsRequest",
      "properties": {
        "sendEmails": {
          "description": "True to send notification email to the added account. False to not send notification email.",
          "type": "boolean"
        },
        "ccMe": {
          "type": "boolean",
          "description": "Only relevant if send_emails is true. True to CC requestor in the email message. False to not CC requestor."
        },
        "matterPermission": {
          "$ref": "MatterPermission",
          "description": "The MatterPermission to add."
        }
      }
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "Operation",
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      }
    },
    "Empty": {
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "id": "Empty"
    }
  },
  "ownerDomain": "google.com",
  "revision": "20210406",
  "mtlsRootUrl": "https://vault.mtls.googleapis.com/",
  "discoveryVersion": "v1",
  "resources": {
    "operations": {
      "methods": {
        "list": {
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "id": "vault.operations.list",
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^operations$",
              "location": "path",
              "required": true,
              "description": "The name of the operation's parent resource."
            },
            "pageSize": {
              "description": "The standard list page size.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "filter": {
              "type": "string",
              "location": "query",
              "description": "The standard list filter."
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The standard list page token."
            }
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "flatPath": "v1/operations",
          "path": "v1/{+name}"
        },
        "get": {
          "id": "vault.operations.get",
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "type": "string",
              "required": true,
              "pattern": "^operations/.*$",
              "location": "path"
            }
          },
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "path": "v1/{+name}",
          "httpMethod": "GET"
        },
        "cancel": {
          "parameters": {
            "name": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The name of the operation resource to be cancelled.",
              "pattern": "^operations/.*$"
            }
          },
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "POST",
          "id": "vault.operations.cancel",
          "flatPath": "v1/operations/{operationsId}:cancel",
          "path": "v1/{+name}:cancel"
        },
        "delete": {
          "path": "v1/{+name}",
          "httpMethod": "DELETE",
          "response": {
            "$ref": "Empty"
          },
          "id": "vault.operations.delete",
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/operations/{operationsId}",
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be deleted.",
              "type": "string",
              "required": true,
              "location": "path",
              "pattern": "^operations/.*$"
            }
          }
        }
      }
    },
    "matters": {
      "resources": {
        "savedQueries": {
          "methods": {
            "get": {
              "parameters": {
                "matterId": {
                  "location": "path",
                  "type": "string",
                  "description": "The matter ID of the parent matter for which the saved query is to be retrieved.",
                  "required": true
                },
                "savedQueryId": {
                  "required": true,
                  "location": "path",
                  "description": "ID of the saved query to be retrieved.",
                  "type": "string"
                }
              },
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "response": {
                "$ref": "SavedQuery"
              },
              "id": "vault.matters.savedQueries.get",
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "description": "Retrieves a saved query by Id.",
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}"
            },
            "delete": {
              "parameters": {
                "matterId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The matter ID of the parent matter for which the saved query is to be deleted."
                },
                "savedQueryId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "ID of the saved query to be deleted."
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "description": "Deletes a saved query by Id.",
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "id": "vault.matters.savedQueries.delete"
            },
            "list": {
              "id": "vault.matters.savedQueries.list",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The pagination token as returned in the previous response. An empty token means start from the beginning."
                },
                "pageSize": {
                  "description": "The maximum number of saved queries to return.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "matterId": {
                  "description": "The matter ID of the parent matter for which the saved queries are to be retrieved.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "description": "Lists saved queries within a matter. An empty page token in ListSavedQueriesResponse denotes no more saved queries to list.",
              "parameterOrder": [
                "matterId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "httpMethod": "GET",
              "path": "v1/matters/{matterId}/savedQueries",
              "response": {
                "$ref": "ListSavedQueriesResponse"
              }
            },
            "create": {
              "httpMethod": "POST",
              "request": {
                "$ref": "SavedQuery"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "response": {
                "$ref": "SavedQuery"
              },
              "path": "v1/matters/{matterId}/savedQueries",
              "parameterOrder": [
                "matterId"
              ],
              "id": "vault.matters.savedQueries.create",
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "parameters": {
                "matterId": {
                  "required": true,
                  "description": "The matter ID of the parent matter for which the saved query is to be created.",
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Creates a saved query."
            }
          }
        },
        "holds": {
          "methods": {
            "addHeldAccounts": {
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "id": "vault.matters.holds.addHeldAccounts",
              "request": {
                "$ref": "AddHeldAccountsRequest"
              },
              "parameters": {
                "holdId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The hold ID."
                },
                "matterId": {
                  "description": "The matter ID.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "path": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "response": {
                "$ref": "AddHeldAccountsResponse"
              },
              "description": "Adds HeldAccounts to a hold. Returns a list of accounts that have been successfully added. Accounts can only be added to an existing account-based hold.",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "httpMethod": "POST"
            },
            "delete": {
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "description": "Removes a hold by ID. This will release any HeldAccounts on this Hold.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "location": "path",
                  "description": "The matter ID.",
                  "type": "string",
                  "required": true
                },
                "holdId": {
                  "type": "string",
                  "required": true,
                  "description": "The hold ID.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "id": "vault.matters.holds.delete"
            },
            "list": {
              "httpMethod": "GET",
              "path": "v1/matters/{matterId}/holds",
              "id": "vault.matters.holds.list",
              "parameterOrder": [
                "matterId"
              ],
              "response": {
                "$ref": "ListHoldsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "description": "Lists holds within a matter. An empty page token in ListHoldsResponse denotes no more holds to list.",
              "parameters": {
                "view": {
                  "location": "query",
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "type": "string",
                  "description": "Specifies which parts of the Hold to return.",
                  "enumDescriptions": [
                    "There is no specified view. Defaults to FULL_HOLD.",
                    "Response includes the id, name, update time, corpus, and query.",
                    "Full representation of a Hold. Response includes all fields of 'BASIC' and the entities the Hold applies to, such as accounts, or OU."
                  ]
                },
                "matterId": {
                  "type": "string",
                  "description": "The matter ID.",
                  "required": true,
                  "location": "path"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "The number of holds to return in the response, between 0 and 100 inclusive. Leaving this empty, or as 0, is the same as page_size = 100.",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "The pagination token as returned in the response. An empty token means start from the beginning.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v1/matters/{matterId}/holds"
            },
            "removeHeldAccounts": {
              "httpMethod": "POST",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "holdId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The hold ID."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "description": "Removes HeldAccounts from a hold. Returns a list of statuses in the same order as the request. If this request leaves the hold with no held accounts, the hold will not apply to any accounts.",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "response": {
                "$ref": "RemoveHeldAccountsResponse"
              },
              "path": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "id": "vault.matters.holds.removeHeldAccounts",
              "request": {
                "$ref": "RemoveHeldAccountsRequest"
              }
            },
            "update": {
              "description": "Updates the OU and/or query parameters of a hold. You cannot add accounts to a hold that covers an OU, nor can you add OUs to a hold that covers individual accounts. Accounts listed in the hold will be ignored.",
              "response": {
                "$ref": "Hold"
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "request": {
                "$ref": "Hold"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "httpMethod": "PUT",
              "id": "vault.matters.holds.update",
              "parameters": {
                "holdId": {
                  "type": "string",
                  "description": "The ID of the hold.",
                  "location": "path",
                  "required": true
                },
                "matterId": {
                  "description": "The matter ID.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "path": "v1/matters/{matterId}/holds/{holdId}"
            },
            "create": {
              "path": "v1/matters/{matterId}/holds",
              "httpMethod": "POST",
              "response": {
                "$ref": "Hold"
              },
              "request": {
                "$ref": "Hold"
              },
              "parameterOrder": [
                "matterId"
              ],
              "id": "vault.matters.holds.create",
              "description": "Creates a hold in the given matter.",
              "flatPath": "v1/matters/{matterId}/holds",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              }
            },
            "get": {
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "parameters": {
                "view": {
                  "description": "Specifies which parts of the Hold to return.",
                  "enumDescriptions": [
                    "There is no specified view. Defaults to FULL_HOLD.",
                    "Response includes the id, name, update time, corpus, and query.",
                    "Full representation of a Hold. Response includes all fields of 'BASIC' and the entities the Hold applies to, such as accounts, or OU."
                  ],
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ]
                },
                "holdId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The hold ID."
                },
                "matterId": {
                  "type": "string",
                  "description": "The matter ID.",
                  "location": "path",
                  "required": true
                }
              },
              "description": "Gets a hold by ID.",
              "httpMethod": "GET",
              "id": "vault.matters.holds.get",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "response": {
                "$ref": "Hold"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "path": "v1/matters/{matterId}/holds/{holdId}"
            }
          },
          "resources": {
            "accounts": {
              "methods": {
                "list": {
                  "description": "Lists HeldAccounts for a hold. This will only list individually specified held accounts. If the hold is on an OU, then use Admin SDK to enumerate its members.",
                  "httpMethod": "GET",
                  "id": "vault.matters.holds.accounts.list",
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery",
                    "https://www.googleapis.com/auth/ediscovery.readonly"
                  ],
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "response": {
                    "$ref": "ListHeldAccountsResponse"
                  },
                  "parameters": {
                    "holdId": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The hold ID."
                    },
                    "matterId": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The matter ID."
                    }
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts"
                },
                "delete": {
                  "description": "Removes a HeldAccount from a hold. If this request leaves the hold with no held accounts, the hold will not apply to any accounts.",
                  "parameters": {
                    "holdId": {
                      "description": "The hold ID.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "accountId": {
                      "location": "path",
                      "description": "The ID of the account to remove from the hold.",
                      "type": "string",
                      "required": true
                    },
                    "matterId": {
                      "required": true,
                      "description": "The matter ID.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "vault.matters.holds.accounts.delete",
                  "parameterOrder": [
                    "matterId",
                    "holdId",
                    "accountId"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "httpMethod": "DELETE"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "parameters": {
                    "matterId": {
                      "type": "string",
                      "location": "path",
                      "description": "The matter ID.",
                      "required": true
                    },
                    "holdId": {
                      "required": true,
                      "description": "The hold ID.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "HeldAccount"
                  },
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "response": {
                    "$ref": "HeldAccount"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "id": "vault.matters.holds.accounts.create",
                  "description": "Adds a HeldAccount to a hold. Accounts can only be added to a hold that has no held_org_unit set. Attempting to add an account to an OU-based hold will result in an error."
                }
              }
            }
          }
        },
        "exports": {
          "methods": {
            "create": {
              "flatPath": "v1/matters/{matterId}/exports",
              "path": "v1/matters/{matterId}/exports",
              "id": "vault.matters.exports.create",
              "response": {
                "$ref": "Export"
              },
              "description": "Creates an Export.",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The matter ID."
                }
              },
              "request": {
                "$ref": "Export"
              },
              "parameterOrder": [
                "matterId"
              ]
            },
            "get": {
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "response": {
                "$ref": "Export"
              },
              "id": "vault.matters.exports.get",
              "parameters": {
                "exportId": {
                  "description": "The export ID.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "matterId": {
                  "required": true,
                  "location": "path",
                  "description": "The matter ID.",
                  "type": "string"
                }
              },
              "description": "Gets an Export."
            },
            "list": {
              "parameterOrder": [
                "matterId"
              ],
              "parameters": {
                "matterId": {
                  "location": "path",
                  "description": "The matter ID.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "description": "The pagination token as returned in the response.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The number of exports to return in the response."
                }
              },
              "id": "vault.matters.exports.list",
              "description": "Lists Exports.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "response": {
                "$ref": "ListExportsResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v1/matters/{matterId}/exports",
              "path": "v1/matters/{matterId}/exports"
            },
            "delete": {
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "id": "vault.matters.exports.delete",
              "description": "Deletes an Export.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "parameters": {
                "matterId": {
                  "required": true,
                  "type": "string",
                  "description": "The matter ID.",
                  "location": "path"
                },
                "exportId": {
                  "location": "path",
                  "required": true,
                  "description": "The export ID.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE"
            }
          }
        }
      },
      "methods": {
        "addPermissions": {
          "path": "v1/matters/{matterId}:addPermissions",
          "parameters": {
            "matterId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The matter ID."
            }
          },
          "flatPath": "v1/matters/{matterId}:addPermissions",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "id": "vault.matters.addPermissions",
          "response": {
            "$ref": "MatterPermission"
          },
          "request": {
            "$ref": "AddMatterPermissionsRequest"
          },
          "description": "Adds an account as a matter collaborator.",
          "httpMethod": "POST",
          "parameterOrder": [
            "matterId"
          ]
        },
        "reopen": {
          "description": "Reopens the specified matter. Returns matter with updated state.",
          "response": {
            "$ref": "ReopenMatterResponse"
          },
          "request": {
            "$ref": "ReopenMatterRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "flatPath": "v1/matters/{matterId}:reopen",
          "path": "v1/matters/{matterId}:reopen",
          "httpMethod": "POST",
          "parameterOrder": [
            "matterId"
          ],
          "id": "vault.matters.reopen",
          "parameters": {
            "matterId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The matter ID."
            }
          }
        },
        "get": {
          "id": "vault.matters.get",
          "parameterOrder": [
            "matterId"
          ],
          "response": {
            "$ref": "Matter"
          },
          "parameters": {
            "matterId": {
              "type": "string",
              "description": "The matter ID.",
              "location": "path",
              "required": true
            },
            "view": {
              "location": "query",
              "type": "string",
              "enumDescriptions": [
                "There is no specified view.",
                "Response includes the matter_id, name, description, and state. Default choice.",
                "Full representation of matter is returned. Everything above and including MatterPermissions list."
              ],
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "description": "Specifies which parts of the Matter to return in the response."
            }
          },
          "flatPath": "v1/matters/{matterId}",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "httpMethod": "GET",
          "description": "Gets the specified matter.",
          "path": "v1/matters/{matterId}"
        },
        "create": {
          "httpMethod": "POST",
          "path": "v1/matters",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "parameterOrder": [],
          "description": "Creates a new matter with the given name and description. The initial state is open, and the owner is the method caller. Returns the created matter with default view.",
          "flatPath": "v1/matters",
          "id": "vault.matters.create",
          "response": {
            "$ref": "Matter"
          },
          "request": {
            "$ref": "Matter"
          },
          "parameters": {}
        },
        "close": {
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "id": "vault.matters.close",
          "request": {
            "$ref": "CloseMatterRequest"
          },
          "description": "Closes the specified matter. Returns matter with updated state.",
          "path": "v1/matters/{matterId}:close",
          "parameterOrder": [
            "matterId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "httpMethod": "POST",
          "flatPath": "v1/matters/{matterId}:close",
          "response": {
            "$ref": "CloseMatterResponse"
          }
        },
        "delete": {
          "flatPath": "v1/matters/{matterId}",
          "description": "Deletes the specified matter. Returns matter with updated state.",
          "parameterOrder": [
            "matterId"
          ],
          "id": "vault.matters.delete",
          "response": {
            "$ref": "Matter"
          },
          "path": "v1/matters/{matterId}",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "httpMethod": "DELETE",
          "parameters": {
            "matterId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The matter ID"
            }
          }
        },
        "list": {
          "path": "v1/matters",
          "id": "vault.matters.list",
          "description": "Lists matters the user has access to.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "ListMattersResponse"
          },
          "parameterOrder": [],
          "flatPath": "v1/matters",
          "parameters": {
            "pageSize": {
              "description": "The number of matters to return in the response. Default and maximum are 100.",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "view": {
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "type": "string",
              "enumDescriptions": [
                "There is no specified view.",
                "Response includes the matter_id, name, description, and state. Default choice.",
                "Full representation of matter is returned. Everything above and including MatterPermissions list."
              ],
              "location": "query",
              "description": "Specifies which parts of the matter to return in response."
            },
            "state": {
              "enum": [
                "STATE_UNSPECIFIED",
                "OPEN",
                "CLOSED",
                "DELETED"
              ],
              "type": "string",
              "location": "query",
              "description": "If set, list only matters with that specific state. The default is listing matters of all states.",
              "enumDescriptions": [
                "The matter has no specified state.",
                "This matter is open.",
                "This matter is closed.",
                "This matter is deleted."
              ]
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The pagination token as returned in the response."
            }
          }
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "parameterOrder": [
            "matterId"
          ],
          "response": {
            "$ref": "Matter"
          },
          "flatPath": "v1/matters/{matterId}",
          "httpMethod": "PUT",
          "parameters": {
            "matterId": {
              "type": "string",
              "description": "The matter ID.",
              "location": "path",
              "required": true
            }
          },
          "description": "Updates the specified matter. This updates only the name and description of the matter, identified by matter ID. Changes to any other fields are ignored. Returns the default view of the matter.",
          "request": {
            "$ref": "Matter"
          },
          "path": "v1/matters/{matterId}",
          "id": "vault.matters.update"
        },
        "count": {
          "parameterOrder": [
            "matterId"
          ],
          "description": "Counts the artifacts within the context of a matter and returns a detailed breakdown of metrics.",
          "request": {
            "$ref": "CountArtifactsRequest"
          },
          "flatPath": "v1/matters/{matterId}:count",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "id": "vault.matters.count",
          "response": {
            "$ref": "Operation"
          },
          "path": "v1/matters/{matterId}:count",
          "httpMethod": "POST",
          "parameters": {
            "matterId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The matter ID."
            }
          }
        },
        "removePermissions": {
          "id": "vault.matters.removePermissions",
          "response": {
            "$ref": "Empty"
          },
          "path": "v1/matters/{matterId}:removePermissions",
          "flatPath": "v1/matters/{matterId}:removePermissions",
          "description": "Removes an account as a matter collaborator.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "required": true,
              "location": "path",
              "description": "The matter ID.",
              "type": "string"
            }
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "RemoveMatterPermissionsRequest"
          }
        },
        "undelete": {
          "parameters": {
            "matterId": {
              "location": "path",
              "required": true,
              "description": "The matter ID.",
              "type": "string"
            }
          },
          "path": "v1/matters/{matterId}:undelete",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "httpMethod": "POST",
          "id": "vault.matters.undelete",
          "parameterOrder": [
            "matterId"
          ],
          "description": "Undeletes the specified matter. Returns matter with updated state.",
          "response": {
            "$ref": "Matter"
          },
          "flatPath": "v1/matters/{matterId}:undelete",
          "request": {
            "$ref": "UndeleteMatterRequest"
          }
        }
      }
    }
  },
  "servicePath": ""
}
