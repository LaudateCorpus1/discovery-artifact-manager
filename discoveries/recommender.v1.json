{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "version_module": true,
  "canonicalName": "Recommender",
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "basePath": "",
  "servicePath": "",
  "batchPath": "batch",
  "version": "v1",
  "protocol": "rest",
  "documentationLink": "https://cloud.google.com/recommender/docs/",
  "ownerName": "Google",
  "mtlsRootUrl": "https://recommender.mtls.googleapis.com/",
  "schemas": {
    "GoogleCloudRecommenderV1MarkRecommendationSucceededRequest": {
      "type": "object",
      "properties": {
        "etag": {
          "description": "Required. Fingerprint of the Recommendation. Provides optimistic locking.",
          "type": "string"
        },
        "stateMetadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "State properties to include with this state. Overwrites any existing `state_metadata`. Keys must match the regex /^a-z0-9{0,62}$/. Values must match the regex /^[a-zA-Z0-9_./-]{0,255}$/.",
          "type": "object"
        }
      },
      "id": "GoogleCloudRecommenderV1MarkRecommendationSucceededRequest",
      "description": "Request for the `MarkRecommendationSucceeded` Method."
    },
    "GoogleCloudRecommenderV1RecommendationStateInfo": {
      "properties": {
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Default state. Don't use directly.",
            "Recommendation is active and can be applied. Recommendations content can be updated by Google. ACTIVE recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.",
            "Recommendation is in claimed state. Recommendations content is immutable and cannot be updated by Google. CLAIMED recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.",
            "Recommendation is in succeeded state. Recommendations content is immutable and cannot be updated by Google. SUCCEEDED recommendations can be marked as SUCCEEDED, or FAILED.",
            "Recommendation is in failed state. Recommendations content is immutable and cannot be updated by Google. FAILED recommendations can be marked as SUCCEEDED, or FAILED.",
            "Recommendation is in dismissed state. Recommendation content can be updated by Google. DISMISSED recommendations can be marked as ACTIVE."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CLAIMED",
            "SUCCEEDED",
            "FAILED",
            "DISMISSED"
          ],
          "description": "The state of the recommendation, Eg ACTIVE, SUCCEEDED, FAILED."
        },
        "stateMetadata": {
          "description": "A map of metadata for the state, provided by user or automations systems.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudRecommenderV1RecommendationStateInfo",
      "type": "object",
      "description": "Information for state. Contains state and metadata."
    },
    "GoogleCloudRecommenderV1ListRecommendationsResponse": {
      "properties": {
        "recommendations": {
          "items": {
            "$ref": "GoogleCloudRecommenderV1Recommendation"
          },
          "description": "The set of recommendations for the `parent` resource.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be used to request the next page of results. This field is empty if there are no additional results."
        }
      },
      "id": "GoogleCloudRecommenderV1ListRecommendationsResponse",
      "type": "object",
      "description": "Response to the `ListRecommendations` method."
    },
    "GoogleCloudRecommenderV1ListInsightsResponse": {
      "id": "GoogleCloudRecommenderV1ListInsightsResponse",
      "type": "object",
      "properties": {
        "insights": {
          "description": "The set of insights for the `parent` resource.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecommenderV1Insight"
          }
        },
        "nextPageToken": {
          "description": "A token that can be used to request the next page of results. This field is empty if there are no additional results.",
          "type": "string"
        }
      },
      "description": "Response to the `ListInsights` method."
    },
    "GoogleCloudRecommenderV1MarkRecommendationFailedRequest": {
      "id": "GoogleCloudRecommenderV1MarkRecommendationFailedRequest",
      "type": "object",
      "description": "Request for the `MarkRecommendationFailed` Method.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Required. Fingerprint of the Recommendation. Provides optimistic locking."
        },
        "stateMetadata": {
          "type": "object",
          "description": "State properties to include with this state. Overwrites any existing `state_metadata`. Keys must match the regex /^a-z0-9{0,62}$/. Values must match the regex /^[a-zA-Z0-9_./-]{0,255}$/.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudRecommenderV1Insight": {
      "properties": {
        "associatedRecommendations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecommenderV1InsightRecommendationReference"
          },
          "description": "Recommendations derived from this insight."
        },
        "etag": {
          "type": "string",
          "description": "Fingerprint of the Insight. Provides optimistic locking when updating states."
        },
        "observationPeriod": {
          "type": "string",
          "format": "google-duration",
          "description": "Observation period that led to the insight. The source data used to generate the insight ends at last_refresh_time and begins at (last_refresh_time - observation_period)."
        },
        "name": {
          "description": "Name of the insight.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Free-form human readable summary in English. The maximum length is 500 characters."
        },
        "lastRefreshTime": {
          "description": "Timestamp of the latest data used to generate the insight.",
          "format": "google-datetime",
          "type": "string"
        },
        "stateInfo": {
          "description": "Information state and metadata.",
          "$ref": "GoogleCloudRecommenderV1InsightStateInfo"
        },
        "category": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified category.",
            "The insight is related to cost.",
            "The insight is related to security.",
            "The insight is related to performance.",
            "This insight is related to manageability."
          ],
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "COST",
            "SECURITY",
            "PERFORMANCE",
            "MANAGEABILITY"
          ],
          "description": "Category being targeted by the insight."
        },
        "insightSubtype": {
          "type": "string",
          "description": "Insight subtype. Insight content schema will be stable for a given subtype."
        },
        "content": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "A struct of custom fields to explain the insight. Example: \"grantedPermissionsCount\": \"1000\""
        },
        "targetResources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Fully qualified resource names that this insight is targeting."
        }
      },
      "type": "object",
      "description": "An insight along with the information used to derive the insight. The insight may have associated recomendations as well.",
      "id": "GoogleCloudRecommenderV1Insight"
    },
    "GoogleCloudRecommenderV1Impact": {
      "id": "GoogleCloudRecommenderV1Impact",
      "properties": {
        "category": {
          "type": "string",
          "description": "Category that is being targeted.",
          "enumDescriptions": [
            "Default unspecified category. Don't use directly.",
            "Indicates a potential increase or decrease in cost.",
            "Indicates a potential increase or decrease in security.",
            "Indicates a potential increase or decrease in performance.",
            "Indicates a potential increase or decrease in manageability."
          ],
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "COST",
            "SECURITY",
            "PERFORMANCE",
            "MANAGEABILITY"
          ]
        },
        "costProjection": {
          "description": "Use with CategoryType.COST",
          "$ref": "GoogleCloudRecommenderV1CostProjection"
        }
      },
      "description": "Contains the impact a recommendation can have for a given category.",
      "type": "object"
    },
    "GoogleCloudRecommenderV1RecommendationInsightReference": {
      "id": "GoogleCloudRecommenderV1RecommendationInsightReference",
      "type": "object",
      "description": "Reference to an associated insight.",
      "properties": {
        "insight": {
          "type": "string",
          "description": "Insight resource name, e.g. projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]/insights/[INSIGHT_ID]"
        }
      }
    },
    "GoogleCloudRecommenderV1OperationGroup": {
      "description": "Group of operations that need to be performed atomically.",
      "id": "GoogleCloudRecommenderV1OperationGroup",
      "properties": {
        "operations": {
          "items": {
            "$ref": "GoogleCloudRecommenderV1Operation"
          },
          "description": "List of operations across one or more resources that belong to this group. Loosely based on RFC6902 and should be performed in the order they appear.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudRecommenderV1ValueMatcher": {
      "type": "object",
      "description": "Contains various matching options for values for a GCP resource field.",
      "id": "GoogleCloudRecommenderV1ValueMatcher",
      "properties": {
        "matchesPattern": {
          "type": "string",
          "description": "To be used for full regex matching. The regular expression is using the Google RE2 syntax (https://github.com/google/re2/wiki/Syntax), so to be used with RE2::FullMatch"
        }
      }
    },
    "GoogleCloudRecommenderV1InsightStateInfo": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "ACCEPTED",
            "DISMISSED"
          ],
          "type": "string",
          "description": "Insight state.",
          "enumDescriptions": [
            "Unspecified state.",
            "Insight is active. Content for ACTIVE insights can be updated by Google. ACTIVE insights can be marked DISMISSED OR ACCEPTED.",
            "Some action has been taken based on this insight. Insights become accepted when a recommendation derived from the insight has been marked CLAIMED, SUCCEEDED, or FAILED. ACTIVE insights can also be marked ACCEPTED explicitly. Content for ACCEPTED insights is immutable. ACCEPTED insights can only be marked ACCEPTED (which may update state metadata).",
            "Insight is dismissed. Content for DISMISSED insights can be updated by Google. DISMISSED insights can be marked as ACTIVE."
          ]
        },
        "stateMetadata": {
          "description": "A map of metadata for the state, provided by user or automations systems.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudRecommenderV1InsightStateInfo",
      "type": "object",
      "description": "Information related to insight state."
    },
    "GoogleCloudRecommenderV1Recommendation": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "Fingerprint of the Recommendation. Provides optimistic locking when updating states."
        },
        "recommenderSubtype": {
          "description": "Contains an identifier for a subtype of recommendations produced for the same recommender. Subtype is a function of content and impact, meaning a new subtype might be added when significant changes to `content` or `primary_impact.category` are introduced. See the Recommenders section to see a list of subtypes for a given Recommender. Examples: For recommender = \"google.iam.policy.Recommender\", recommender_subtype can be one of \"REMOVE_ROLE\"/\"REPLACE_ROLE\"",
          "type": "string"
        },
        "description": {
          "description": "Free-form human readable summary in English. The maximum length is 500 characters.",
          "type": "string"
        },
        "lastRefreshTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Last time this recommendation was refreshed by the system that created it in the first place."
        },
        "name": {
          "description": "Name of recommendation.",
          "type": "string"
        },
        "associatedInsights": {
          "description": "Insights that led to this recommendation.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecommenderV1RecommendationInsightReference"
          }
        },
        "content": {
          "description": "Content of the recommendation describing recommended changes to resources.",
          "$ref": "GoogleCloudRecommenderV1RecommendationContent"
        },
        "additionalImpact": {
          "type": "array",
          "description": "Optional set of additional impact that this recommendation may have when trying to optimize for the primary category. These may be positive or negative.",
          "items": {
            "$ref": "GoogleCloudRecommenderV1Impact"
          }
        },
        "stateInfo": {
          "description": "Information for state. Contains state and metadata.",
          "$ref": "GoogleCloudRecommenderV1RecommendationStateInfo"
        },
        "primaryImpact": {
          "description": "The primary impact that this recommendation can have while trying to optimize for one category.",
          "$ref": "GoogleCloudRecommenderV1Impact"
        }
      },
      "description": "A recommendation along with a suggested action. E.g., a rightsizing recommendation for an underutilized VM, IAM role recommendations, etc",
      "id": "GoogleCloudRecommenderV1Recommendation",
      "type": "object"
    },
    "GoogleCloudRecommenderV1CostProjection": {
      "description": "Contains metadata about how much money a recommendation can save or incur.",
      "id": "GoogleCloudRecommenderV1CostProjection",
      "type": "object",
      "properties": {
        "duration": {
          "description": "Duration for which this cost applies.",
          "format": "google-duration",
          "type": "string"
        },
        "cost": {
          "$ref": "GoogleTypeMoney",
          "description": "An approximate projection on amount saved or amount incurred. Negative cost units indicate cost savings and positive cost units indicate increase. See google.type.Money documentation for positive/negative units."
        }
      }
    },
    "GoogleCloudRecommenderV1MarkRecommendationClaimedRequest": {
      "id": "GoogleCloudRecommenderV1MarkRecommendationClaimedRequest",
      "type": "object",
      "properties": {
        "stateMetadata": {
          "description": "State properties to include with this state. Overwrites any existing `state_metadata`. Keys must match the regex /^a-z0-9{0,62}$/. Values must match the regex /^[a-zA-Z0-9_./-]{0,255}$/.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "type": "string",
          "description": "Required. Fingerprint of the Recommendation. Provides optimistic locking."
        }
      },
      "description": "Request for the `MarkRecommendationClaimed` Method."
    },
    "GoogleCloudRecommenderV1Operation": {
      "id": "GoogleCloudRecommenderV1Operation",
      "properties": {
        "sourceResource": {
          "description": "Can be set with action 'copy' to copy resource configuration across different resources of the same type. Example: A resource clone can be done via action = 'copy', path = \"/\", from = \"/\", source_resource = and resource_name = . This field is empty for all other values of `action`.",
          "type": "string"
        },
        "pathFilters": {
          "additionalProperties": {
            "type": "any"
          },
          "type": "object",
          "description": "Set of filters to apply if `path` refers to array elements or nested array elements in order to narrow down to a single unique element that is being tested/modified. This is intended to be an exact match per filter. To perform advanced matching, use path_value_matchers. * Example: { \"/versions/*/name\" : \"it-123\" \"/versions/*/targetSize/percent\": 20 } * Example: { \"/bindings/*/role\": \"roles/owner\" \"/bindings/*/condition\" : null } * Example: { \"/bindings/*/role\": \"roles/owner\" \"/bindings/*/members/*\" : [\"x@example.com\", \"y@example.com\"] } When both path_filters and path_value_matchers are set, an implicit AND must be performed."
        },
        "value": {
          "type": "any",
          "description": "Value for the `path` field. Will be set for actions:'add'/'replace'. Maybe set for action: 'test'. Either this or `value_matcher` will be set for 'test' operation. An exact match must be performed."
        },
        "resourceType": {
          "description": "Type of GCP resource being modified/tested. This field is always populated. Example: cloudresourcemanager.googleapis.com/Project, compute.googleapis.com/Instance",
          "type": "string"
        },
        "sourcePath": {
          "type": "string",
          "description": "Can be set with action 'copy' or 'move' to indicate the source field within resource or source_resource, ignored if provided for other operation types."
        },
        "pathValueMatchers": {
          "additionalProperties": {
            "$ref": "GoogleCloudRecommenderV1ValueMatcher"
          },
          "description": "Similar to path_filters, this contains set of filters to apply if `path` field refers to array elements. This is meant to support value matching beyond exact match. To perform exact match, use path_filters. When both path_filters and path_value_matchers are set, an implicit AND must be performed.",
          "type": "object"
        },
        "path": {
          "description": "Path to the target field being operated on. If the operation is at the resource level, then path should be \"/\". This field is always populated.",
          "type": "string"
        },
        "action": {
          "description": "Type of this operation. Contains one of 'and', 'remove', 'replace', 'move', 'copy', 'test' and custom operations. This field is case-insensitive and always populated.",
          "type": "string"
        },
        "valueMatcher": {
          "description": "Can be set for action 'test' for advanced matching for the value of 'path' field. Either this or `value` will be set for 'test' operation.",
          "$ref": "GoogleCloudRecommenderV1ValueMatcher"
        },
        "resource": {
          "description": "Contains the fully qualified resource name. This field is always populated. ex: //cloudresourcemanager.googleapis.com/projects/foo.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Contains an operation for a resource loosely based on the JSON-PATCH format with support for: * Custom filters for describing partial array patch. * Extended path values for describing nested arrays. * Custom fields for describing the resource for which the operation is being described. * Allows extension to custom operations not natively supported by RFC6902. See https://tools.ietf.org/html/rfc6902 for details on the original RFC."
    },
    "GoogleCloudRecommenderV1RecommendationContent": {
      "description": "Contains what resources are changing and how they are changing.",
      "id": "GoogleCloudRecommenderV1RecommendationContent",
      "properties": {
        "operationGroups": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecommenderV1OperationGroup"
          },
          "description": "Operations to one or more Google Cloud resources grouped in such a way that, all operations within one group are expected to be performed atomically and in an order."
        }
      },
      "type": "object"
    },
    "GoogleTypeMoney": {
      "type": "object",
      "description": "Represents an amount of money with its currency type.",
      "properties": {
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "format": "int32",
          "type": "integer"
        },
        "units": {
          "type": "string",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "format": "int64"
        },
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        }
      },
      "id": "GoogleTypeMoney"
    },
    "GoogleCloudRecommenderV1InsightRecommendationReference": {
      "description": "Reference to an associated recommendation.",
      "id": "GoogleCloudRecommenderV1InsightRecommendationReference",
      "type": "object",
      "properties": {
        "recommendation": {
          "type": "string",
          "description": "Recommendation resource name, e.g. projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]/recommendations/[RECOMMENDATION_ID]"
        }
      }
    },
    "GoogleCloudRecommenderV1MarkInsightAcceptedRequest": {
      "properties": {
        "etag": {
          "description": "Required. Fingerprint of the Insight. Provides optimistic locking.",
          "type": "string"
        },
        "stateMetadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. State properties user wish to include with this state. Full replace of the current state_metadata."
        }
      },
      "description": "Request for the `MarkInsightAccepted` method.",
      "type": "object",
      "id": "GoogleCloudRecommenderV1MarkInsightAcceptedRequest"
    }
  },
  "name": "recommender",
  "title": "Recommender API",
  "description": "",
  "revision": "20210410",
  "rootUrl": "https://recommender.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "fullyEncodeReservedExpansion": true,
  "baseUrl": "https://recommender.googleapis.com/",
  "kind": "discovery#restDescription",
  "id": "recommender:v1",
  "resources": {
    "folders": {
      "resources": {
        "locations": {
          "resources": {
            "insightTypes": {
              "resources": {
                "insights": {
                  "methods": {
                    "get": {
                      "id": "recommender.folders.locations.insightTypes.insights.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}",
                      "path": "v1/{+name}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^folders/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "description": "Required. Name of the insight."
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Insight"
                      },
                      "httpMethod": "GET",
                      "description": "Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "markAccepted": {
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Insight"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted",
                      "description": "Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkInsightAcceptedRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "recommender.folders.locations.insightTypes.insights.markAccepted",
                      "parameters": {
                        "name": {
                          "pattern": "^folders/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the insight.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "path": "v1/{+name}:markAccepted",
                      "httpMethod": "POST"
                    },
                    "list": {
                      "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call.",
                          "type": "string"
                        },
                        "parent": {
                          "location": "path",
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: 1. `projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 2. `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 3. `folders/[FOLDER_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 4. `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ INSIGHT_TYPE_ID refers to supported insight types: https://cloud.google.com/recommender/docs/insights/insight-types.",
                          "type": "string",
                          "pattern": "^folders/[^/]+/locations/[^/]+/insightTypes/[^/]+$",
                          "required": true
                        },
                        "filter": {
                          "description": "Optional. Filter expression to restrict the insights returned. Supported filter fields: state Eg: `state:\"DISMISSED\" or state:\"ACTIVE\"",
                          "type": "string",
                          "location": "query"
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return.",
                          "type": "integer"
                        }
                      },
                      "id": "recommender.folders.locations.insightTypes.insights.list",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/insights",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1ListInsightsResponse"
                      },
                      "description": "Lists insights for a Cloud project. Requires the recommender.*.list IAM permission for the specified insight type."
                    }
                  }
                }
              }
            },
            "recommenders": {
              "resources": {
                "recommendations": {
                  "methods": {
                    "markSucceeded": {
                      "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded",
                      "id": "recommender.folders.locations.recommenders.recommendations.markSucceeded",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^folders/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the recommendation.",
                          "required": true
                        }
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+name}:markSucceeded",
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationSucceededRequest"
                      }
                    },
                    "markFailed": {
                      "path": "v1/{+name}:markFailed",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "recommender.folders.locations.recommenders.recommendations.markFailed",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationFailedRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^folders/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "description": "Required. Name of the recommendation."
                        }
                      },
                      "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed",
                      "description": "Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "description": "Lists recommendations for a Cloud project. Requires the recommender.*.list IAM permission for the specified recommender.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/recommendations",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1ListRecommendationsResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call."
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: 1. `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 2. `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 3. `folders/[FOLDER_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 4. `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ RECOMMENDER_ID refers to supported recommenders: https://cloud.google.com/recommender/docs/recommenders.",
                          "required": true,
                          "pattern": "^folders/[^/]+/locations/[^/]+/recommenders/[^/]+$",
                          "location": "path"
                        },
                        "filter": {
                          "description": "Filter expression to restrict the recommendations returned. Supported filter fields: state_info.state Eg: `state_info.state:\"DISMISSED\" or state_info.state:\"FAILED\"",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return."
                        }
                      },
                      "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations",
                      "httpMethod": "GET",
                      "id": "recommender.folders.locations.recommenders.recommendations.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "id": "recommender.folders.locations.recommenders.recommendations.get",
                      "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender.",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the recommendation.",
                          "type": "string",
                          "pattern": "^folders/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "path": "v1/{+name}"
                    },
                    "markClaimed": {
                      "id": "recommender.folders.locations.recommenders.recommendations.markClaimed",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "flatPath": "v1/folders/{foldersId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}:markClaimed",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationClaimedRequest"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "pattern": "^folders/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "description": "Required. Name of the recommendation.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "recommenders": {
              "resources": {
                "recommendations": {
                  "methods": {
                    "list": {
                      "path": "v1/{+parent}/recommendations",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "pageToken": {
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Filter expression to restrict the recommendations returned. Supported filter fields: state_info.state Eg: `state_info.state:\"DISMISSED\" or state_info.state:\"FAILED\""
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+$",
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: 1. `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 2. `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 3. `folders/[FOLDER_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 4. `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ RECOMMENDER_ID refers to supported recommenders: https://cloud.google.com/recommender/docs/recommenders.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1ListRecommendationsResponse"
                      },
                      "id": "recommender.projects.locations.recommenders.recommendations.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "description": "Lists recommendations for a Cloud project. Requires the recommender.*.list IAM permission for the specified recommender."
                    },
                    "markSucceeded": {
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the recommendation.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$"
                        }
                      },
                      "description": "Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "id": "recommender.projects.locations.recommenders.recommendations.markSucceeded",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded",
                      "path": "v1/{+name}:markSucceeded",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationSucceededRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "httpMethod": "POST"
                    },
                    "markClaimed": {
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationClaimedRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "recommender.projects.locations.recommenders.recommendations.markClaimed",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the recommendation.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "type": "string"
                        }
                      },
                      "description": "Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "path": "v1/{+name}:markClaimed"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "description": "Required. Name of the recommendation.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "description": "Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender.",
                      "id": "recommender.projects.locations.recommenders.recommendations.get"
                    },
                    "markFailed": {
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. Name of the recommendation.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "type": "string",
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationFailedRequest"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "httpMethod": "POST",
                      "id": "recommender.projects.locations.recommenders.recommendations.markFailed",
                      "description": "Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "path": "v1/{+name}:markFailed"
                    }
                  }
                }
              }
            },
            "insightTypes": {
              "resources": {
                "insights": {
                  "methods": {
                    "markAccepted": {
                      "path": "v1/{+name}:markAccepted",
                      "id": "recommender.projects.locations.insightTypes.insights.markAccepted",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Insight"
                      },
                      "description": "Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the insight.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkInsightAcceptedRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Filter expression to restrict the insights returned. Supported filter fields: state Eg: `state:\"DISMISSED\" or state:\"ACTIVE\""
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call."
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: 1. `projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 2. `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 3. `folders/[FOLDER_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 4. `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ INSIGHT_TYPE_ID refers to supported insight types: https://cloud.google.com/recommender/docs/insights/insight-types.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/insightTypes/[^/]+$",
                          "required": true
                        },
                        "pageSize": {
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return.",
                          "type": "integer"
                        }
                      },
                      "id": "recommender.projects.locations.insightTypes.insights.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights",
                      "path": "v1/{+parent}/insights",
                      "description": "Lists insights for a Cloud project. Requires the recommender.*.list IAM permission for the specified insight type.",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1ListInsightsResponse"
                      }
                    },
                    "get": {
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the insight.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "location": "path"
                        }
                      },
                      "path": "v1/{+name}",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}",
                      "id": "recommender.projects.locations.insightTypes.insights.get",
                      "description": "Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Insight"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "billingAccounts": {
      "resources": {
        "locations": {
          "resources": {
            "insightTypes": {
              "resources": {
                "insights": {
                  "methods": {
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: 1. `projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 2. `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 3. `folders/[FOLDER_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 4. `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ INSIGHT_TYPE_ID refers to supported insight types: https://cloud.google.com/recommender/docs/insights/insight-types.",
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/insightTypes/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Filter expression to restrict the insights returned. Supported filter fields: state Eg: `state:\"DISMISSED\" or state:\"ACTIVE\""
                        },
                        "pageToken": {
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "id": "recommender.billingAccounts.locations.insightTypes.insights.list",
                      "flatPath": "v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights",
                      "path": "v1/{+parent}/insights",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1ListInsightsResponse"
                      },
                      "description": "Lists insights for a Cloud project. Requires the recommender.*.list IAM permission for the specified insight type."
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}",
                      "description": "Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the insight.",
                          "location": "path",
                          "required": true,
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$"
                        }
                      },
                      "id": "recommender.billingAccounts.locations.insightTypes.insights.get",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Insight"
                      },
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET"
                    },
                    "markAccepted": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}:markAccepted",
                      "description": "Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. Name of the insight.",
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "id": "recommender.billingAccounts.locations.insightTypes.insights.markAccepted",
                      "flatPath": "v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkInsightAcceptedRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Insight"
                      }
                    }
                  }
                }
              }
            },
            "recommenders": {
              "resources": {
                "recommendations": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "description": "Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender.",
                      "path": "v1/{+name}",
                      "flatPath": "v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. Name of the recommendation.",
                          "location": "path",
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "recommender.billingAccounts.locations.recommenders.recommendations.get",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "markClaimed": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the recommendation.",
                          "type": "string",
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "required": true
                        }
                      },
                      "path": "v1/{+name}:markClaimed",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "flatPath": "v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationClaimedRequest"
                      },
                      "id": "recommender.billingAccounts.locations.recommenders.recommendations.markClaimed",
                      "httpMethod": "POST",
                      "description": "Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender."
                    },
                    "markSucceeded": {
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationSucceededRequest"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Name of the recommendation."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "recommender.billingAccounts.locations.recommenders.recommendations.markSucceeded",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "path": "v1/{+name}:markSucceeded",
                      "flatPath": "v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded",
                      "description": "Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender."
                    },
                    "markFailed": {
                      "path": "v1/{+name}:markFailed",
                      "httpMethod": "POST",
                      "description": "Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the recommendation.",
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "id": "recommender.billingAccounts.locations.recommenders.recommendations.markFailed",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationFailedRequest"
                      }
                    },
                    "list": {
                      "httpMethod": "GET",
                      "description": "Lists recommendations for a Cloud project. Requires the recommender.*.list IAM permission for the specified recommender.",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1ListRecommendationsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "recommender.billingAccounts.locations.recommenders.recommendations.list",
                      "flatPath": "v1/billingAccounts/{billingAccountsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations",
                      "parameters": {
                        "pageToken": {
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^billingAccounts/[^/]+/locations/[^/]+/recommenders/[^/]+$",
                          "type": "string",
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: 1. `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 2. `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 3. `folders/[FOLDER_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 4. `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ RECOMMENDER_ID refers to supported recommenders: https://cloud.google.com/recommender/docs/recommenders.",
                          "location": "path",
                          "required": true
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        },
                        "filter": {
                          "description": "Filter expression to restrict the recommendations returned. Supported filter fields: state_info.state Eg: `state_info.state:\"DISMISSED\" or state_info.state:\"FAILED\"",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+parent}/recommendations"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "organizations": {
      "resources": {
        "locations": {
          "resources": {
            "insightTypes": {
              "resources": {
                "insights": {
                  "methods": {
                    "markAccepted": {
                      "id": "recommender.organizations.locations.insightTypes.insights.markAccepted",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the insight.",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkInsightAcceptedRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Insight"
                      },
                      "description": "Marks the Insight State as Accepted. Users can use this method to indicate to the Recommender API that they have applied some action based on the insight. This stops the insight content from being updated. MarkInsightAccepted can be applied to insights in ACTIVE state. Requires the recommender.*.update IAM permission for the specified insight.",
                      "path": "v1/{+name}:markAccepted",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}:markAccepted",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1ListInsightsResponse"
                      },
                      "httpMethod": "GET",
                      "id": "recommender.organizations.locations.insightTypes.insights.list",
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return.",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Filter expression to restrict the insights returned. Supported filter fields: state Eg: `state:\"DISMISSED\" or state:\"ACTIVE\""
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/insightTypes/[^/]+$",
                          "required": true,
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: 1. `projects/[PROJECT_NUMBER]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 2. `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 3. `folders/[FOLDER_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` 4. `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/insightTypes/[INSIGHT_TYPE_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ INSIGHT_TYPE_ID refers to supported insight types: https://cloud.google.com/recommender/docs/insights/insight-types."
                        }
                      },
                      "path": "v1/{+parent}/insights",
                      "description": "Lists insights for a Cloud project. Requires the recommender.*.list IAM permission for the specified insight type."
                    },
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Insight"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/locations/[^/]+/insightTypes/[^/]+/insights/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. Name of the insight.",
                          "type": "string"
                        }
                      },
                      "path": "v1/{+name}",
                      "id": "recommender.organizations.locations.insightTypes.insights.get",
                      "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/insightTypes/{insightTypesId}/insights/{insightsId}",
                      "description": "Gets the requested insight. Requires the recommender.*.get IAM permission for the specified insight type.",
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                }
              }
            },
            "recommenders": {
              "resources": {
                "recommendations": {
                  "methods": {
                    "markSucceeded": {
                      "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}:markSucceeded",
                      "description": "Marks the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationSucceededRequest"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "description": "Required. Name of the recommendation.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "id": "recommender.organizations.locations.recommenders.recommendations.markSucceeded"
                    },
                    "markClaimed": {
                      "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "id": "recommender.organizations.locations.recommenders.recommendations.markClaimed",
                      "path": "v1/{+name}:markClaimed",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationClaimedRequest"
                      },
                      "description": "Marks the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationClaimed can be applied to recommendations in CLAIMED, SUCCEEDED, FAILED, or ACTIVE state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the recommendation.",
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "list": {
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "description": "Filter expression to restrict the recommendations returned. Supported filter fields: state_info.state Eg: `state_info.state:\"DISMISSED\" or state_info.state:\"FAILED\"",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: 1. `projects/[PROJECT_NUMBER]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 2. `billingAccounts/[BILLING_ACCOUNT_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 3. `folders/[FOLDER_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` 4. `organizations/[ORGANIZATION_ID]/locations/[LOCATION]/recommenders/[RECOMMENDER_ID]` LOCATION here refers to GCP Locations: https://cloud.google.com/about/locations/ RECOMMENDER_ID refers to supported recommenders: https://cloud.google.com/recommender/docs/recommenders.",
                          "location": "path",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+$",
                          "required": true
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. If not specified, the server will determine the number of results to return."
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters must be identical to those in the previous call.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "GET",
                      "id": "recommender.organizations.locations.recommenders.recommendations.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists recommendations for a Cloud project. Requires the recommender.*.list IAM permission for the specified recommender.",
                      "path": "v1/{+parent}/recommendations",
                      "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1ListRecommendationsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "get": {
                      "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the requested recommendation. Requires the recommender.*.get IAM permission for the specified recommender.",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the recommendation.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "id": "recommender.organizations.locations.recommenders.recommendations.get"
                    },
                    "markFailed": {
                      "flatPath": "v1/organizations/{organizationsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed",
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1Recommendation"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^organizations/[^/]+/locations/[^/]+/recommenders/[^/]+/recommendations/[^/]+$",
                          "description": "Required. Name of the recommendation."
                        }
                      },
                      "description": "Marks the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. Associated insights are frozen and placed in the ACCEPTED state. MarkRecommendationFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. Requires the recommender.*.update IAM permission for the specified recommender.",
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "recommender.organizations.locations.recommenders.recommendations.markFailed",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1MarkRecommendationFailedRequest"
                      },
                      "path": "v1/{+name}:markFailed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
