{
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://realtimebidding.mtls.googleapis.com/",
  "discoveryVersion": "v1",
  "baseUrl": "https://realtimebidding.googleapis.com/",
  "ownerName": "Google",
  "fullyEncodeReservedExpansion": true,
  "name": "realtimebidding",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/realtime-bidding": {
          "description": "See, create, edit, and delete your Authorized Buyers and Open Bidding account entities"
        }
      }
    }
  },
  "rootUrl": "https://realtimebidding.googleapis.com/",
  "revision": "20210406",
  "description": "Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.",
  "version": "v1alpha",
  "schemas": {
    "BiddingFunction": {
      "properties": {
        "biddingFunction": {
          "type": "string",
          "description": "The raw Javascript source code of the bidding function."
        },
        "name": {
          "type": "string",
          "description": "The name of the bidding function that must follow the pattern: `bidders/{bidder_account_id}/biddingFunctions/{bidding_function_name}`."
        }
      },
      "type": "object",
      "description": "The bidding function to be executed as part of the TURTLEDOVE simulation experiment bidding flow.",
      "id": "BiddingFunction"
    },
    "ListBiddingFunctionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token which can be passed to a subsequent call to the `ListBiddingFunctions` method to retrieve the next page of results in ListBiddingFunctionsRequest.pageToken.",
          "type": "string"
        },
        "biddingFunctions": {
          "type": "array",
          "items": {
            "$ref": "BiddingFunction"
          },
          "description": "A list of a bidder's bidding functions."
        }
      },
      "id": "ListBiddingFunctionsResponse",
      "description": "A response containing a list of a bidder's bidding functions.",
      "type": "object"
    }
  },
  "ownerDomain": "google.com",
  "servicePath": "",
  "id": "realtimebidding:v1alpha",
  "documentationLink": "https://developers.google.com/authorized-buyers/apis/realtimebidding/reference/rest/",
  "basePath": "",
  "title": "Real-time Bidding API",
  "resources": {
    "bidders": {
      "resources": {
        "biddingFunctions": {
          "methods": {
            "create": {
              "description": "Creates a new bidding function.",
              "response": {
                "$ref": "BiddingFunction"
              },
              "parameters": {
                "parent": {
                  "pattern": "^bidders/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the bidder for which to create the bidding function. Format: `bidders/{bidderAccountId}`",
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "request": {
                "$ref": "BiddingFunction"
              },
              "flatPath": "v1alpha/bidders/{biddersId}/biddingFunctions",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha/{+parent}/biddingFunctions",
              "id": "realtimebidding.bidders.biddingFunctions.create"
            },
            "list": {
              "path": "v1alpha/{+parent}/biddingFunctions",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "description": "Required. Name of the bidder whose bidding functions will be listed. Format: `bidders/{bidder_account_id}`",
                  "type": "string",
                  "pattern": "^bidders/[^/]+$"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A token identifying a page of results the server should return. This value is received from a previous `ListBiddingFunctions` call in ListBiddingFunctionsResponse.nextPageToken.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of bidding functions to return.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "ListBiddingFunctionsResponse"
              },
              "description": "Lists the bidding functions that a bidder currently has registered.",
              "flatPath": "v1alpha/bidders/{biddersId}/biddingFunctions",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "id": "realtimebidding.bidders.biddingFunctions.list"
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "canonicalName": "Real-time Bidding",
  "parameters": {
    "alt": {
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "location": "query",
      "description": "Data format for response."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    }
  },
  "version_module": true
}
