{
  "resources": {
    "uiv1beta3": {
      "resources": {
        "projects": {
          "resources": {
            "locations": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists information about the supported locations for this service.",
                  "flatPath": "uiv1beta3/projects/{projectsId}/locations",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                    },
                    "pageSize": {
                      "description": "The maximum number of results to return. If not set, the service selects a default.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The resource that owns the locations collection, if applicable."
                    }
                  },
                  "id": "documentai.uiv1beta3.projects.locations.list",
                  "response": {
                    "$ref": "GoogleCloudLocationListLocationsResponse"
                  },
                  "path": "uiv1beta3/{+name}/locations",
                  "httpMethod": "GET"
                },
                "get": {
                  "description": "Gets information about a location.",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "uiv1beta3/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Resource name for the location."
                    }
                  },
                  "id": "documentai.uiv1beta3.projects.locations.get",
                  "httpMethod": "GET",
                  "flatPath": "uiv1beta3/projects/{projectsId}/locations/{locationsId}",
                  "response": {
                    "$ref": "GoogleCloudLocationLocation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              },
              "resources": {
                "operations": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                          "required": true,
                          "description": "The name of the operation resource."
                        }
                      },
                      "flatPath": "uiv1beta3/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                      "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "uiv1beta3/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "documentai.uiv1beta3.projects.locations.operations.get"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "operations": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/operations/{operationsId}",
              "id": "documentai.projects.operations.get",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The name of the operation resource.",
                  "pattern": "^projects/[^/]+/operations/[^/]+$"
                }
              },
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
            }
          }
        },
        "locations": {
          "resources": {
            "processors": {
              "methods": {
                "process": {
                  "description": "Processes a single document.",
                  "response": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessResponse"
                  },
                  "httpMethod": "POST",
                  "path": "v1/{+name}:process",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:process",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$",
                      "type": "string",
                      "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: projects/{project}/locations/{location}/processors/{processor}, or projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1ProcessRequest"
                  },
                  "id": "documentai.projects.locations.processors.process"
                },
                "batchProcess": {
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1/{+name}:batchProcess",
                  "request": {
                    "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "documentai.projects.locations.processors.batchProcess",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}:batchProcess",
                  "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The resource name of Processor or ProcessorVersion. Format: projects/{project}/locations/{location}/processors/{processor}, or projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+$"
                    }
                  }
                }
              },
              "resources": {
                "processorVersions": {
                  "methods": {
                    "process": {
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessRequest"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "documentai.projects.locations.processors.processorVersions.process",
                      "response": {
                        "$ref": "GoogleCloudDocumentaiV1ProcessResponse"
                      },
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name of the Processor or ProcessorVersion to use for processing. If a Processor is specified, the server will use its default version. Format: projects/{project}/locations/{location}/processors/{processor}, or projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "required": true
                        }
                      },
                      "path": "v1/{+name}:process",
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Processes a single document.",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:process"
                    },
                    "batchProcess": {
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}:batchProcess",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/processorVersions/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The resource name of Processor or ProcessorVersion. Format: projects/{project}/locations/{location}/processors/{processor}, or projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processorVersion}"
                        }
                      },
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/processorVersions/{processorVersionsId}:batchProcess",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1BatchProcessRequest"
                      },
                      "description": "LRO endpoint to batch process many documents. The output is written to Cloud Storage as JSON in the [Document] format.",
                      "id": "documentai.projects.locations.processors.processorVersions.batchProcess"
                    }
                  }
                },
                "humanReviewConfig": {
                  "methods": {
                    "reviewDocument": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "documentai.projects.locations.processors.humanReviewConfig.reviewDocument",
                      "path": "v1/{+humanReviewConfig}:reviewDocument",
                      "request": {
                        "$ref": "GoogleCloudDocumentaiV1ReviewDocumentRequest"
                      },
                      "httpMethod": "POST",
                      "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/processors/{processorsId}/humanReviewConfig:reviewDocument",
                      "description": "Send a document for Human Review. The input document should be processed by the specified processor.",
                      "parameters": {
                        "humanReviewConfig": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The resource name of the HumanReviewConfig that the document will be reviewed with.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/processors/[^/]+/humanReviewConfig$",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "humanReviewConfig"
                      ]
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "documentai.projects.locations.operations.get",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "httpMethod": "GET"
                }
              }
            }
          },
          "methods": {
            "list": {
              "path": "v1/{+name}/locations",
              "id": "documentai.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page."
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "format": "int32",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160).",
                  "type": "string"
                },
                "name": {
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path"
                }
              },
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "GoogleCloudLocationListLocationsResponse"
              }
            },
            "get": {
              "httpMethod": "GET",
              "id": "documentai.projects.locations.get",
              "response": {
                "$ref": "GoogleCloudLocationLocation"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Resource name for the location.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    },
    "operations": {
      "methods": {
        "list": {
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/operations",
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "httpMethod": "GET",
          "path": "v1/{+name}",
          "response": {
            "$ref": "GoogleLongrunningListOperationsResponse"
          },
          "parameters": {
            "pageSize": {
              "location": "query",
              "description": "The standard list page size.",
              "format": "int32",
              "type": "integer"
            },
            "name": {
              "type": "string",
              "pattern": "^operations$",
              "description": "The name of the operation's parent resource.",
              "location": "path",
              "required": true
            },
            "filter": {
              "type": "string",
              "location": "query",
              "description": "The standard list filter."
            },
            "pageToken": {
              "type": "string",
              "description": "The standard list page token.",
              "location": "query"
            }
          },
          "id": "documentai.operations.list"
        },
        "delete": {
          "flatPath": "v1/operations/{operationsId}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "id": "documentai.operations.delete",
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource to be deleted.",
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}",
          "httpMethod": "DELETE"
        },
        "cancel": {
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^operations/.*$",
              "type": "string",
              "description": "The name of the operation resource to be cancelled.",
              "required": true
            }
          },
          "id": "documentai.operations.cancel",
          "flatPath": "v1/operations/{operationsId}:cancel",
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "request": {
            "$ref": "GoogleLongrunningCancelOperationRequest"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}:cancel",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleProtobufEmpty"
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "parameters": {
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    }
  },
  "rootUrl": "https://documentai.googleapis.com/",
  "description": "Service to parse structured information from unstructured or semi-structured documents using state-of-the-art Google AI such as natural language, computer vision, translation, and AutoML.",
  "servicePath": "",
  "title": "Cloud Document AI API",
  "version": "v1",
  "documentationLink": "https://cloud.google.com/document-ai/docs/",
  "revision": "20210413",
  "fullyEncodeReservedExpansion": true,
  "baseUrl": "https://documentai.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "name": "documentai",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://documentai.mtls.googleapis.com/",
  "batchPath": "batch",
  "canonicalName": "Document",
  "version_module": true,
  "protocol": "rest",
  "id": "documentai:v1",
  "basePath": "",
  "schemas": {
    "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview",
      "properties": {
        "state": {
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        }
      },
      "description": "Human Review information of the document.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageAnchor": {
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageAnchor",
      "properties": {
        "pageRefs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef"
          },
          "description": "One or more references to visual page elements"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextChange": {
      "description": "This message is used for text changes aka. OCR corrections.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextChange",
      "properties": {
        "provenance": {
          "type": "array",
          "description": "The history of this annotation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
          }
        },
        "changedText": {
          "description": "The text that replaces the text identified in the `text_anchor`.",
          "type": "string"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index."
        }
      }
    },
    "GoogleCloudDocumentaiV1Document": {
      "id": "GoogleCloudDocumentaiV1Document",
      "type": "object",
      "properties": {
        "entityRelations": {
          "type": "array",
          "description": "Relationship among Document.entities.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntityRelation"
          }
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentStyle"
          },
          "description": "Styles for the Document.text.",
          "type": "array"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64."
        },
        "textChanges": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentTextChange"
          },
          "description": "A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "type": "array"
        },
        "text": {
          "type": "string",
          "description": "Optional. UTF-8 encoded text in reading order from the document."
        },
        "uri": {
          "type": "string",
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info."
        },
        "revisions": {
          "description": "Revision history of this document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentRevision"
          }
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "pages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPage"
          },
          "description": "Visual page layout for the Document."
        },
        "mimeType": {
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.",
          "type": "string"
        }
      },
      "description": "Document represents the canonical document resource in Document Understanding AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document Understanding AI to iterate and optimize for quality."
    },
    "GoogleCloudDocumentaiV1BatchDocumentsInputConfig": {
      "id": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig",
      "properties": {
        "gcsDocuments": {
          "description": "The set of documents individually specified on Cloud Storage.",
          "$ref": "GoogleCloudDocumentaiV1GcsDocuments"
        },
        "gcsPrefix": {
          "description": "The set of documents that match the specified Cloud Storage [gcs_prefix].",
          "$ref": "GoogleCloudDocumentaiV1GcsPrefix"
        }
      },
      "description": "The common config to specify a set of documents used as input.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3CreateLabelerPoolOperationMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object",
      "description": "The long running operation metadata for CreateLabelerPool."
    },
    "GoogleCloudDocumentaiV1BoundingPoly": {
      "type": "object",
      "description": "A bounding polygon for the detected image annotation.",
      "id": "GoogleCloudDocumentaiV1BoundingPoly",
      "properties": {
        "vertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1Vertex"
          },
          "type": "array",
          "description": "The bounding polygon vertices."
        },
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1NormalizedVertex"
          }
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment": {
      "properties": {
        "startIndex": {
          "format": "int64",
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "type": "string"
        },
        "endIndex": {
          "type": "string",
          "format": "int64",
          "description": "TextSegment half open end UTF-8 char index in the Document.text."
        }
      },
      "type": "object",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDimension": {
      "description": "Dimension for the page.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDimension",
      "type": "object",
      "properties": {
        "height": {
          "type": "number",
          "format": "float",
          "description": "Page height."
        },
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        },
        "width": {
          "format": "float",
          "type": "number",
          "description": "Page width."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1NormalizedVertex": {
      "properties": {
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "type": "number",
          "format": "float"
        },
        "x": {
          "format": "float",
          "type": "number",
          "description": "X coordinate."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1NormalizedVertex",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1."
    },
    "GoogleCloudDocumentaiV1beta2OutputConfig": {
      "properties": {
        "pagesPerShard": {
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json",
          "format": "int32",
          "type": "integer"
        },
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta2GcsDestination"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2OutputConfig",
      "type": "object",
      "description": "The desired output location and metadata."
    },
    "GoogleCloudDocumentaiV1beta1Document": {
      "properties": {
        "pages": {
          "description": "Visual page layout for the Document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPage"
          },
          "type": "array"
        },
        "text": {
          "description": "Optional. UTF-8 encoded text in reading order from the document.",
          "type": "string"
        },
        "textChanges": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextChange"
          },
          "type": "array",
          "description": "A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "Any error that occurred while processing this document."
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          },
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries.",
          "type": "array"
        },
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "format": "byte"
        },
        "entityRelations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation"
          },
          "description": "Relationship among Document.entities."
        },
        "revisions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevision"
          },
          "description": "Revision history of this document."
        },
        "mimeType": {
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml.",
          "type": "string"
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyle"
          },
          "type": "array",
          "description": "Styles for the Document.text."
        }
      },
      "description": "Document represents the canonical document resource in Document Understanding AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document Understanding AI to iterate and optimize for quality.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1Document"
    },
    "GoogleCloudDocumentaiV1HumanReviewStatus": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "description": "The state of human review on the processing request.",
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review is not enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the [state_message] for details."
          ],
          "type": "string"
        },
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and metadata as the long running operation returned by [ReviewDocument] method."
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the human review state."
        }
      },
      "description": "The status of human review on a processed document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1HumanReviewStatus"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak": {
      "properties": {
        "type": {
          "description": "Detected break type.",
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ]
        }
      },
      "description": "Detected break at the end of a Token.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak"
    },
    "GoogleCloudDocumentaiV1DocumentRevision": {
      "properties": {
        "agent": {
          "type": "string",
          "description": "If the change was made by a person specify the name or id of that person."
        },
        "id": {
          "description": "Id of the revision. Unique within the context of the document.",
          "type": "string"
        },
        "humanReview": {
          "$ref": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview",
          "description": "Human Review information of this revision."
        },
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "parent": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field."
        },
        "createTime": {
          "description": "The time that the revision was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Contains past or forward revisions of this document.",
      "id": "GoogleCloudDocumentaiV1DocumentRevision",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1BoundingPoly": {
      "id": "GoogleCloudDocumentaiV1beta1BoundingPoly",
      "properties": {
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1NormalizedVertex"
          },
          "type": "array",
          "description": "The bounding polygon normalized vertices."
        },
        "vertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1Vertex"
          },
          "description": "The bounding polygon vertices.",
          "type": "array"
        }
      },
      "description": "A bounding polygon for the detected image annotation.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize": {
      "type": "object",
      "description": "Font size with unit.",
      "properties": {
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).",
          "type": "string"
        },
        "size": {
          "format": "float",
          "type": "number",
          "description": "Font size for the text."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment": {
      "properties": {
        "endIndex": {
          "type": "string",
          "description": "TextSegment half open end UTF-8 char index in the Document.text.",
          "format": "int64"
        },
        "startIndex": {
          "type": "string",
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment",
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset"
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfig": {
      "properties": {
        "gcsOutputConfig": {
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig",
          "description": "Output config to write the results to Cloud Storage."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfig",
      "type": "object",
      "description": "Config that controls the output of documents. All documents will be written as a JSON file."
    },
    "GoogleTypeTimeZone": {
      "properties": {
        "id": {
          "type": "string",
          "description": "IANA Time Zone Database time zone, e.g. \"America/New_York\"."
        },
        "version": {
          "type": "string",
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\"."
        }
      },
      "type": "object",
      "description": "Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).",
      "id": "GoogleTypeTimeZone"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDimension": {
      "properties": {
        "width": {
          "type": "number",
          "description": "Page width.",
          "format": "float"
        },
        "unit": {
          "description": "Dimension unit.",
          "type": "string"
        },
        "height": {
          "format": "float",
          "description": "Page height.",
          "type": "number"
        }
      },
      "description": "Dimension for the page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDimension"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow": {
      "type": "object",
      "properties": {
        "cells": {
          "description": "Cells that make up this row.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow",
      "description": "A row of table cells."
    },
    "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage": {
      "description": "Detected language for a structural component.",
      "id": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage",
      "properties": {
        "confidence": {
          "description": "Confidence of detected language. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse": {
      "properties": {
        "processorVersion": {
          "description": "The resource name of the processor version produced by training.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionResponse",
      "description": "The response for the TrainProcessorVersion method."
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata": {
      "description": "The long running operation metadata for delete processor method.",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageLayout": {
      "description": "Visual element describing a layout unit on a page.",
      "properties": {
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "confidence": {
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range [0, 1].",
          "format": "float",
          "type": "number"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "orientation": {
          "type": "string",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "description": "Detected orientation for the Layout."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageLayout",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageBlock": {
      "type": "object",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "properties": {
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageToken": {
      "description": "A detected token.",
      "properties": {
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Token."
        },
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus": {
      "description": "The status of a each individual document in the batch process.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus",
      "properties": {
        "outputGcsDestination": {
          "description": "The output_gcs_destination (in the request as 'output_gcs_destination') of the processed document if it was successful, otherwise empty.",
          "type": "string"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the processing of the document."
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process."
        },
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus",
          "description": "The status of human review on the processed document."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse": {
      "description": "Response message for the disable processor method. Intentionally empty proto for adding fields in future.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorResponse",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageFormField": {
      "description": "A form field detected on the page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageFormField",
      "properties": {
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "valueDetectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages for value together with confidence."
        },
        "nameDetectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for name together with confidence."
        },
        "valueType": {
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - \"unfilled_checkbox\" - \"filled_checkbox\"",
          "type": "string"
        },
        "fieldValue": {
          "description": "Layout for the FormField value.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPage": {
      "description": "A page in a Document.",
      "properties": {
        "tables": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTable"
          },
          "description": "A list of visually detected tables on the page.",
          "type": "array"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "visualElements": {
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
          },
          "type": "array"
        },
        "image": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageImage",
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned."
        },
        "blocks": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageBlock"
          },
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "type": "array"
        },
        "lines": {
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
          },
          "type": "array"
        },
        "paragraphs": {
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
          }
        },
        "transforms": {
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the page."
        },
        "dimension": {
          "description": "Physical dimension of the page.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDimension"
        },
        "pageNumber": {
          "type": "integer",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "format": "int32"
        },
        "tokens": {
          "description": "A list of visually detected tokens on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageToken"
          },
          "type": "array"
        },
        "formFields": {
          "type": "array",
          "description": "A list of visually detected form fields on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageFormField"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPage"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef": {
      "type": "object",
      "description": "Represents a weak reference to a page element within a document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef",
      "properties": {
        "layoutType": {
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "type": "string",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ]
        },
        "layoutId": {
          "type": "string",
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead."
        },
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly"
        },
        "page": {
          "type": "string",
          "description": "Required. Index into the Document.pages element, for example using Document.pages to locate the related page element.",
          "format": "int64"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata": {
      "description": "The long running operation metadata for set default processor version method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize": {
      "properties": {
        "size": {
          "type": "number",
          "format": "float",
          "description": "Font size for the text."
        },
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Font size with unit.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize"
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata": {
      "description": "The long running operation metadata for DeleteLabelerPool.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteLabelerPoolOperationMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2GcsDestination": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "id": "GoogleCloudDocumentaiV1beta2GcsDestination"
    },
    "GoogleCloudDocumentaiV1DocumentPageTableTableRow": {
      "properties": {
        "cells": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableCell"
          },
          "description": "Cells that make up this row."
        }
      },
      "description": "A row of table cells.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
    },
    "GoogleCloudDocumentaiV1beta2OperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta2OperationMetadata",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "The last update time of the operation.",
          "format": "google-datetime"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ],
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of the operation."
        }
      },
      "description": "Contains metadata for the BatchProcessDocuments operation."
    },
    "GoogleCloudDocumentaiV1beta2Document": {
      "type": "object",
      "description": "Document represents the canonical document resource in Document Understanding AI. It is an interchange format that provides insights into documents and allows for collaboration between users and Document Understanding AI to iterate and optimize for quality.",
      "properties": {
        "shardInfo": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
          "description": "Information about the sharding if this document is sharded part of a larger document. If the document is not sharded, this message is not specified."
        },
        "uri": {
          "description": "Optional. Currently supports Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "An IANA published MIME type (also referred to as media type). For more information, see https://www.iana.org/assignments/media-types/media-types.xhtml."
        },
        "error": {
          "description": "Any error that occurred while processing this document.",
          "$ref": "GoogleRpcStatus"
        },
        "textStyles": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyle"
          },
          "description": "Styles for the Document.text.",
          "type": "array"
        },
        "revisions": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevision"
          },
          "type": "array",
          "description": "Revision history of this document."
        },
        "textChanges": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextChange"
          },
          "type": "array",
          "description": "A list of text corrections made to [Document.text]. This is usually used for annotating corrections to OCR mistakes. Text changes for a given revision may not overlap with each other."
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "type": "array",
          "description": "A list of entities detected on Document.text. For document shards, entities in this list may cross shard boundaries."
        },
        "labels": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentLabel"
          },
          "type": "array",
          "description": "Labels for this document."
        },
        "content": {
          "type": "string",
          "description": "Optional. Inline document content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64.",
          "format": "byte"
        },
        "text": {
          "type": "string",
          "description": "Optional. UTF-8 encoded text in reading order from the document."
        },
        "pages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPage"
          },
          "description": "Visual page layout for the Document.",
          "type": "array"
        },
        "entityRelations": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation"
          },
          "description": "Relationship among Document.entities.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2Document"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell",
      "type": "object",
      "description": "A cell representation inside the table.",
      "properties": {
        "rowSpan": {
          "type": "integer",
          "format": "int32",
          "description": "How many rows this cell spans."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for TableCell."
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "colSpan": {
          "type": "integer",
          "format": "int32",
          "description": "How many columns this cell spans."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadata": {
      "properties": {
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        },
        "individualProcessStatuses": {
          "type": "array",
          "description": "The list of response details of each document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus"
          }
        },
        "state": {
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "description": "The state of the current batch processing.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The creation time of the operation."
        },
        "updateTime": {
          "type": "string",
          "description": "The last update time of the operation.",
          "format": "google-datetime"
        }
      },
      "description": "The long running operation metadata for batch process method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadata"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell": {
      "properties": {
        "rowSpan": {
          "format": "int32",
          "type": "integer",
          "description": "How many rows this cell spans."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "colSpan": {
          "description": "How many columns this cell spans.",
          "type": "integer",
          "format": "int32"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for TableCell."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableCell",
      "description": "A cell representation inside the table."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLayout": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
      "description": "Visual element describing a layout unit on a page.",
      "properties": {
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range [0, 1]."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "boundingPoly": {
          "description": "The bounding polygon for the Layout.",
          "$ref": "GoogleCloudDocumentaiV1beta2BoundingPoly"
        },
        "orientation": {
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ],
          "type": "string",
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "description": "Detected orientation for the Layout."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentTextAnchor": {
      "properties": {
        "textSegments": {
          "type": "array",
          "description": "The text segments from the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchorTextSegment"
          }
        },
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments.",
          "type": "string"
        }
      },
      "description": "Text reference indexing into the Document.text.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentRequest": {
      "type": "object",
      "description": "Request message for review document method.",
      "id": "GoogleCloudDocumentaiV1ReviewDocumentRequest",
      "properties": {
        "inlineDocument": {
          "$ref": "GoogleCloudDocumentaiV1Document",
          "description": "An inline document proto."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageImage": {
      "properties": {
        "content": {
          "format": "byte",
          "description": "Raw byte content of the image.",
          "type": "string"
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in pixels."
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image in pixels."
        },
        "mimeType": {
          "type": "string",
          "description": "Encoding mime type for the image."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageImage",
      "type": "object",
      "description": "Rendered image contents for this page."
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse": {
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorResponse",
      "description": "Response message for the enable processor method. Intentionally empty proto for adding fields in future."
    },
    "GoogleCloudDocumentaiV1ReviewDocumentResponse": {
      "id": "GoogleCloudDocumentaiV1ReviewDocumentResponse",
      "type": "object",
      "description": "Response message for review document method.",
      "properties": {
        "gcsDestination": {
          "description": "The Cloud Storage uri for the human reviewed document.",
          "type": "string"
        }
      }
    },
    "GoogleTypePostalAddress": {
      "description": "Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478",
      "id": "GoogleTypePostalAddress",
      "properties": {
        "postalCode": {
          "description": "Optional. Postal code of the address. Not all countries use or require postal codes to be present, but where they are used, they may trigger additional validation with other parts of the address (e.g. state/zip validation in the U.S.A.).",
          "type": "string"
        },
        "organization": {
          "type": "string",
          "description": "Optional. The name of the organization at the address."
        },
        "revision": {
          "format": "int32",
          "type": "integer",
          "description": "The schema revision of the `PostalAddress`. This must be set to 0, which is the latest revision. All new revisions **must** be backward compatible with old revisions."
        },
        "locality": {
          "type": "string",
          "description": "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use address_lines."
        },
        "administrativeArea": {
          "type": "string",
          "description": "Optional. Highest administrative subdivision which is used for postal addresses of a country or region. For example, this can be a state, a province, an oblast, or a prefecture. Specifically, for Spain this is the province and not the autonomous community (e.g. \"Barcelona\" and not \"Catalonia\"). Many countries don't use an administrative area in postal addresses. E.g. in Switzerland this should be left unpopulated."
        },
        "languageCode": {
          "description": "Optional. BCP-47 language code of the contents of this address (if known). This is often the UI language of the input form or is expected to match one of the languages used in the address' country/region, or their transliterated equivalents. This can affect formatting in certain countries, but is not critical to the correctness of the data and will never affect any validation or other non-formatting related operations. If this value is not known, it should be omitted (rather than specifying a possibly incorrect default). Examples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".",
          "type": "string"
        },
        "sortingCode": {
          "description": "Optional. Additional, country-specific, sorting code. This is not used in most regions. Where it is used, the value is either a string like \"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number alone, representing the \"sector code\" (Jamaica), \"delivery area indicator\" (Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire).",
          "type": "string"
        },
        "regionCode": {
          "description": "Required. CLDR region code of the country/region of the address. This is never inferred and it is up to the user to ensure the value is correct. See http://cldr.unicode.org/ and http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html for details. Example: \"CH\" for Switzerland.",
          "type": "string"
        },
        "recipients": {
          "description": "Optional. The recipient at the address. This field may, under certain circumstances, contain multiline information. For example, it might contain \"care of\" information.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressLines": {
          "items": {
            "type": "string"
          },
          "description": "Unstructured address lines describing the lower levels of an address. Because values in address_lines do not have type information and may sometimes contain multiple values in a single field (e.g. \"Austin, TX\"), it is important that the line order is clear. The order of address lines should be \"envelope order\" for the country/region of the address. In places where this can vary (e.g. Japan), address_language is used to make it explicit (e.g. \"ja\" for large-to-small ordering and \"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of an address can be selected based on the language. The minimum permitted structural representation of an address consists of a region_code with all remaining information placed in the address_lines. It would be possible to format such an address very approximately without geocoding, but no semantic reasoning could be made about any of the address components until it was at least partially resolved. Creating an address only containing a region_code and address_lines, and then geocoding is the recommended way to handle completely unstructured addresses (as opposed to guessing which parts of the address should be localities or administrative areas).",
          "type": "array"
        },
        "sublocality": {
          "type": "string",
          "description": "Optional. Sublocality of the address. For example, this can be neighborhoods, boroughs, districts."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLine": {
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Line."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLine"
    },
    "GoogleCloudDocumentaiV1BatchProcessRequest": {
      "description": "Request message for batch process document method.",
      "properties": {
        "skipHumanReview": {
          "description": "Whether Human Review feature should be skipped for this request. Default to false.",
          "type": "boolean"
        },
        "documentOutputConfig": {
          "description": "The overall output config for batch process.",
          "$ref": "GoogleCloudDocumentaiV1DocumentOutputConfig"
        },
        "inputDocuments": {
          "description": "The input documents for batch process.",
          "$ref": "GoogleCloudDocumentaiV1BatchDocumentsInputConfig"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1BatchProcessRequest"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageImage": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageImage",
      "properties": {
        "width": {
          "format": "int32",
          "description": "Width of the image in pixels.",
          "type": "integer"
        },
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Raw byte content of the image."
        },
        "mimeType": {
          "type": "string",
          "description": "Encoding mime type for the image."
        },
        "height": {
          "format": "int32",
          "type": "integer",
          "description": "Height of the image in pixels."
        }
      },
      "description": "Rendered image contents for this page."
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. Normalized entity value stored as a string. This field is populated for supported document type (e.g. Invoice). For some entity types, one of respective 'structured_value' fields may also be populated. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        },
        "moneyValue": {
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto",
          "$ref": "GoogleTypeMoney"
        },
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue",
      "type": "object",
      "description": "Parsed and normalized entity value."
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse": {
      "description": "Response message for the undeploy processor version method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageTable",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "description": "Header rows of the table.",
          "type": "array"
        },
        "bodyRows": {
          "description": "Body rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTableTableRow"
          },
          "type": "array"
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Table."
        }
      },
      "description": "A table representation similar to HTML table structure.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPage": {
      "type": "object",
      "properties": {
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "pageNumber": {
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "type": "integer",
          "format": "int32"
        },
        "paragraphs": {
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph"
          },
          "type": "array"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "tables": {
          "description": "A list of visually detected tables on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageTable"
          },
          "type": "array"
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "transforms": {
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix"
          }
        },
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageToken"
          },
          "description": "A list of visually detected tokens on the page."
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
          },
          "type": "array"
        },
        "formFields": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageFormField"
          },
          "type": "array",
          "description": "A list of visually detected form fields on the page."
        },
        "lines": {
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLine"
          }
        },
        "visualElements": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
          },
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "type": "array"
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageImage"
        }
      },
      "description": "A page in a Document.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPage"
    },
    "GoogleCloudDocumentaiV1DocumentPageVisualElement": {
      "properties": {
        "type": {
          "description": "Type of the VisualElement.",
          "type": "string"
        },
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageVisualElement",
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page."
    },
    "GoogleCloudDocumentaiV1beta1OutputConfig": {
      "description": "The desired output location and metadata.",
      "properties": {
        "gcsDestination": {
          "description": "The Google Cloud Storage location to write the output to.",
          "$ref": "GoogleCloudDocumentaiV1beta1GcsDestination"
        },
        "pagesPerShard": {
          "format": "int32",
          "type": "integer",
          "description": "The max number of pages to include into each output Document shard JSON on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 parsed pages will be produced. If `pages_per_shard` = 20, then 5 Document shard JSON files each containing 20 parsed pages will be written under the prefix OutputConfig.gcs_destination.uri and suffix pages-x-to-y.json where x and y are 1-indexed page numbers. Example GCS outputs with 157 pages and pages_per_shard = 50: pages-001-to-050.json pages-051-to-100.json pages-101-to-150.json pages-151-to-157.json"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1OutputConfig",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntity": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntity",
      "type": "object",
      "description": "A phrase in the text that is a known entity type, such as a person, an organization, or location.",
      "properties": {
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "mentionId": {
          "description": "Optional. Deprecated. Use `id` field instead.",
          "type": "string"
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`."
        },
        "redacted": {
          "type": "boolean",
          "description": "Optional. Whether the entity will be redacted for de-identification purposes."
        },
        "normalizedValue": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue",
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types."
        },
        "id": {
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document.",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "Optional. Confidence of detected Schema entity. Range [0, 1]."
        },
        "provenance": {
          "description": "Optional. The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "type": {
          "description": "Entity type from a schema e.g. `Address`.",
          "type": "string"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentEntity"
          },
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityRelation": {
      "properties": {
        "objectId": {
          "description": "Object entity id.",
          "type": "string"
        },
        "subjectId": {
          "description": "Subject entity id.",
          "type": "string"
        },
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        }
      },
      "description": "Relationship between Entities.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityRelation",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentTextChange": {
      "type": "object",
      "description": "This message is used for text changes aka. OCR corrections.",
      "id": "GoogleCloudDocumentaiV1DocumentTextChange",
      "properties": {
        "textAnchor": {
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index.",
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor"
        },
        "provenance": {
          "type": "array",
          "description": "The history of this annotation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
          }
        },
        "changedText": {
          "description": "The text that replaces the text identified in the `text_anchor`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessResponse": {
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessResponse",
      "description": "Response message for batch process document method.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageParagraph": {
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "type": "object",
      "properties": {
        "layout": {
          "description": "Layout for Paragraph.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageParagraph"
    },
    "GoogleCloudDocumentaiV1DocumentPageDimension": {
      "description": "Dimension for the page.",
      "id": "GoogleCloudDocumentaiV1DocumentPageDimension",
      "properties": {
        "height": {
          "description": "Page height.",
          "format": "float",
          "type": "number"
        },
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        },
        "width": {
          "format": "float",
          "type": "number",
          "description": "Page width."
        }
      },
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3EnableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for enable processor method."
    },
    "GoogleCloudDocumentaiV1beta2DocumentRevision": {
      "properties": {
        "parent": {
          "type": "array",
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentRevisionHumanReview"
        },
        "agent": {
          "type": "string",
          "description": "If the change was made by a person specify the name or id of that person."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time that the revision was created.",
          "type": "string"
        },
        "processor": {
          "type": "string",
          "description": "If the annotation was made by processor identify the processor by its resource name."
        },
        "id": {
          "type": "string",
          "description": "Id of the revision. Unique within the context of the document."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentRevision",
      "type": "object",
      "description": "Contains past or forward revisions of this document."
    },
    "GoogleCloudDocumentaiV1beta1InputConfig": {
      "type": "object",
      "description": "The desired input location and metadata.",
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudDocumentaiV1beta1GcsSource",
          "description": "The Google Cloud Storage location to read the input from. This must be a single file."
        },
        "mimeType": {
          "type": "string",
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1InputConfig"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow": {
      "type": "object",
      "description": "A row of table cells.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow",
      "properties": {
        "cells": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableCell"
          },
          "type": "array",
          "description": "Cells that make up this row."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1GcsDestination": {
      "description": "The Google Cloud Storage location where the output file will be written to.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1GcsDestination",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata": {
      "description": "The long running operation metadata for deploy processor version method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionMetadata",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageImage": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageImage",
      "properties": {
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Raw byte content of the image."
        },
        "mimeType": {
          "description": "Encoding mime type for the image.",
          "type": "string"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Height of the image in pixels."
        },
        "width": {
          "description": "Width of the image in pixels.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Rendered image contents for this page.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue": {
      "description": "Parsed and normalized entity value.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue",
      "properties": {
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "booleanValue": {
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes.",
          "type": "boolean"
        },
        "text": {
          "type": "string",
          "description": "Required. Normalized entity value stored as a string. This field is populated for supported document type (e.g. Invoice). For some entity types, one of respective 'structured_value' fields may also be populated. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format."
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "dateValue": {
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto",
          "$ref": "GoogleTypeDate"
        },
        "datetimeValue": {
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto",
          "$ref": "GoogleTypeDateTime"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentStyle": {
      "type": "object",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentStyle",
      "properties": {
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        },
        "textStyle": {
          "type": "string",
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp"
        },
        "fontWeight": {
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp",
          "type": "string"
        },
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Text background color."
        },
        "textDecoration": {
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp",
          "type": "string"
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentStyleFontSize"
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentTextAnchor"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchor": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.",
      "properties": {
        "pageRefs": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef"
          },
          "description": "One or more references to visual page elements",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageTableTableCell": {
      "type": "object",
      "properties": {
        "layout": {
          "description": "Layout for TableCell.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "rowSpan": {
          "format": "int32",
          "description": "How many rows this cell spans.",
          "type": "integer"
        },
        "colSpan": {
          "format": "int32",
          "type": "integer",
          "description": "How many columns this cell spans."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        }
      },
      "description": "A cell representation inside the table.",
      "id": "GoogleCloudDocumentaiV1DocumentPageTableTableCell"
    },
    "GoogleCloudDocumentaiV1DocumentPageBlock": {
      "type": "object",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        },
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageBlock",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenance": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
      "description": "Structure to identify provenance relationships between annotations in different revisions.",
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "description": "The type of provenance operation.",
          "enumDescriptions": [
            "Operation type unspecified.",
            "Add an element. Implicit if no `parents` are set for the provenance.",
            "The element is removed. No `parents` should be set.",
            "Explicitly replaces the element(s) identified by `parents`.",
            "Element is requested for human review.",
            "Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Element is skipped in the validation process."
          ],
          "type": "string"
        },
        "parents": {
          "type": "array",
          "description": "References to the original elements that are replaced.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent"
          }
        },
        "id": {
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "type": "integer",
          "format": "int32"
        },
        "revision": {
          "type": "integer",
          "description": "The index of the revision that produced this element.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2BoundingPoly": {
      "properties": {
        "normalizedVertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2NormalizedVertex"
          },
          "description": "The bounding polygon normalized vertices.",
          "type": "array"
        },
        "vertices": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2Vertex"
          },
          "type": "array",
          "description": "The bounding polygon vertices."
        }
      },
      "type": "object",
      "description": "A bounding polygon for the detected image annotation.",
      "id": "GoogleCloudDocumentaiV1beta2BoundingPoly"
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenance": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "format": "int32"
        },
        "parents": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
          },
          "type": "array",
          "description": "References to the original elements that are replaced."
        },
        "revision": {
          "description": "The index of the revision that produced this element.",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string",
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "description": "The type of provenance operation.",
          "enumDescriptions": [
            "Operation type unspecified.",
            "Add an element. Implicit if no `parents` are set for the provenance.",
            "The element is removed. No `parents` should be set.",
            "Explicitly replaces the element(s) identified by `parents`.",
            "Element is requested for human review.",
            "Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Element is skipped in the validation process."
          ]
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
      "description": "Structure to identify provenance relationships between annotations in different revisions."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "confidence": {
          "type": "number",
          "format": "float",
          "description": "Confidence of detected language. Range [0, 1]."
        }
      },
      "description": "Detected language for a structural component."
    },
    "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata": {
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for delete processor version method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeleteProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntity": {
      "description": "A phrase in the text that is a known entity type, such as a person, an organization, or location.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntity",
      "type": "object",
      "properties": {
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "mentionText": {
          "type": "string",
          "description": "Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`."
        },
        "mentionId": {
          "description": "Optional. Deprecated. Use `id` field instead.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Entity type from a schema e.g. `Address`."
        },
        "id": {
          "type": "string",
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document."
        },
        "redacted": {
          "description": "Optional. Whether the entity will be redacted for de-identification purposes.",
          "type": "boolean"
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue"
        },
        "properties": {
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentEntity"
          }
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "confidence": {
          "format": "float",
          "description": "Optional. Confidence of detected Schema entity. Range [0, 1].",
          "type": "number"
        }
      }
    },
    "GoogleTypeDateTime": {
      "type": "object",
      "id": "GoogleTypeDateTime",
      "properties": {
        "minutes": {
          "description": "Required. Minutes of hour of day. Must be from 0 to 59.",
          "type": "integer",
          "format": "int32"
        },
        "seconds": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds."
        },
        "nanos": {
          "description": "Required. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "type": "integer",
          "format": "int32"
        },
        "timeZone": {
          "description": "Time zone.",
          "$ref": "GoogleTypeTimeZone"
        },
        "year": {
          "type": "integer",
          "description": "Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.",
          "format": "int32"
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Day of month. Must be from 1 to 31 and valid for the year and month."
        },
        "month": {
          "description": "Required. Month of year. Must be from 1 to 12.",
          "type": "integer",
          "format": "int32"
        },
        "utcOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }."
        },
        "hours": {
          "description": "Required. Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year is 0, the DateTime is considered not to have a specific year. month and day must have valid, non-zero values. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations."
    },
    "GoogleTypeColor": {
      "description": "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha \u003c= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red \u003c\u003c 16) | (green \u003c\u003c 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i \u003c missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ...",
      "properties": {
        "blue": {
          "format": "float",
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "type": "number"
        },
        "green": {
          "format": "float",
          "description": "The amount of green in the color as a value in the interval [0, 1].",
          "type": "number"
        },
        "red": {
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "alpha": {
          "type": "number",
          "format": "float",
          "description": "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0)."
        }
      },
      "type": "object",
      "id": "GoogleTypeColor"
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevision": {
      "description": "Contains past or forward revisions of this document.",
      "properties": {
        "processor": {
          "description": "If the annotation was made by processor identify the processor by its resource name.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the revision was created."
        },
        "agent": {
          "description": "If the change was made by a person specify the name or id of that person.",
          "type": "string"
        },
        "id": {
          "description": "Id of the revision. Unique within the context of the document.",
          "type": "string"
        },
        "parent": {
          "description": "The revisions that this revision is based on. This can include one or more parent (when documents are merged.) This field represents the index into the `revisions` field.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "humanReview": {
          "description": "Human Review information of this revision.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevision",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment",
      "properties": {
        "startIndex": {
          "description": "TextSegment start UTF-8 char index in the Document.text.",
          "type": "string",
          "format": "int64"
        },
        "endIndex": {
          "type": "string",
          "format": "int64",
          "description": "TextSegment half open end UTF-8 char index in the Document.text."
        }
      },
      "description": "A text segment in the Document.text. The indices may be out of bounds which indicate that the text extends into another document shard for large sharded documents. See ShardInfo.text_offset"
    },
    "GoogleTypeMoney": {
      "type": "object",
      "id": "GoogleTypeMoney",
      "description": "Represents an amount of money with its currency type.",
      "properties": {
        "nanos": {
          "format": "int32",
          "type": "integer",
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        },
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1GcsSource": {
      "id": "GoogleCloudDocumentaiV1beta1GcsSource",
      "description": "The Google Cloud Storage location where the input file will be read from.",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse": {
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "properties": {
        "responses": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse"
          },
          "description": "Responses for each individual document.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2BatchProcessDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta3CommonOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
      "type": "object",
      "description": "The common metadata for long running operations.",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "type": "string",
          "description": "The state of the operation."
        },
        "createTime": {
          "description": "The creation time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentStyleFontSize": {
      "description": "Font size with unit.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentStyleFontSize",
      "properties": {
        "unit": {
          "description": "Unit for the font size. Follows CSS naming (in, px, pt, etc.).",
          "type": "string"
        },
        "size": {
          "description": "Font size for the text.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudLocationListLocationsResponse": {
      "type": "object",
      "id": "GoogleCloudLocationListLocationsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleCloudLocationLocation"
          },
          "type": "array"
        }
      },
      "description": "The response message for Locations.ListLocations."
    },
    "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse": {
      "properties": {
        "outputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta1OutputConfig",
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects."
        },
        "inputConfig": {
          "description": "Information about the input file. This is the same as the corresponding input config in the request.",
          "$ref": "GoogleCloudDocumentaiV1beta1InputConfig"
        }
      },
      "description": "Response to a single document processing request.",
      "id": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1ReviewDocumentOperationMetadata",
      "description": "The long running operation metadata for review document method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiV1CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef": {
      "type": "object",
      "description": "Represents a weak reference to a page element within a document.",
      "properties": {
        "boundingPoly": {
          "description": "Optional. Identifies the bounding polygon of a layout element on the page.",
          "$ref": "GoogleCloudDocumentaiV1BoundingPoly"
        },
        "layoutId": {
          "type": "string",
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead."
        },
        "layoutType": {
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ],
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "type": "string"
        },
        "page": {
          "type": "string",
          "description": "Required. Index into the Document.pages element, for example using Document.pages to locate the related page element.",
          "format": "int64"
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentPageAnchorPageRef"
    },
    "GoogleCloudDocumentaiV1Vertex": {
      "id": "GoogleCloudDocumentaiV1Vertex",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "X coordinate."
        },
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1ProcessRequest": {
      "description": "Request message for the process document method.",
      "properties": {
        "inlineDocument": {
          "$ref": "GoogleCloudDocumentaiV1Document",
          "description": "An inline document proto."
        },
        "rawDocument": {
          "$ref": "GoogleCloudDocumentaiV1RawDocument",
          "description": "A raw document content (bytes)."
        },
        "skipHumanReview": {
          "description": "Whether Human Review feature should be skipped for this request. Default to false.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDocumentaiV1ProcessRequest",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentShardInfo": {
      "properties": {
        "textOffset": {
          "format": "int64",
          "type": "string",
          "description": "The index of the first character in Document.text in the overall document global text."
        },
        "shardCount": {
          "description": "Total number of shards.",
          "type": "string",
          "format": "int64"
        },
        "shardIndex": {
          "description": "The 0-based index of this shard.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentShardInfo",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse": {
      "properties": {
        "evaluation": {
          "description": "The resource name of the created evaluation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionResponse",
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse": {
      "properties": {
        "outputConfig": {
          "description": "The output location of the parsed responses. The responses are written to this location as JSON-serialized `Document` objects.",
          "$ref": "GoogleCloudDocumentaiV1beta2OutputConfig"
        },
        "inputConfig": {
          "$ref": "GoogleCloudDocumentaiV1beta2InputConfig",
          "description": "Information about the input file. This is the same as the corresponding input config in the request."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2ProcessDocumentResponse",
      "description": "Response to a single document processing request."
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextAnchor": {
      "properties": {
        "textSegments": {
          "type": "array",
          "description": "The text segments from the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchorTextSegment"
          }
        },
        "content": {
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Text reference indexing into the Document.text.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
    },
    "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3SetDefaultProcessorVersionResponse",
      "description": "Response message for set default processor version method."
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata": {
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentOperationMetadata",
      "description": "The long running operation metadata for review document method.",
      "properties": {
        "state": {
          "description": "Used only when Operation.done is false.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ]
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        },
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiV1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPage": {
      "type": "object",
      "description": "A page in a Document.",
      "id": "GoogleCloudDocumentaiV1DocumentPage",
      "properties": {
        "pageNumber": {
          "format": "int32",
          "description": "1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing.",
          "type": "integer"
        },
        "dimension": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageDimension",
          "description": "Physical dimension of the page."
        },
        "transforms": {
          "type": "array",
          "description": "Transformation matrices that were applied to the original document image to produce Page.image.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageMatrix"
          }
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "tables": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTable"
          },
          "description": "A list of visually detected tables on the page."
        },
        "image": {
          "description": "Rendered image for this page. This image is preprocessed to remove any skew, rotation, and distortions such that the annotation bounding boxes can be upright and axis-aligned.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageImage"
        },
        "lines": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageLine"
          },
          "description": "A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line."
        },
        "layout": {
          "description": "Layout for the page.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "formFields": {
          "type": "array",
          "description": "A list of visually detected form fields on the page.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageFormField"
          }
        },
        "visualElements": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageVisualElement"
          },
          "description": "A list of detected non-text visual elements e.g. checkbox, signature etc. on the page.",
          "type": "array"
        },
        "paragraphs": {
          "description": "A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageParagraph"
          },
          "type": "array"
        },
        "blocks": {
          "description": "A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageBlock"
          },
          "type": "array"
        },
        "tokens": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageToken"
          },
          "description": "A list of visually detected tokens on the page.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata": {
      "description": "The long running operation metadata for UpdateLabelerPool.",
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateLabelerPoolOperationMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageToken": {
      "type": "object",
      "description": "A detected token.",
      "id": "GoogleCloudDocumentaiV1DocumentPageToken",
      "properties": {
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array"
        },
        "detectedBreak": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak",
          "description": "Detected break at the end of a Token."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        },
        "layout": {
          "description": "Layout for Token.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        }
      }
    },
    "GoogleLongrunningOperation": {
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "GoogleLongrunningOperation"
    },
    "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "description": "The id of the parent provenance."
        },
        "revision": {
          "description": "The index of the [Document.revisions] identifying the parent revision.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Structure for referencing parent provenances. When an element replaces one of more other elements parent references identify the elements that are replaced.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentProvenanceParent"
    },
    "GoogleCloudDocumentaiV1beta1Vertex": {
      "id": "GoogleCloudDocumentaiV1beta1Vertex",
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "properties": {
        "x": {
          "format": "int32",
          "type": "integer",
          "description": "X coordinate."
        },
        "y": {
          "format": "int32",
          "type": "integer",
          "description": "Y coordinate (starts from the top of the image)."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus": {
      "properties": {
        "humanReviewStatus": {
          "description": "The status of human review on the processed document.",
          "$ref": "GoogleCloudDocumentaiV1beta3HumanReviewStatus"
        },
        "outputGcsDestination": {
          "description": "The output_gcs_destination (in the request as 'output_gcs_destination') of the processed document if it was successful, otherwise empty.",
          "type": "string"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of the processing of the document."
        },
        "humanReviewOperation": {
          "type": "string",
          "description": "The name of the operation triggered by the processed document. If the human review process is not triggered, this field will be empty. It has the same response type and metadata as the long running operation returned by ReviewDocument method."
        },
        "inputGcsSource": {
          "type": "string",
          "description": "The source of the document, same as the [input_gcs_source] field in the request when the batch process started. The batch process is started by take snapshot of that document, since a user can move or change that document during the process."
        }
      },
      "description": "The status of a each individual document in the batch process.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta3BatchProcessMetadataIndividualProcessStatus"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageMatrix": {
      "properties": {
        "rows": {
          "format": "int32",
          "description": "Number of rows in the matrix.",
          "type": "integer"
        },
        "cols": {
          "type": "integer",
          "description": "Number of columns in the matrix.",
          "format": "int32"
        },
        "type": {
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "format": "int32",
          "type": "integer"
        },
        "data": {
          "description": "The matrix data.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageMatrix"
    },
    "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentEntityNormalizedValue",
      "properties": {
        "moneyValue": {
          "$ref": "GoogleTypeMoney",
          "description": "Money value. See also: https://github.com/googleapis/googleapis/blob/master/google/type/money.proto"
        },
        "datetimeValue": {
          "$ref": "GoogleTypeDateTime",
          "description": "DateTime value. Includes date, time, and timezone. See also: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto"
        },
        "addressValue": {
          "$ref": "GoogleTypePostalAddress",
          "description": "Postal address. See also: https://github.com/googleapis/googleapis/blob/master/google/type/postal_address.proto"
        },
        "booleanValue": {
          "type": "boolean",
          "description": "Boolean value. Can be used for entities with binary values, or for checkboxes."
        },
        "text": {
          "description": "Required. Normalized entity value stored as a string. This field is populated for supported document type (e.g. Invoice). For some entity types, one of respective 'structured_value' fields may also be populated. - Money/Currency type (`money_value`) is in the ISO 4217 text format. - Date type (`date_value`) is in the ISO 8601 text format. - Datetime type (`datetime_value`) is in the ISO 8601 text format.",
          "type": "string"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate",
          "description": "Date value. Includes year, month, day. See also: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto"
        }
      },
      "type": "object",
      "description": "Parsed and normalized entity value."
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageFormField": {
      "type": "object",
      "description": "A form field detected on the page.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageFormField",
      "properties": {
        "fieldName": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc."
        },
        "valueDetectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for value together with confidence."
        },
        "fieldValue": {
          "description": "Layout for the FormField value.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "nameDetectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages for name together with confidence."
        },
        "valueType": {
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - \"unfilled_checkbox\" - \"filled_checkbox\"",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3HumanReviewStatus": {
      "id": "GoogleCloudDocumentaiV1beta3HumanReviewStatus",
      "description": "The status of human review on a processed document.",
      "properties": {
        "state": {
          "description": "The state of human review on the processing request.",
          "enumDescriptions": [
            "Human review state is unspecified. Most likely due to an internal error.",
            "Human review is skipped for the document. This can happen because human review is not enabled on the processor or the processing request has been set to skip this document.",
            "Human review validation is triggered and passed, so no review is needed.",
            "Human review validation is triggered and the document is under review.",
            "Some error happened during triggering human review, see the [state_message] for details."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "SKIPPED",
            "VALIDATION_PASSED",
            "IN_PROGRESS",
            "ERROR"
          ],
          "type": "string"
        },
        "humanReviewOperation": {
          "description": "The name of the operation triggered by the processed document. This field is populated only when the [state] is [HUMAN_REVIEW_IN_PROGRESS]. It has the same response type and metadata as the long running operation returned by [ReviewDocument] method.",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the human review state.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentStyle": {
      "id": "GoogleCloudDocumentaiV1DocumentStyle",
      "type": "object",
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "properties": {
        "textStyle": {
          "type": "string",
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp"
        },
        "textDecoration": {
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp",
          "type": "string"
        },
        "backgroundColor": {
          "description": "Text background color.",
          "$ref": "GoogleTypeColor"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "fontWeight": {
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp",
          "type": "string"
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1DocumentStyleFontSize"
        },
        "color": {
          "$ref": "GoogleTypeColor",
          "description": "Text color."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview": {
      "description": "Human Review information of the document.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentRevisionHumanReview",
      "properties": {
        "state": {
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`.",
          "type": "string"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata": {
      "type": "object",
      "description": "The long running operation metadata for the undeploy processor version method.",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "id": "GoogleCloudDocumentaiUiv1beta3UndeployProcessorVersionMetadata"
    },
    "GoogleCloudDocumentaiV1beta2GcsSource": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2GcsSource",
      "properties": {
        "uri": {
          "type": "string"
        }
      },
      "description": "The Google Cloud Storage location where the input file will be read from."
    },
    "GoogleCloudDocumentaiV1beta2Vertex": {
      "properties": {
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "Y coordinate (starts from the top of the image)."
        },
        "x": {
          "type": "integer",
          "description": "X coordinate.",
          "format": "int32"
        }
      },
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2Vertex"
    },
    "GoogleCloudLocationLocation": {
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "GoogleCloudLocationLocation",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageAnchorPageRef",
      "properties": {
        "layoutId": {
          "description": "Optional. Deprecated. Use PageRef.bounding_poly instead.",
          "type": "string"
        },
        "layoutType": {
          "description": "Optional. The type of the layout element that is being referenced if any.",
          "enumDescriptions": [
            "Layout Unspecified.",
            "References a Page.blocks element.",
            "References a Page.paragraphs element.",
            "References a Page.lines element.",
            "References a Page.tokens element.",
            "References a Page.visual_elements element.",
            "Refrrences a Page.tables element.",
            "References a Page.form_fields element."
          ],
          "type": "string",
          "enum": [
            "LAYOUT_TYPE_UNSPECIFIED",
            "BLOCK",
            "PARAGRAPH",
            "LINE",
            "TOKEN",
            "VISUAL_ELEMENT",
            "TABLE",
            "FORM_FIELD"
          ]
        },
        "page": {
          "type": "string",
          "description": "Required. Index into the Document.pages element, for example using Document.pages to locate the related page element.",
          "format": "int64"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly",
          "description": "Optional. Identifies the bounding polygon of a layout element on the page."
        }
      },
      "description": "Represents a weak reference to a page element within a document."
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageParagraph": {
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "type": "object",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for Paragraph."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance",
          "description": "The history of this annotation."
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageParagraph"
    },
    "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata": {
      "properties": {
        "state": {
          "description": "The state of the operation.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ]
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing.",
          "type": "string"
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "format": "google-datetime",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The common metadata for long running operations.",
      "id": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageToken": {
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for Token.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "detectedBreak": {
          "description": "Detected break at the end of a Token.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak"
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance",
          "description": "The history of this annotation."
        }
      },
      "description": "A detected token.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageToken",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2NormalizedVertex": {
      "type": "object",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "id": "GoogleCloudDocumentaiV1beta2NormalizedVertex",
      "properties": {
        "y": {
          "description": "Y coordinate (starts from the top of the image).",
          "format": "float",
          "type": "number"
        },
        "x": {
          "description": "X coordinate.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudDocumentaiV1RawDocument": {
      "id": "GoogleCloudDocumentaiV1RawDocument",
      "type": "object",
      "description": "Payload message of raw document content (bytes).",
      "properties": {
        "content": {
          "format": "byte",
          "description": "Inline document content.",
          "type": "string"
        },
        "mimeType": {
          "description": "An IANA MIME type (RFC6838) indicating the nature and format of the [content].",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse": {
      "description": "Response message for review document method.",
      "id": "GoogleCloudDocumentaiV1beta3ReviewDocumentResponse",
      "properties": {
        "gcsDestination": {
          "type": "string",
          "description": "The Cloud Storage uri for the human reviewed document."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentProvenance": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The Id of this operation. Needs to be unique within the scope of the revision.",
          "type": "integer"
        },
        "revision": {
          "description": "The index of the revision that produced this element.",
          "format": "int32",
          "type": "integer"
        },
        "parents": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentProvenanceParent"
          },
          "type": "array",
          "description": "References to the original elements that are replaced."
        },
        "type": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "ADD",
            "REMOVE",
            "REPLACE",
            "EVAL_REQUESTED",
            "EVAL_APPROVED",
            "EVAL_SKIPPED"
          ],
          "type": "string",
          "enumDescriptions": [
            "Operation type unspecified.",
            "Add an element. Implicit if no `parents` are set for the provenance.",
            "The element is removed. No `parents` should be set.",
            "Explicitly replaces the element(s) identified by `parents`.",
            "Element is requested for human review.",
            "Element is reviewed and approved at human review, confidence will be set to 1.0.",
            "Element is skipped in the validation process."
          ],
          "description": "The type of provenance operation."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentProvenance",
      "description": "Structure to identify provenance relationships between annotations in different revisions."
    },
    "GoogleCloudDocumentaiV1beta2InputConfig": {
      "properties": {
        "gcsSource": {
          "$ref": "GoogleCloudDocumentaiV1beta2GcsSource",
          "description": "The Google Cloud Storage location to read the input from. This must be a single file."
        },
        "mimeType": {
          "description": "Required. Mimetype of the input. Current supported mimetypes are application/pdf, image/tiff, and image/gif. In addition, application/json type is supported for requests with ProcessDocumentRequest.automl_params field set. The JSON file needs to be in Document format.",
          "type": "string"
        },
        "contents": {
          "format": "byte",
          "type": "string",
          "description": "Content in bytes, represented as a stream of bytes. Note: As with all `bytes` fields, proto buffer messages use a pure binary representation, whereas JSON representations use base64. This field only works for synchronous ProcessDocument method."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2InputConfig",
      "type": "object",
      "description": "The desired input location and metadata."
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation": {
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
      "type": "object",
      "properties": {
        "datasetErrorCount": {
          "description": "The total number of dataset errors.",
          "format": "int32",
          "type": "integer"
        },
        "datasetErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Error information for the dataset as a whole. A maximum of 10 dataset errors will be returned. A single dataset error is terminal for training."
        },
        "documentErrorCount": {
          "type": "integer",
          "description": "The total number of document errors.",
          "format": "int32"
        },
        "documentErrors": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Error information pertaining to specific documents. A maximum of 10 document errors will be returned. Any document with errors will not be used throughout training."
        }
      },
      "description": "The dataset validation information. This includes any and all errors with documents and the dataset."
    },
    "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse": {
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1ProcessDocumentResponse"
          },
          "description": "Responses for each individual document."
        }
      },
      "type": "object",
      "description": "Response to an batch document processing request. This is returned in the LRO Operation after the operation is complete.",
      "id": "GoogleCloudDocumentaiV1beta1BatchProcessDocumentsResponse"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement": {
      "type": "object",
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "properties": {
        "layout": {
          "description": "Layout for VisualElement.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        },
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          },
          "type": "array",
          "description": "A list of detected languages together with confidence."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageVisualElement"
    },
    "GoogleCloudDocumentaiV1NormalizedVertex": {
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "y": {
          "type": "number",
          "description": "Y coordinate (starts from the top of the image).",
          "format": "float"
        }
      },
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1NormalizedVertex"
    },
    "GoogleCloudDocumentaiV1BatchProcessMetadata": {
      "id": "GoogleCloudDocumentaiV1BatchProcessMetadata",
      "type": "object",
      "properties": {
        "individualProcessStatuses": {
          "description": "The list of response details of each document.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1BatchProcessMetadataIndividualProcessStatus"
          }
        },
        "state": {
          "type": "string",
          "description": "The state of the current batch processing.",
          "enum": [
            "STATE_UNSPECIFIED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLING",
            "CANCELLED",
            "FAILED"
          ],
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was being cancelled.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ]
        },
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "stateMessage": {
          "description": "A message providing more details about the current state of processing. For example, the error message if the operation is failed.",
          "type": "string"
        },
        "updateTime": {
          "description": "The last update time of the operation.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "The long running operation metadata for batch process method."
    },
    "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3DisableProcessorMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "description": "The long running operation metadata for disable processor method.",
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata": {
      "properties": {
        "testDatasetValidation": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation",
          "description": "The test dataset validation information."
        },
        "trainingDatasetValidation": {
          "description": "The training dataset validation information.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadataDatasetValidation"
        },
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3TrainProcessorVersionMetadata",
      "description": "The metadata that represents a processor version being created."
    },
    "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig": {
      "description": "The configuration used when outputting documents.",
      "properties": {
        "gcsUri": {
          "type": "string",
          "description": "The Cloud Storage uri (a directory) of the output."
        }
      },
      "id": "GoogleCloudDocumentaiV1DocumentOutputConfigGcsOutputConfig",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentEntity": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Entity type from a schema e.g. `Address`.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Optional. Canonical id. This will be a unique value in the entity list for this document."
        },
        "provenance": {
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance",
          "description": "Optional. The history of this annotation."
        },
        "mentionId": {
          "type": "string",
          "description": "Optional. Deprecated. Use `id` field instead."
        },
        "normalizedValue": {
          "description": "Optional. Normalized entity value. Absent if the extracted value could not be converted or the type (e.g. address) is not supported for certain parsers. This field is also only populated for certain supported document types.",
          "$ref": "GoogleCloudDocumentaiV1DocumentEntityNormalizedValue"
        },
        "redacted": {
          "description": "Optional. Whether the entity will be redacted for de-identification purposes.",
          "type": "boolean"
        },
        "pageAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageAnchor",
          "description": "Optional. Represents the provenance of this entity wrt. the location on the page where it was found."
        },
        "properties": {
          "type": "array",
          "description": "Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentEntity"
          }
        },
        "mentionText": {
          "description": "Optional. Text value in the document e.g. `1600 Amphitheatre Pkwy`.",
          "type": "string"
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchor",
          "description": "Optional. Provenance of the entity. Text anchor indexing into the Document.text."
        },
        "confidence": {
          "description": "Optional. Confidence of detected Schema entity. Range [0, 1].",
          "type": "number",
          "format": "float"
        }
      },
      "description": "A phrase in the text that is a known entity type, such as a person, an organization, or location.",
      "id": "GoogleCloudDocumentaiV1DocumentEntity"
    },
    "GoogleCloudDocumentaiV1DocumentShardInfo": {
      "type": "object",
      "properties": {
        "shardCount": {
          "description": "Total number of shards.",
          "format": "int64",
          "type": "string"
        },
        "shardIndex": {
          "format": "int64",
          "description": "The 0-based index of this shard.",
          "type": "string"
        },
        "textOffset": {
          "type": "string",
          "format": "int64",
          "description": "The index of the first character in Document.text in the overall document global text."
        }
      },
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is.",
      "id": "GoogleCloudDocumentaiV1DocumentShardInfo"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTable",
      "description": "A table representation similar to HTML table structure.",
      "properties": {
        "headerRows": {
          "description": "Header rows of the table.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          }
        },
        "bodyRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageTableTableRow"
          },
          "description": "Body rows of the table.",
          "type": "array"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentPageLayout",
          "description": "Layout for Table."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement": {
      "description": "Detected non-text visual elements e.g. checkbox, signature etc. on the page.",
      "properties": {
        "detectedLanguages": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence.",
          "type": "array"
        },
        "type": {
          "type": "string",
          "description": "Type of the VisualElement."
        },
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout",
          "description": "Layout for VisualElement."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageVisualElement"
    },
    "GoogleLongrunningCancelOperationRequest": {
      "id": "GoogleLongrunningCancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDocumentaiV1GcsPrefix": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1GcsPrefix",
      "properties": {
        "gcsUriPrefix": {
          "description": "The URI prefix.",
          "type": "string"
        }
      },
      "description": "Specifies all documents on Cloud Storage with a common prefix."
    },
    "GoogleCloudDocumentaiV1BatchProcessResponse": {
      "description": "Response message for batch process document method.",
      "properties": {},
      "id": "GoogleCloudDocumentaiV1BatchProcessResponse",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageMatrix": {
      "type": "object",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageMatrix",
      "properties": {
        "type": {
          "format": "int32",
          "type": "integer",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html"
        },
        "data": {
          "type": "string",
          "description": "The matrix data.",
          "format": "byte"
        },
        "cols": {
          "format": "int32",
          "type": "integer",
          "description": "Number of columns in the matrix."
        },
        "rows": {
          "description": "Number of rows in the matrix.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentPageParagraph": {
      "type": "object",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for Paragraph."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "type": "array"
        }
      },
      "description": "A collection of lines that a human would perceive as a paragraph.",
      "id": "GoogleCloudDocumentaiV1DocumentPageParagraph"
    },
    "GoogleCloudDocumentaiV1beta2DocumentLabel": {
      "properties": {
        "automlModel": {
          "type": "string",
          "description": "Label is generated AutoML model. This field stores the full resource name of the AutoML model. Format: `projects/{project-id}/locations/{location-id}/models/{model-id}`"
        },
        "name": {
          "type": "string",
          "description": "Name of the label. When the label is generated from AutoML Text Classification model, this field represents the name of the category."
        },
        "confidence": {
          "format": "float",
          "description": "Confidence score between 0 and 1 for label assignment.",
          "type": "number"
        }
      },
      "description": "Label attaches schema information and/or other metadata to segments within a Document. Multiple Labels on a single field can denote either different labels, different instances of the same label created at different times, or some combination of both.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentLabel",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageAnchor": {
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageAnchor",
      "type": "object",
      "properties": {
        "pageRefs": {
          "description": "One or more references to visual page elements",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageAnchorPageRef"
          },
          "type": "array"
        }
      },
      "description": "Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types."
    },
    "GoogleCloudDocumentaiV1beta2DocumentEntityRelation": {
      "properties": {
        "objectId": {
          "type": "string",
          "description": "Object entity id."
        },
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        },
        "subjectId": {
          "type": "string",
          "description": "Subject entity id."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta2DocumentEntityRelation",
      "description": "Relationship between Entities."
    },
    "GoogleCloudDocumentaiV1DocumentPageMatrix": {
      "type": "object",
      "description": "Representation for transformation matrix, intended to be compatible and used with OpenCV format for image manipulation.",
      "id": "GoogleCloudDocumentaiV1DocumentPageMatrix",
      "properties": {
        "cols": {
          "type": "integer",
          "format": "int32",
          "description": "Number of columns in the matrix."
        },
        "rows": {
          "format": "int32",
          "description": "Number of rows in the matrix.",
          "type": "integer"
        },
        "type": {
          "format": "int32",
          "description": "This encodes information about what data type the matrix uses. For example, 0 (CV_8U) is an unsigned 8-bit image. For the full list of OpenCV primitive data types, please refer to https://docs.opencv.org/4.3.0/d1/d1b/group__core__hal__interface.html",
          "type": "integer"
        },
        "data": {
          "format": "byte",
          "type": "string",
          "description": "The matrix data."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentTextAnchor": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentTextAnchor",
      "properties": {
        "textSegments": {
          "description": "The text segments from the Document.text.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentTextAnchorTextSegment"
          },
          "type": "array"
        },
        "content": {
          "type": "string",
          "description": "Contains the content of the text span so that users do not have to look it up in the text_segments."
        }
      },
      "description": "Text reference indexing into the Document.text."
    },
    "GoogleCloudDocumentaiV1GcsDocument": {
      "description": "Specifies a document stored on Cloud Storage.",
      "properties": {
        "mimeType": {
          "type": "string",
          "description": "An IANA MIME type (RFC6838) of the content."
        },
        "gcsUri": {
          "type": "string",
          "description": "The Cloud Storage object uri."
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1GcsDocument"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageLayout": {
      "properties": {
        "confidence": {
          "description": "Confidence of the current Layout within context of the object this layout is for. e.g. confidence can be for a single token, a table, a visual element, etc. depending on context. Range [0, 1].",
          "type": "number",
          "format": "float"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDocumentaiV1beta1BoundingPoly",
          "description": "The bounding polygon for the Layout."
        },
        "textAnchor": {
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor",
          "description": "Text anchor indexing into the Document.text."
        },
        "orientation": {
          "enum": [
            "ORIENTATION_UNSPECIFIED",
            "PAGE_UP",
            "PAGE_RIGHT",
            "PAGE_DOWN",
            "PAGE_LEFT"
          ],
          "description": "Detected orientation for the Layout.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified orientation.",
            "Orientation is aligned with page up.",
            "Orientation is aligned with page right. Turn the head 90 degrees clockwise from upright to read.",
            "Orientation is aligned with page down. Turn the head 180 degrees from upright to read.",
            "Orientation is aligned with page left. Turn the head 90 degrees counterclockwise from upright to read."
          ]
        }
      },
      "description": "Visual element describing a layout unit on a page.",
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageLayout"
    },
    "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak": {
      "id": "GoogleCloudDocumentaiV1DocumentPageTokenDetectedBreak",
      "type": "object",
      "description": "Detected break at the end of a Token.",
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "description": "Detected break type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "type": "string"
        }
      }
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "id": "GoogleRpcStatus",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      }
    },
    "GoogleCloudDocumentaiV1DocumentProvenanceParent": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer",
          "description": "The id of the parent provenance."
        },
        "revision": {
          "type": "integer",
          "description": "The index of the [Document.revisions] identifying the parent revision.",
          "format": "int32"
        }
      },
      "description": "Structure for referencing parent provenances. When an element replaces one of more other elements parent references identify the elements that are replaced.",
      "id": "GoogleCloudDocumentaiV1DocumentProvenanceParent"
    },
    "GoogleCloudDocumentaiV1CommonOperationMetadata": {
      "type": "object",
      "description": "The common metadata for long running operations.",
      "id": "GoogleCloudDocumentaiV1CommonOperationMetadata",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "The creation time of the operation.",
          "type": "string"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        },
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "Operation is still running.",
            "Operation is being cancelled.",
            "Operation succeeded.",
            "Operation failed.",
            "Operation is cancelled."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "CANCELLING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED"
          ],
          "description": "The state of the operation."
        },
        "updateTime": {
          "type": "string",
          "description": "The last update time of the operation.",
          "format": "google-datetime"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta2DocumentShardInfo": {
      "properties": {
        "shardCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of shards."
        },
        "textOffset": {
          "type": "string",
          "description": "The index of the first character in Document.text in the overall document global text.",
          "format": "int64"
        },
        "shardIndex": {
          "format": "int64",
          "type": "string",
          "description": "The 0-based index of this shard."
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentShardInfo",
      "type": "object",
      "description": "For a large document, sharding may be performed to produce several document shards. Each document shard contains this field to detail which shard it is."
    },
    "GoogleCloudDocumentaiV1DocumentPageLine": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageLine",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "properties": {
        "layout": {
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout",
          "description": "Layout for Line."
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1DocumentProvenance"
        },
        "detectedLanguages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          },
          "description": "A list of detected languages together with confidence."
        }
      }
    },
    "GoogleCloudDocumentaiV1GcsDocuments": {
      "properties": {
        "documents": {
          "description": "The list of documents.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1GcsDocument"
          },
          "type": "array"
        }
      },
      "description": "Specifies a set of documents on Cloud Storage.",
      "id": "GoogleCloudDocumentaiV1GcsDocuments",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageLine": {
      "properties": {
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        },
        "detectedLanguages": {
          "description": "A list of detected languages together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "description": "Layout for Line.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageLine",
      "description": "A collection of tokens that a human would perceive as a line. Does not cross column boundaries, can be horizontal, vertical, etc.",
      "type": "object"
    },
    "GoogleTypeDate": {
      "properties": {
        "year": {
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."
        },
        "day": {
          "format": "int32",
          "type": "integer",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."
        }
      },
      "description": "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
      "id": "GoogleTypeDate",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentRevisionHumanReview": {
      "id": "GoogleCloudDocumentaiV1DocumentRevisionHumanReview",
      "description": "Human Review information of the document.",
      "type": "object",
      "properties": {
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing. For example, the rejection reason when the state is `rejected`."
        },
        "state": {
          "type": "string",
          "description": "Human review state. e.g. `requested`, `succeeded`, `rejected`."
        }
      }
    },
    "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse": {
      "properties": {},
      "description": "Response message for the deploy processor version method.",
      "type": "object",
      "id": "GoogleCloudDocumentaiUiv1beta3DeployProcessorVersionResponse"
    },
    "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata": {
      "description": "Metadata of the EvaluateProcessorVersion method.",
      "id": "GoogleCloudDocumentaiUiv1beta3EvaluateProcessorVersionMetadata",
      "properties": {
        "commonMetadata": {
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata",
          "description": "The basic metadata of the long running operation."
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentStyle": {
      "description": "Annotation for common text style attributes. This adheres to CSS conventions as much as possible.",
      "properties": {
        "backgroundColor": {
          "$ref": "GoogleTypeColor",
          "description": "Text background color."
        },
        "color": {
          "description": "Text color.",
          "$ref": "GoogleTypeColor"
        },
        "textStyle": {
          "type": "string",
          "description": "Text style. Possible values are normal, italic, and oblique. https://www.w3schools.com/cssref/pr_font_font-style.asp"
        },
        "fontSize": {
          "description": "Font size.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentStyleFontSize"
        },
        "textAnchor": {
          "description": "Text anchor indexing into the Document.text.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "fontWeight": {
          "type": "string",
          "description": "Font weight. Possible values are normal, bold, bolder, and lighter. https://www.w3schools.com/cssref/pr_font_weight.asp"
        },
        "textDecoration": {
          "description": "Text decoration. Follows CSS standard. https://www.w3schools.com/cssref/pr_text_text-decoration.asp",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1DocumentStyle"
    },
    "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "The id of the parent provenance.",
          "type": "integer"
        },
        "revision": {
          "type": "integer",
          "description": "The index of the [Document.revisions] identifying the parent revision.",
          "format": "int32"
        }
      },
      "description": "Structure for referencing parent provenances. When an element replaces one of more other elements parent references identify the elements that are replaced.",
      "id": "GoogleCloudDocumentaiV1beta2DocumentProvenanceParent"
    },
    "GoogleCloudDocumentaiV1beta1DocumentTextChange": {
      "description": "This message is used for text changes aka. OCR corrections.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentTextChange",
      "type": "object",
      "properties": {
        "changedText": {
          "type": "string",
          "description": "The text that replaces the text identified in the `text_anchor`."
        },
        "textAnchor": {
          "description": "Provenance of the correction. Text anchor indexing into the Document.text. There can only be a single `TextAnchor.text_segments` element. If the start and end index of the text segment are the same, the text change is inserted before that index.",
          "$ref": "GoogleCloudDocumentaiV1beta1DocumentTextAnchor"
        },
        "provenance": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta1DocumentProvenance"
          },
          "description": "The history of this annotation."
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1OperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1beta1OperationMetadata",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "The last update time of the operation.",
          "format": "google-datetime"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "The default value. This value is used if the state is omitted.",
            "Request is received.",
            "Request operation is waiting for scheduling.",
            "Request is being processed.",
            "The batch processing completed successfully.",
            "The batch processing was cancelled.",
            "The batch processing has failed."
          ],
          "description": "The state of the current batch processing.",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACCEPTED",
            "WAITING",
            "RUNNING",
            "SUCCEEDED",
            "CANCELLED",
            "FAILED"
          ]
        },
        "createTime": {
          "type": "string",
          "description": "The creation time of the operation.",
          "format": "google-datetime"
        },
        "stateMessage": {
          "type": "string",
          "description": "A message providing more details about the current state of processing."
        }
      },
      "description": "Contains metadata for the BatchProcessDocuments operation."
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1DocumentPageTable": {
      "id": "GoogleCloudDocumentaiV1DocumentPageTable",
      "description": "A table representation similar to HTML table structure.",
      "properties": {
        "headerRows": {
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
          },
          "description": "Header rows of the table.",
          "type": "array"
        },
        "layout": {
          "description": "Layout for Table.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "bodyRows": {
          "type": "array",
          "description": "Body rows of the table.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageTableTableRow"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata": {
      "id": "GoogleCloudDocumentaiUiv1beta3UpdateHumanReviewConfigMetadata",
      "type": "object",
      "properties": {
        "commonMetadata": {
          "description": "The basic metadata of the long running operation.",
          "$ref": "GoogleCloudDocumentaiUiv1beta3CommonOperationMetadata"
        }
      },
      "description": "The long running operation metadata for updating the human review configuration."
    },
    "GoogleCloudDocumentaiV1DocumentEntityRelation": {
      "type": "object",
      "description": "Relationship between Entities.",
      "id": "GoogleCloudDocumentaiV1DocumentEntityRelation",
      "properties": {
        "objectId": {
          "description": "Object entity id.",
          "type": "string"
        },
        "subjectId": {
          "description": "Subject entity id.",
          "type": "string"
        },
        "relation": {
          "description": "Relationship description.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage": {
      "description": "Detected language for a structural component.",
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageDetectedLanguage",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."
        },
        "confidence": {
          "format": "float",
          "description": "Confidence of detected language. Range [0, 1].",
          "type": "number"
        }
      },
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak": {
      "id": "GoogleCloudDocumentaiV1beta1DocumentPageTokenDetectedBreak",
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "SPACE",
            "WIDE_SPACE",
            "HYPHEN"
          ],
          "enumDescriptions": [
            "Unspecified break type.",
            "A single whitespace.",
            "A wider whitespace.",
            "A hyphen that indicates that a token has been split across lines."
          ],
          "type": "string",
          "description": "Detected break type."
        }
      },
      "description": "Detected break at the end of a Token.",
      "type": "object"
    },
    "GoogleCloudDocumentaiV1beta2DocumentPageBlock": {
      "type": "object",
      "description": "A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation.",
      "properties": {
        "detectedLanguages": {
          "type": "array",
          "description": "A list of detected languages together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage"
          }
        },
        "layout": {
          "description": "Layout for Block.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentPageLayout"
        },
        "provenance": {
          "description": "The history of this annotation.",
          "$ref": "GoogleCloudDocumentaiV1beta2DocumentProvenance"
        }
      },
      "id": "GoogleCloudDocumentaiV1beta2DocumentPageBlock"
    },
    "GoogleCloudDocumentaiV1ProcessResponse": {
      "properties": {
        "document": {
          "$ref": "GoogleCloudDocumentaiV1Document",
          "description": "The document payload, will populate fields based on the processor's behavior."
        },
        "humanReviewStatus": {
          "$ref": "GoogleCloudDocumentaiV1HumanReviewStatus",
          "description": "The status of human review on the processed document."
        }
      },
      "type": "object",
      "description": "Response message for the process document method.",
      "id": "GoogleCloudDocumentaiV1ProcessResponse"
    },
    "GoogleCloudDocumentaiV1DocumentPageFormField": {
      "type": "object",
      "id": "GoogleCloudDocumentaiV1DocumentPageFormField",
      "properties": {
        "valueType": {
          "type": "string",
          "description": "If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the field_value is normal text) - \"unfilled_checkbox\" - \"filled_checkbox\""
        },
        "nameDetectedLanguages": {
          "description": "A list of detected languages for name together with confidence.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        },
        "fieldName": {
          "description": "Layout for the FormField name. e.g. `Address`, `Email`, `Grand total`, `Phone number`, etc.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "fieldValue": {
          "description": "Layout for the FormField value.",
          "$ref": "GoogleCloudDocumentaiV1DocumentPageLayout"
        },
        "valueDetectedLanguages": {
          "type": "array",
          "description": "A list of detected languages for value together with confidence.",
          "items": {
            "$ref": "GoogleCloudDocumentaiV1DocumentPageDetectedLanguage"
          }
        }
      },
      "description": "A form field detected on the page."
    }
  },
  "discoveryVersion": "v1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  }
}
