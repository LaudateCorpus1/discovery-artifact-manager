{
  "batchPath": "batch",
  "title": "Dialogflow API",
  "canonicalName": "Dialogflow",
  "kind": "discovery#restDescription",
  "baseUrl": "https://dialogflow.googleapis.com/",
  "documentationLink": "https://cloud.google.com/dialogflow/",
  "mtlsRootUrl": "https://dialogflow.mtls.googleapis.com/",
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "parameters": {
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "location": "query",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    }
  },
  "id": "dialogflow:v2",
  "revision": "20210412",
  "rootUrl": "https://dialogflow.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/dialogflow": {
          "description": "View, manage and query your Dialogflow agents"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "resources": {
    "projects": {
      "methods": {
        "getAgent": {
          "parameterOrder": [
            "parent"
          ],
          "id": "dialogflow.projects.getAgent",
          "path": "v2/{+parent}/agent",
          "flatPath": "v2/projects/{projectsId}/agent",
          "parameters": {
            "parent": {
              "pattern": "^projects/[^/]+$",
              "required": true,
              "location": "path",
              "description": "Required. The project that the agent to fetch is associated with. Format: `projects/`.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/dialogflow"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          },
          "description": "Retrieves the specified agent."
        },
        "deleteAgent": {
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "parameters": {
            "parent": {
              "location": "path",
              "description": "Required. The project that the agent to delete is associated with. Format: `projects/`.",
              "pattern": "^projects/[^/]+$",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v2/projects/{projectsId}/agent",
          "description": "Deletes the specified agent.",
          "parameterOrder": [
            "parent"
          ],
          "id": "dialogflow.projects.deleteAgent",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/dialogflow"
          ],
          "httpMethod": "DELETE",
          "path": "v2/{+parent}/agent"
        },
        "setAgent": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/dialogflow"
          ],
          "flatPath": "v2/projects/{projectsId}/agent",
          "request": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          },
          "description": "Creates/updates the specified agent.",
          "response": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          },
          "parameters": {
            "parent": {
              "required": true,
              "type": "string",
              "pattern": "^projects/[^/]+$",
              "location": "path",
              "description": "Required. The project of this agent. Format: `projects/`."
            },
            "updateMask": {
              "description": "Optional. The mask to control which fields get updated.",
              "format": "google-fieldmask",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "id": "dialogflow.projects.setAgent",
          "path": "v2/{+parent}/agent"
        }
      },
      "resources": {
        "answerRecords": {
          "methods": {
            "list": {
              "parameters": {
                "parent": {
                  "description": "Required. The project to list all answer records for in reverse chronological order. Format: `projects//locations/`.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "Optional. The maximum number of records to return in a single page. The server may return fewer records than this. If unspecified, we use 10. The maximum is 100.",
                  "location": "query",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Required. Filters to restrict results to specific answer records. Filter on answer record type. Currently predicates on `type` is supported, valid values are `ARTICLE_ANSWER`, `FAQ_ANSWER`. For more information about filtering, see [API Filtering](https://aip.dev/160)."
                },
                "pageToken": {
                  "description": "Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list request used to continue listing on the next page.",
                  "type": "string",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "GoogleCloudDialogflowV2ListAnswerRecordsResponse"
              },
              "flatPath": "v2/projects/{projectsId}/answerRecords",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "description": "Returns the list of all answer records in the specified project in reverse chronological order.",
              "parameterOrder": [
                "parent"
              ],
              "id": "dialogflow.projects.answerRecords.list",
              "httpMethod": "GET",
              "path": "v2/{+parent}/answerRecords"
            },
            "patch": {
              "id": "dialogflow.projects.answerRecords.patch",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/answerRecords/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "The unique identifier of this answer record. Format: `projects//locations//answerRecords/`."
                },
                "updateMask": {
                  "description": "Required. The mask to control which fields get updated.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v2/projects/{projectsId}/answerRecords/{answerRecordsId}",
              "httpMethod": "PATCH",
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudDialogflowV2AnswerRecord"
              },
              "response": {
                "$ref": "GoogleCloudDialogflowV2AnswerRecord"
              },
              "description": "Updates the specified answer record.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ]
            }
          }
        },
        "knowledgeBases": {
          "resources": {
            "documents": {
              "methods": {
                "patch": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.",
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`."
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Document"
                  },
                  "description": "Updates the specified document. Operation ",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "PATCH",
                  "id": "dialogflow.projects.knowledgeBases.documents.patch"
                },
                "delete": {
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                  "description": "Deletes the specified document. Operation ",
                  "httpMethod": "DELETE",
                  "id": "dialogflow.projects.knowledgeBases.documents.delete",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                      "description": "Required. The name of the document to delete. Format: `projects//locations//knowledgeBases//documents/`.",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "create": {
                  "id": "dialogflow.projects.knowledgeBases.documents.create",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`."
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Document"
                  },
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents",
                  "description": "Creates a new document. Operation ",
                  "path": "v2/{+parent}/documents",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "get": {
                  "description": "Retrieves the specified document.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Document"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the document to retrieve. Format `projects//locations//knowledgeBases//documents/`."
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                  "id": "dialogflow.projects.knowledgeBases.documents.get",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "reload": {
                  "description": "Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the document has not changed, there still may be side effects because of internal implementation changes. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`. Operation ",
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}:reload",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2ReloadDocumentRequest"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/`",
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "dialogflow.projects.knowledgeBases.documents.reload",
                  "httpMethod": "POST",
                  "path": "v2/{+name}:reload"
                },
                "list": {
                  "description": "Returns the list of all documents of the knowledge base.",
                  "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}/documents",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListDocumentsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous list request.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of items to return in a single page. By default 10 and at most 100.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/knowledgeBases/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The knowledge base to list all documents for. Format: `projects//locations//knowledgeBases/`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "id": "dialogflow.projects.knowledgeBases.documents.list",
                  "path": "v2/{+parent}/documents"
                }
              }
            }
          },
          "methods": {
            "patch": {
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/knowledgeBases/[^/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.",
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string"
                }
              },
              "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}",
              "request": {
                "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
              },
              "description": "Updates the specified knowledge base.",
              "response": {
                "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "dialogflow.projects.knowledgeBases.patch",
              "path": "v2/{+name}"
            },
            "list": {
              "response": {
                "$ref": "GoogleCloudDialogflowV2ListKnowledgeBasesResponse"
              },
              "path": "v2/{+parent}/knowledgeBases",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The project to list of knowledge bases for. Format: `projects//locations/`.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of items to return in a single page. By default 10 and at most 100."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The next_page_token value returned from a previous list request."
                }
              },
              "description": "Returns the list of all knowledge bases of the specified agent.",
              "flatPath": "v2/projects/{projectsId}/knowledgeBases",
              "parameterOrder": [
                "parent"
              ],
              "id": "dialogflow.projects.knowledgeBases.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ]
            },
            "delete": {
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "id": "dialogflow.projects.knowledgeBases.delete",
              "path": "v2/{+name}",
              "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.",
                  "pattern": "^projects/[^/]+/knowledgeBases/[^/]+$",
                  "type": "string",
                  "required": true
                },
                "force": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base are also deleted."
                }
              },
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes the specified knowledge base."
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "path": "v2/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "description": "Retrieves the specified knowledge base.",
              "flatPath": "v2/projects/{projectsId}/knowledgeBases/{knowledgeBasesId}",
              "id": "dialogflow.projects.knowledgeBases.get",
              "response": {
                "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+/knowledgeBases/[^/]+$",
                  "required": true
                }
              }
            },
            "create": {
              "id": "dialogflow.projects.knowledgeBases.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "path": "v2/{+parent}/knowledgeBases",
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
              },
              "description": "Creates a knowledge base.",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
              },
              "flatPath": "v2/projects/{projectsId}/knowledgeBases",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The project to create a knowledge base for. Format: `projects//locations/`."
                }
              }
            }
          }
        },
        "conversations": {
          "methods": {
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "id": "dialogflow.projects.conversations.create",
              "description": "Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's no dialogflow agent responding to user queries. But we will provide suggestions which are generated from conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation will start from `Automated Agent Stage`, otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage.",
              "response": {
                "$ref": "GoogleCloudDialogflowV2Conversation"
              },
              "httpMethod": "POST",
              "path": "v2/{+parent}/conversations",
              "parameters": {
                "conversationId": {
                  "type": "string",
                  "description": "Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The conversation ID must be compliant with the regression fomula \"a-zA-Z*\" with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1. the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness.",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`."
                }
              },
              "request": {
                "$ref": "GoogleCloudDialogflowV2Conversation"
              },
              "flatPath": "v2/projects/{projectsId}/conversations",
              "parameterOrder": [
                "parent"
              ]
            },
            "list": {
              "response": {
                "$ref": "GoogleCloudDialogflowV2ListConversationsResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "id": "dialogflow.projects.conversations.list",
              "description": "Returns the list of all conversations in the specified project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameters": {
                "filter": {
                  "description": "A filter expression that filters conversations listed in the response. In general, the expression must specify the field name, a comparison operator, and the value to use for filtering: - The value must be a string, a number, or a boolean. - The comparison operator must be either `=`,`!=`, `\u003e`, or `\u003c`. - To filter on multiple expressions, separate the expressions with `AND` or `OR` (omitting both implies `AND`). - For clarity, expressions can be enclosed in parentheses. Only `lifecycle_state` can be filtered on in this way. For example, the following expression only returns `COMPLETED` conversations: `lifecycle_state = \"COMPLETED\"` For more information about filtering, see [API Filtering](https://aip.dev/160).",
                  "type": "string",
                  "location": "query"
                },
                "pageToken": {
                  "description": "Optional. The next_page_token value returned from a previous list request.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The project from which to list all conversation. Format: `projects//locations/`.",
                  "pattern": "^projects/[^/]+$"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                }
              },
              "flatPath": "v2/projects/{projectsId}/conversations",
              "path": "v2/{+parent}/conversations"
            },
            "complete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleCloudDialogflowV2Conversation"
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudDialogflowV2CompleteConversationRequest"
              },
              "path": "v2/{+name}:complete",
              "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}:complete",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. Resource identifier of the conversation to close. Format: `projects//locations//conversations/`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/conversations/[^/]+$"
                }
              },
              "id": "dialogflow.projects.conversations.complete",
              "description": "Completes the specified conversation. Finished conversations are purged from the database after 30 days."
            },
            "get": {
              "id": "dialogflow.projects.conversations.get",
              "response": {
                "$ref": "GoogleCloudDialogflowV2Conversation"
              },
              "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}",
              "parameters": {
                "name": {
                  "description": "Required. The name of the conversation. Format: `projects//locations//conversations/`.",
                  "pattern": "^projects/[^/]+/conversations/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Retrieves the specific conversation.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ]
            }
          },
          "resources": {
            "participants": {
              "resources": {
                "suggestions": {
                  "methods": {
                    "suggestArticles": {
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2SuggestArticlesRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SuggestArticlesResponse"
                      },
                      "id": "dialogflow.projects.conversations.participants.suggestions.suggestArticles",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                          "description": "Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`.",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Gets suggested articles for a participant based on specific historical messages.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+parent}/suggestions:suggestArticles",
                      "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants/{participantsId}/suggestions:suggestArticles"
                    },
                    "suggestFaqAnswers": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse"
                      },
                      "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants/{participantsId}/suggestions:suggestFaqAnswers",
                      "httpMethod": "POST",
                      "path": "v2/{+parent}/suggestions:suggestFaqAnswers",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$"
                        }
                      },
                      "id": "dialogflow.projects.conversations.participants.suggestions.suggestFaqAnswers",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersRequest"
                      },
                      "description": "Gets suggested faq answers for a participant based on specific historical messages."
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the participant. Format: `projects//locations//conversations//participants/`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Participant"
                  },
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants/{participantsId}",
                  "id": "dialogflow.projects.conversations.participants.get",
                  "description": "Retrieves a conversation participant.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "description": "Creates a new participant in a conversation.",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Participant"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Participant"
                  },
                  "path": "v2/{+parent}/participants",
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/conversations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`."
                    }
                  },
                  "id": "dialogflow.projects.conversations.participants.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "POST"
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants",
                  "path": "v2/{+parent}/participants",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.conversations.participants.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListParticipantsResponse"
                  },
                  "description": "Returns the list of all participants in the specified conversation.",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous list request."
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The conversation to list all participants from. Format: `projects//locations//conversations/`.",
                      "pattern": "^projects/[^/]+/conversations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "patch": {
                  "path": "v2/{+name}",
                  "description": "Updates the specified participant.",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Participant"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. The mask to specify which fields to update.",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "description": "Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.",
                      "pattern": "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Participant"
                  },
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants/{participantsId}",
                  "httpMethod": "PATCH",
                  "id": "dialogflow.projects.conversations.participants.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "analyzeContent": {
                  "parameterOrder": [
                    "participant"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2AnalyzeContentRequest"
                  },
                  "description": "Adds a text (chat, for example), or audio (phone recording, for example) message from a participant into the conversation. Note: Always use agent versions for production traffic sent to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/participants/{participantsId}:analyzeContent",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2AnalyzeContentResponse"
                  },
                  "parameters": {
                    "participant": {
                      "pattern": "^projects/[^/]+/conversations/[^/]+/participants/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the participant this text comes from. Format: `projects//locations//conversations//participants/`.",
                      "type": "string"
                    }
                  },
                  "id": "dialogflow.projects.conversations.participants.analyzeContent",
                  "path": "v2/{+participant}:analyzeContent",
                  "httpMethod": "POST"
                }
              }
            },
            "messages": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListMessagesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/conversations/{conversationsId}/messages",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dialogflow.projects.conversations.messages.list",
                  "path": "v2/{+parent}/messages",
                  "description": "Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in descending order. To fetch updates without duplication, send request with filter `create_time_epoch_microseconds \u003e [first item's create_time of previous request]` and empty page_token.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous list request."
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the conversation to list messages for. Format: `projects//locations//conversations/`",
                      "required": true,
                      "pattern": "^projects/[^/]+/conversations/[^/]+$"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "filter": {
                      "description": "Optional. Filter on message fields. Currently predicates on `create_time` and `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds accuracy. E.g., `create_time_epoch_microseconds \u003e 1551790877964485` or `create_time \u003e 2017-01-15T01:30:15.01Z`. For more information about filtering, see [API Filtering](https://aip.dev/160).",
                      "type": "string",
                      "location": "query"
                    }
                  }
                }
              }
            }
          }
        },
        "locations": {
          "methods": {
            "deleteAgent": {
              "description": "Deletes the specified agent.",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The project that the agent to delete is associated with. Format: `projects/`.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent",
              "path": "v2/{+parent}/agent",
              "id": "dialogflow.projects.locations.deleteAgent",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "httpMethod": "DELETE"
            },
            "setAgent": {
              "httpMethod": "POST",
              "description": "Creates/updates the specified agent.",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent",
              "id": "dialogflow.projects.locations.setAgent",
              "request": {
                "$ref": "GoogleCloudDialogflowV2Agent"
              },
              "response": {
                "$ref": "GoogleCloudDialogflowV2Agent"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The project of this agent. Format: `projects/`.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "updateMask": {
                  "description": "Optional. The mask to control which fields get updated.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "path": "v2/{+parent}/agent"
            },
            "getAgent": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2Agent"
              },
              "path": "v2/{+parent}/agent",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "description": "Required. The project that the agent to fetch is associated with. Format: `projects/`.",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "dialogflow.projects.locations.getAgent",
              "description": "Retrieves the specified agent."
            }
          },
          "resources": {
            "conversations": {
              "methods": {
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "description": "Retrieves the specific conversation.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.locations.conversations.get",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Conversation"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "description": "Required. The name of the conversation. Format: `projects//locations//conversations/`.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v2/{+name}"
                },
                "complete": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. Resource identifier of the conversation to close. Format: `projects//locations//conversations/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}:complete",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Conversation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.locations.conversations.complete",
                  "path": "v2/{+name}:complete",
                  "description": "Completes the specified conversation. Finished conversations are purged from the database after 30 days.",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2CompleteConversationRequest"
                  }
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations",
                  "path": "v2/{+parent}/conversations",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListConversationsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The project from which to list all conversation. Format: `projects//locations/`."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous list request."
                    },
                    "filter": {
                      "location": "query",
                      "description": "A filter expression that filters conversations listed in the response. In general, the expression must specify the field name, a comparison operator, and the value to use for filtering: - The value must be a string, a number, or a boolean. - The comparison operator must be either `=`,`!=`, `\u003e`, or `\u003c`. - To filter on multiple expressions, separate the expressions with `AND` or `OR` (omitting both implies `AND`). - For clarity, expressions can be enclosed in parentheses. Only `lifecycle_state` can be filtered on in this way. For example, the following expression only returns `COMPLETED` conversations: `lifecycle_state = \"COMPLETED\"` For more information about filtering, see [API Filtering](https://aip.dev/160).",
                      "type": "string"
                    }
                  },
                  "description": "Returns the list of all conversations in the specified project.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.conversations.list"
                },
                "create": {
                  "description": "Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's no dialogflow agent responding to user queries. But we will provide suggestions which are generated from conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation will start from `Automated Agent Stage`, otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage.",
                  "id": "dialogflow.projects.locations.conversations.create",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "path": "v2/{+parent}/conversations",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Conversation"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "conversationId": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The conversation ID must be compliant with the regression fomula \"a-zA-Z*\" with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1. the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness."
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Conversation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                }
              },
              "resources": {
                "participants": {
                  "resources": {
                    "suggestions": {
                      "methods": {
                        "suggestFaqAnswers": {
                          "path": "v2/{+parent}/suggestions:suggestFaqAnswers",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse"
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants/{participantsId}/suggestions:suggestFaqAnswers",
                          "parameters": {
                            "parent": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "description": "Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`."
                            }
                          },
                          "description": "Gets suggested faq answers for a participant based on specific historical messages.",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersRequest"
                          },
                          "httpMethod": "POST",
                          "id": "dialogflow.projects.locations.conversations.participants.suggestions.suggestFaqAnswers"
                        },
                        "suggestArticles": {
                          "id": "dialogflow.projects.locations.conversations.participants.suggestions.suggestArticles",
                          "description": "Gets suggested articles for a participant based on specific historical messages.",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2SuggestArticlesRequest"
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants/{participantsId}/suggestions:suggestArticles",
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2SuggestArticlesResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                              "required": true,
                              "description": "Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`.",
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "path": "v2/{+parent}/suggestions:suggestArticles"
                        }
                      }
                    }
                  },
                  "methods": {
                    "create": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Participant"
                      },
                      "httpMethod": "POST",
                      "path": "v2/{+parent}/participants",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "id": "dialogflow.projects.locations.conversations.participants.create",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Participant"
                      },
                      "description": "Creates a new participant in a conversation.",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "patch": {
                      "id": "dialogflow.projects.locations.conversations.participants.patch",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants/{participantsId}",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Participant"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Participant"
                      },
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`.",
                          "type": "string"
                        },
                        "updateMask": {
                          "location": "query",
                          "description": "Required. The mask to specify which fields to update.",
                          "format": "google-fieldmask",
                          "type": "string"
                        }
                      },
                      "description": "Updates the specified participant."
                    },
                    "get": {
                      "id": "dialogflow.projects.locations.conversations.participants.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants/{participantsId}",
                      "description": "Retrieves a conversation participant.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Participant"
                      },
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the participant. Format: `projects//locations//conversations//participants/`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}"
                    },
                    "analyzeContent": {
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.conversations.participants.analyzeContent",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "participant"
                      ],
                      "path": "v2/{+participant}:analyzeContent",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2AnalyzeContentRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2AnalyzeContentResponse"
                      },
                      "description": "Adds a text (chat, for example), or audio (phone recording, for example) message from a participant into the conversation. Note: Always use agent versions for production traffic sent to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants/{participantsId}:analyzeContent",
                      "parameters": {
                        "participant": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the participant this text comes from. Format: `projects//locations//conversations//participants/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+/participants/[^/]+$",
                          "location": "path"
                        }
                      }
                    },
                    "list": {
                      "id": "dialogflow.projects.locations.conversations.participants.list",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListParticipantsResponse"
                      },
                      "description": "Returns the list of all participants in the specified conversation.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/participants",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/participants",
                      "parameters": {
                        "pageSize": {
                          "location": "query",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "description": "Required. The conversation to list all participants from. Format: `projects//locations//conversations/`."
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "type": "string",
                          "location": "query"
                        }
                      }
                    }
                  }
                },
                "messages": {
                  "methods": {
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/messages",
                      "id": "dialogflow.projects.locations.conversations.messages.list",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListMessagesResponse"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversations/{conversationsId}/messages",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The next_page_token value returned from a previous list request."
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the conversation to list messages for. Format: `projects//locations//conversations/`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/conversations/[^/]+$",
                          "type": "string"
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. Filter on message fields. Currently predicates on `create_time` and `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds accuracy. E.g., `create_time_epoch_microseconds \u003e 1551790877964485` or `create_time \u003e 2017-01-15T01:30:15.01Z`. For more information about filtering, see [API Filtering](https://aip.dev/160).",
                          "location": "query"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in descending order. To fetch updates without duplication, send request with filter `create_time_epoch_microseconds \u003e [first item's create_time of previous request]` and empty page_token.",
                      "httpMethod": "GET"
                    }
                  }
                }
              }
            },
            "agent": {
              "resources": {
                "versions": {
                  "methods": {
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+parent}/versions",
                      "id": "dialogflow.projects.locations.agent.versions.create",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Version"
                      },
                      "httpMethod": "POST",
                      "description": "Creates an agent version. The new version points to the agent instance in the \"default\" environment.",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "required": true,
                          "description": "Required. The agent to create a version for. Supported formats: - `projects//agent` - `projects//locations//agent`"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Version"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/versions",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "patch": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Version"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$",
                          "type": "string",
                          "required": true
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "type": "string",
                          "description": "Required. The mask to control which fields get updated.",
                          "location": "query"
                        }
                      },
                      "id": "dialogflow.projects.locations.agent.versions.patch",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/versions/{versionsId}",
                      "httpMethod": "PATCH",
                      "description": "Updates the specified agent version. Note that this method does not allow you to update the state of the agent the given version points to. It allows you to update only mutable properties of the version resource.",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Version"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}"
                    },
                    "list": {
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The agent to list all versions from. Supported formats: - `projects//agent` - `projects//locations//agent`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "location": "path",
                          "required": true
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        }
                      },
                      "description": "Returns the list of all versions of the specified agent.",
                      "httpMethod": "GET",
                      "id": "dialogflow.projects.locations.agent.versions.list",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/versions",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListVersionsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+parent}/versions"
                    },
                    "delete": {
                      "id": "dialogflow.projects.locations.agent.versions.delete",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Delete the specified agent version.",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/versions/{versionsId}",
                      "httpMethod": "DELETE",
                      "path": "v2/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/versions/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}",
                      "id": "dialogflow.projects.locations.agent.versions.get",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/versions/{versionsId}",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Retrieves the specified agent version.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Version"
                      }
                    }
                  }
                },
                "environments": {
                  "methods": {
                    "delete": {
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}",
                      "id": "dialogflow.projects.locations.agent.environments.delete",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the environment to delete. / Format: - `projects//agent/environments/` - `projects//locations//agent/environments/`"
                        }
                      },
                      "description": "Deletes the specified agent environment.",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "list": {
                      "description": "Returns the list of all non-draft environments of the specified agent.",
                      "path": "v2/{+parent}/environments",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListEnvironmentsResponse"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The agent to list all environments from. Format: - `projects//agent` - `projects//locations//agent`",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "required": true
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.locations.agent.environments.list"
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}",
                      "httpMethod": "PATCH",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Environment"
                      },
                      "parameters": {
                        "allowLoadToDraftAndDiscardChanges": {
                          "description": "Optional. This field is used to prevent accidental overwrite of the draft environment, which is an operation that cannot be undone. To confirm that the caller desires this overwrite, this field must be explicitly set to true when updating the draft environment (environment ID = `-`).",
                          "type": "boolean",
                          "location": "query"
                        },
                        "name": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                          "description": "Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/`"
                        },
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "Required. The mask to control which fields get updated.",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Environment"
                      },
                      "description": "Updates the specified agent environment. This method allows you to deploy new agent versions into the environment. When an environment is pointed to a new agent version by setting `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During that time, the environment keeps on serving the previous version of the agent. After the new agent version is done loading, the environment is set back to the `RUNNING` state. You can use \"-\" as Environment ID in environment name to update version in \"draft\" environment. WARNING: this will negate all recent changes to draft and can't be undone. You may want to save the draft to a version before calling this function.",
                      "id": "dialogflow.projects.locations.agent.environments.patch",
                      "path": "v2/{+name}"
                    },
                    "get": {
                      "id": "dialogflow.projects.locations.agent.environments.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/`"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Environment"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}",
                      "description": "Retrieves the specified agent environment."
                    },
                    "getHistory": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.locations.agent.environments.getHistory",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The name of the environment to retrieve history for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/`",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+$",
                          "required": true,
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "type": "string"
                        },
                        "pageSize": {
                          "format": "int32",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "type": "integer",
                          "location": "query"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/history",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2EnvironmentHistory"
                      },
                      "description": "Gets the history of the specified environment.",
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+parent}/history"
                    },
                    "create": {
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Environment"
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Environment"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Creates an agent environment.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.locations.agent.environments.create",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments",
                      "path": "v2/{+parent}/environments",
                      "parameters": {
                        "environmentId": {
                          "type": "string",
                          "description": "Required. The unique id of the new environment.",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The agent to create an environment for. Supported formats: - `projects//agent` - `projects//locations//agent`",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "location": "path"
                        }
                      }
                    }
                  },
                  "resources": {
                    "users": {
                      "resources": {
                        "sessions": {
                          "resources": {
                            "contexts": {
                              "methods": {
                                "get": {
                                  "description": "Retrieves the specified context.",
                                  "path": "v2/{+name}",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                                  "parameterOrder": [
                                    "name"
                                  ],
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2Context"
                                  },
                                  "httpMethod": "GET",
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "parameters": {
                                    "name": {
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                      "description": "Required. The name of the context. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "location": "path",
                                      "type": "string",
                                      "required": true
                                    }
                                  },
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.contexts.get"
                                },
                                "patch": {
                                  "path": "v2/{+name}",
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2Context"
                                  },
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.contexts.patch",
                                  "request": {
                                    "$ref": "GoogleCloudDialogflowV2Context"
                                  },
                                  "parameterOrder": [
                                    "name"
                                  ],
                                  "parameters": {
                                    "updateMask": {
                                      "location": "query",
                                      "format": "google-fieldmask",
                                      "type": "string",
                                      "description": "Optional. The mask to control which fields get updated."
                                    },
                                    "name": {
                                      "required": true,
                                      "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                      "type": "string",
                                      "location": "path"
                                    }
                                  },
                                  "httpMethod": "PATCH",
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "description": "Updates the specified context."
                                },
                                "list": {
                                  "parameters": {
                                    "parent": {
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                      "description": "Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "required": true,
                                      "type": "string",
                                      "location": "path"
                                    },
                                    "pageSize": {
                                      "location": "query",
                                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "pageToken": {
                                      "location": "query",
                                      "description": "Optional. The next_page_token value returned from a previous list request.",
                                      "type": "string"
                                    }
                                  },
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.contexts.list",
                                  "path": "v2/{+parent}/contexts",
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "httpMethod": "GET",
                                  "parameterOrder": [
                                    "parent"
                                  ],
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                                  "description": "Returns the list of all contexts in the specified session.",
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2ListContextsResponse"
                                  }
                                },
                                "create": {
                                  "parameters": {
                                    "parent": {
                                      "description": "Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                      "required": true,
                                      "type": "string",
                                      "location": "path"
                                    }
                                  },
                                  "parameterOrder": [
                                    "parent"
                                  ],
                                  "httpMethod": "POST",
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2Context"
                                  },
                                  "path": "v2/{+parent}/contexts",
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.contexts.create",
                                  "request": {
                                    "$ref": "GoogleCloudDialogflowV2Context"
                                  },
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "description": "Creates a context. If the specified context already exists, overrides the context.",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts"
                                },
                                "delete": {
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.contexts.delete",
                                  "parameters": {
                                    "name": {
                                      "description": "Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "location": "path",
                                      "required": true,
                                      "type": "string",
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$"
                                    }
                                  },
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                                  "description": "Deletes the specified context.",
                                  "httpMethod": "DELETE",
                                  "path": "v2/{+name}",
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "parameterOrder": [
                                    "name"
                                  ],
                                  "response": {
                                    "$ref": "GoogleProtobufEmpty"
                                  }
                                }
                              }
                            },
                            "entityTypes": {
                              "methods": {
                                "list": {
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes",
                                  "parameterOrder": [
                                    "parent"
                                  ],
                                  "httpMethod": "GET",
                                  "parameters": {
                                    "pageSize": {
                                      "type": "integer",
                                      "format": "int32",
                                      "location": "query",
                                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                                    },
                                    "pageToken": {
                                      "type": "string",
                                      "location": "query",
                                      "description": "Optional. The next_page_token value returned from a previous list request."
                                    },
                                    "parent": {
                                      "description": "Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "required": true,
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                      "type": "string",
                                      "location": "path"
                                    }
                                  },
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.entityTypes.list",
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse"
                                  },
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "description": "Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                                  "path": "v2/{+parent}/entityTypes"
                                },
                                "patch": {
                                  "parameterOrder": [
                                    "name"
                                  ],
                                  "parameters": {
                                    "name": {
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                      "required": true,
                                      "location": "path",
                                      "type": "string",
                                      "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented."
                                    },
                                    "updateMask": {
                                      "location": "query",
                                      "description": "Optional. The mask to control which fields get updated.",
                                      "format": "google-fieldmask",
                                      "type": "string"
                                    }
                                  },
                                  "request": {
                                    "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                                  },
                                  "httpMethod": "PATCH",
                                  "description": "Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                                  "path": "v2/{+name}",
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                                  },
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.entityTypes.patch"
                                },
                                "create": {
                                  "httpMethod": "POST",
                                  "parameterOrder": [
                                    "parent"
                                  ],
                                  "path": "v2/{+parent}/entityTypes",
                                  "request": {
                                    "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                                  },
                                  "description": "Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                                  "parameters": {
                                    "parent": {
                                      "required": true,
                                      "location": "path",
                                      "description": "Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                      "type": "string"
                                    }
                                  },
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.entityTypes.create",
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                                  },
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes"
                                },
                                "get": {
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.entityTypes.get",
                                  "httpMethod": "GET",
                                  "parameters": {
                                    "name": {
                                      "description": "Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                      "required": true,
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                      "location": "path",
                                      "type": "string"
                                    }
                                  },
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                                  "path": "v2/{+name}",
                                  "parameterOrder": [
                                    "name"
                                  ],
                                  "response": {
                                    "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                                  },
                                  "description": "Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ]
                                },
                                "delete": {
                                  "id": "dialogflow.projects.locations.agent.environments.users.sessions.entityTypes.delete",
                                  "scopes": [
                                    "https://www.googleapis.com/auth/cloud-platform",
                                    "https://www.googleapis.com/auth/dialogflow"
                                  ],
                                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                                  "response": {
                                    "$ref": "GoogleProtobufEmpty"
                                  },
                                  "description": "Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                                  "path": "v2/{+name}",
                                  "httpMethod": "DELETE",
                                  "parameters": {
                                    "name": {
                                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                      "type": "string",
                                      "required": true,
                                      "location": "path",
                                      "description": "Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                                    }
                                  },
                                  "parameterOrder": [
                                    "name"
                                  ]
                                }
                              }
                            }
                          },
                          "methods": {
                            "deleteContexts": {
                              "response": {
                                "$ref": "GoogleProtobufEmpty"
                              },
                              "httpMethod": "DELETE",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                              "parameterOrder": [
                                "parent"
                              ],
                              "id": "dialogflow.projects.locations.agent.environments.users.sessions.deleteContexts",
                              "description": "Deletes all active contexts in the specified session.",
                              "path": "v2/{+parent}/contexts",
                              "parameters": {
                                "parent": {
                                  "description": "Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                  "required": true,
                                  "type": "string"
                                }
                              }
                            },
                            "detectIntent": {
                              "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                              "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}:detectIntent",
                              "parameterOrder": [
                                "session"
                              ],
                              "path": "v2/{+session}:detectIntent",
                              "id": "dialogflow.projects.locations.agent.environments.users.sessions.detectIntent",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2DetectIntentResponse"
                              },
                              "parameters": {
                                "session": {
                                  "description": "Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                                  "location": "path",
                                  "required": true,
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/locations/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$"
                                }
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "httpMethod": "POST",
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2DetectIntentRequest"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "intents": {
                  "methods": {
                    "batchDelete": {
                      "description": "Deletes intents in the specified agent. Operation ",
                      "httpMethod": "POST",
                      "path": "v2/{+parent}/intents:batchDelete",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents:batchDelete",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchDeleteIntentsRequest"
                      },
                      "id": "dialogflow.projects.locations.agent.intents.batchDelete",
                      "parameters": {
                        "parent": {
                          "description": "Required. The name of the agent to delete all entities types for. Format: `projects//agent`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      }
                    },
                    "list": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListIntentsResponse"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents",
                      "path": "v2/{+parent}/intents",
                      "description": "Returns the list of all intents in the specified agent.",
                      "id": "dialogflow.projects.locations.agent.intents.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32",
                          "type": "integer",
                          "location": "query"
                        },
                        "languageCode": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                        },
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The next_page_token value returned from a previous list request."
                        },
                        "parent": {
                          "description": "Required. The agent to list all intents from. Format: `projects//agent`.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "location": "path"
                        },
                        "intentView": {
                          "location": "query",
                          "enumDescriptions": [
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ],
                          "type": "string",
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_FULL"
                          ],
                          "description": "Optional. The resource view to apply to the returned intent."
                        }
                      }
                    },
                    "batchUpdate": {
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agent.intents.batchUpdate",
                      "path": "v2/{+parent}/intents:batchUpdate",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents:batchUpdate",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchUpdateIntentsRequest"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the agent to update or create intents in. Format: `projects//agent`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Updates/Creates multiple intents in the specified agent. Operation ",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$",
                          "description": "Required. The name of the intent to delete. If this intent has direct or indirect followup intents, we also delete them. Format: `projects//agent/intents/`.",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents/{intentsId}",
                      "description": "Deletes the specified intent and its direct or indirect followup intents.",
                      "httpMethod": "DELETE",
                      "id": "dialogflow.projects.locations.agent.intents.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}"
                    },
                    "create": {
                      "path": "v2/{+parent}/intents",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Intent"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "intentView": {
                          "type": "string",
                          "description": "Optional. The resource view to apply to the returned intent.",
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_FULL"
                          ],
                          "enumDescriptions": [
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ],
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The agent to create a intent for. Format: `projects//agent`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "location": "path",
                          "required": true
                        },
                        "languageCode": {
                          "location": "query",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Intent"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates an intent in the specified agent.",
                      "id": "dialogflow.projects.locations.agent.intents.create"
                    },
                    "get": {
                      "httpMethod": "GET",
                      "description": "Retrieves the specified intent.",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Intent"
                      },
                      "parameters": {
                        "languageCode": {
                          "type": "string",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                          "location": "query"
                        },
                        "intentView": {
                          "location": "query",
                          "description": "Optional. The resource view to apply to the returned intent.",
                          "type": "string",
                          "enumDescriptions": [
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ],
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_FULL"
                          ]
                        },
                        "name": {
                          "description": "Required. The name of the intent. Format: `projects//agent/intents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "id": "dialogflow.projects.locations.agent.intents.get",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents/{intentsId}",
                      "path": "v2/{+name}"
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/intents/{intentsId}",
                      "id": "dialogflow.projects.locations.agent.intents.patch",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Intent"
                      },
                      "description": "Updates the specified intent.",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Intent"
                      },
                      "parameters": {
                        "languageCode": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                        },
                        "intentView": {
                          "description": "Optional. The resource view to apply to the returned intent.",
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_FULL"
                          ],
                          "enumDescriptions": [
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ],
                          "type": "string",
                          "location": "query"
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The mask to control which fields get updated."
                        },
                        "name": {
                          "type": "string",
                          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/intents/[^/]+$",
                          "location": "path"
                        }
                      }
                    }
                  }
                },
                "entityTypes": {
                  "methods": {
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "languageCode": {
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                          "description": "Required. The name of the entity type. Format: `projects//agent/entityTypes/`."
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Retrieves the specified entity type.",
                      "id": "dialogflow.projects.locations.agent.entityTypes.get",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2EntityType"
                      },
                      "path": "v2/{+name}"
                    },
                    "patch": {
                      "path": "v2/{+name}",
                      "description": "Updates the specified entity type.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "updateMask": {
                          "type": "string",
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "Optional. The mask to control which fields get updated."
                        },
                        "languageCode": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`."
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}",
                      "id": "dialogflow.projects.locations.agent.entityTypes.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2EntityType"
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2EntityType"
                      }
                    },
                    "delete": {
                      "path": "v2/{+name}",
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the entity type to delete. Format: `projects//agent/entityTypes/`."
                        }
                      },
                      "description": "Deletes the specified entity type.",
                      "id": "dialogflow.projects.locations.agent.entityTypes.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "batchUpdate": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes:batchUpdate",
                      "description": "Updates/Creates multiple entity types in the specified agent. Operation ",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.locations.agent.entityTypes.batchUpdate",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v2/{+parent}/entityTypes:batchUpdate",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the agent to update or create entity types in. Format: `projects//agent`."
                        }
                      }
                    },
                    "batchDelete": {
                      "id": "dialogflow.projects.locations.agent.entityTypes.batchDelete",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The name of the agent to delete all entities types for. Format: `projects//agent`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest"
                      },
                      "description": "Deletes entity types in the specified agent. Operation ",
                      "path": "v2/{+parent}/entityTypes:batchDelete",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes:batchDelete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+parent}/entityTypes",
                      "id": "dialogflow.projects.locations.agent.entityTypes.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. The next_page_token value returned from a previous list request."
                        },
                        "parent": {
                          "description": "Required. The agent to list all entity types from. Format: `projects//agent`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "languageCode": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32",
                          "location": "query"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListEntityTypesResponse"
                      },
                      "description": "Returns the list of all entity types in the specified agent.",
                      "httpMethod": "GET"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "POST",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes",
                      "description": "Creates an entity type in the specified agent.",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2EntityType"
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2EntityType"
                      },
                      "parameters": {
                        "languageCode": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent$",
                          "required": true,
                          "description": "Required. The agent to create a entity type for. Format: `projects//agent`.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.locations.agent.entityTypes.create",
                      "path": "v2/{+parent}/entityTypes"
                    }
                  },
                  "resources": {
                    "entities": {
                      "methods": {
                        "batchDelete": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "dialogflow.projects.locations.agent.entityTypes.entities.batchDelete",
                          "path": "v2/{+parent}/entities:batchDelete",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}/entities:batchDelete",
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "location": "path",
                              "description": "Required. The name of the entity type to delete entries for. Format: `projects//agent/entityTypes/`.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$"
                            }
                          },
                          "description": "Deletes entities in the specified entity type. Operation ",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2BatchDeleteEntitiesRequest"
                          },
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "batchCreate": {
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2BatchCreateEntitiesRequest"
                          },
                          "id": "dialogflow.projects.locations.agent.entityTypes.entities.batchCreate",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "httpMethod": "POST",
                          "path": "v2/{+parent}/entities:batchCreate",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                              "type": "string",
                              "description": "Required. The name of the entity type to create entities in. Format: `projects//agent/entityTypes/`.",
                              "location": "path",
                              "required": true
                            }
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}/entities:batchCreate",
                          "description": "Creates multiple new entities in the specified entity type. Operation ",
                          "parameterOrder": [
                            "parent"
                          ]
                        },
                        "batchUpdate": {
                          "httpMethod": "POST",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/entityTypes/{entityTypesId}/entities:batchUpdate",
                          "description": "Updates or creates multiple entities in the specified entity type. This method does not affect entities in the entity type that aren't explicitly specified in the request. Operation ",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2BatchUpdateEntitiesRequest"
                          },
                          "path": "v2/{+parent}/entities:batchUpdate",
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/entityTypes/[^/]+$",
                              "required": true,
                              "type": "string",
                              "description": "Required. The name of the entity type to update or create entities in. Format: `projects//agent/entityTypes/`."
                            }
                          },
                          "id": "dialogflow.projects.locations.agent.entityTypes.entities.batchUpdate"
                        }
                      }
                    }
                  }
                },
                "sessions": {
                  "resources": {
                    "contexts": {
                      "methods": {
                        "get": {
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "description": "Required. The name of the context. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                            }
                          },
                          "id": "dialogflow.projects.locations.agent.sessions.contexts.get",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                          "httpMethod": "GET",
                          "description": "Retrieves the specified context.",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2Context"
                          },
                          "path": "v2/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        },
                        "patch": {
                          "parameters": {
                            "name": {
                              "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                              "location": "path",
                              "required": true,
                              "type": "string"
                            },
                            "updateMask": {
                              "type": "string",
                              "description": "Optional. The mask to control which fields get updated.",
                              "location": "query",
                              "format": "google-fieldmask"
                            }
                          },
                          "id": "dialogflow.projects.locations.agent.sessions.contexts.patch",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2Context"
                          },
                          "path": "v2/{+name}",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2Context"
                          },
                          "description": "Updates the specified context.",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                          "httpMethod": "PATCH",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "httpMethod": "GET",
                          "path": "v2/{+parent}/contexts",
                          "description": "Returns the list of all contexts in the specified session.",
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. The next_page_token value returned from a previous list request."
                            },
                            "parent": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                              "description": "Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "required": true,
                              "location": "path"
                            },
                            "pageSize": {
                              "location": "query",
                              "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                              "type": "integer",
                              "format": "int32"
                            }
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts",
                          "id": "dialogflow.projects.locations.agent.sessions.contexts.list",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2ListContextsResponse"
                          }
                        },
                        "create": {
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2Context"
                          },
                          "path": "v2/{+parent}/contexts",
                          "parameters": {
                            "parent": {
                              "required": true,
                              "location": "path",
                              "description": "Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                              "type": "string"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Creates a context. If the specified context already exists, overrides the context.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2Context"
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts",
                          "id": "dialogflow.projects.locations.agent.sessions.contexts.create"
                        },
                        "delete": {
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                          "httpMethod": "DELETE",
                          "path": "v2/{+name}",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                              "type": "string",
                              "required": true,
                              "description": "Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "location": "path"
                            }
                          },
                          "id": "dialogflow.projects.locations.agent.sessions.contexts.delete",
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Deletes the specified context."
                        }
                      }
                    },
                    "entityTypes": {
                      "methods": {
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.locations.agent.sessions.entityTypes.list",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse"
                          },
                          "path": "v2/{+parent}/entityTypes",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/entityTypes",
                          "httpMethod": "GET",
                          "parameters": {
                            "pageSize": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                              "location": "query"
                            },
                            "pageToken": {
                              "description": "Optional. The next_page_token value returned from a previous list request.",
                              "location": "query",
                              "type": "string"
                            },
                            "parent": {
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$",
                              "type": "string",
                              "description": "Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration."
                        },
                        "get": {
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$"
                            }
                          },
                          "httpMethod": "GET",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.locations.agent.sessions.entityTypes.get",
                          "description": "Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                          "path": "v2/{+name}"
                        },
                        "create": {
                          "path": "v2/{+parent}/entityTypes",
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/entityTypes",
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameters": {
                            "parent": {
                              "required": true,
                              "location": "path",
                              "description": "Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$"
                            }
                          },
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "dialogflow.projects.locations.agent.sessions.entityTypes.create",
                          "description": "Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration."
                        },
                        "patch": {
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                          },
                          "path": "v2/{+name}",
                          "parameters": {
                            "name": {
                              "required": true,
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                              "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
                              "location": "path"
                            },
                            "updateMask": {
                              "format": "google-fieldmask",
                              "type": "string",
                              "location": "query",
                              "description": "Optional. The mask to control which fields get updated."
                            }
                          },
                          "id": "dialogflow.projects.locations.agent.sessions.entityTypes.patch",
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "httpMethod": "PATCH",
                          "description": "Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                          "parameterOrder": [
                            "name"
                          ]
                        },
                        "delete": {
                          "httpMethod": "DELETE",
                          "id": "dialogflow.projects.locations.agent.sessions.entityTypes.delete",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v2/{+name}",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                              "required": true,
                              "location": "path",
                              "description": "Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                            }
                          },
                          "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                          "description": "Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ]
                        }
                      }
                    }
                  },
                  "methods": {
                    "detectIntent": {
                      "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                      "parameters": {
                        "session": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "session"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2DetectIntentResponse"
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2DetectIntentRequest"
                      },
                      "id": "dialogflow.projects.locations.agent.sessions.detectIntent",
                      "path": "v2/{+session}:detectIntent",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}:detectIntent"
                    },
                    "deleteContexts": {
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/contexts",
                      "id": "dialogflow.projects.locations.agent.sessions.deleteContexts",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/sessions/{sessionsId}/contexts",
                      "description": "Deletes all active contexts in the specified session.",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/agent/sessions/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "restore": {
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2RestoreAgentRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The project that the agent to restore is associated with. Format: `projects/`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent:restore",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the intents and entity types in the older version are deleted. After the restore, the restored draft agent will be trained automatically (unless disabled in agent settings). However, once the restore is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. Operation An operation which tracks when restoring is complete. It only tracks when the draft agent is updated not when it is done training.",
                  "id": "dialogflow.projects.locations.agent.restore",
                  "path": "v2/{+parent}/agent:restore"
                },
                "export": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The project that the agent to export is associated with. Format: `projects/`."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dialogflow.projects.locations.agent.export",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent:export",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2ExportAgentRequest"
                  },
                  "description": "Exports the specified agent to a ZIP file. Operation ",
                  "path": "v2/{+parent}/agent:export",
                  "httpMethod": "POST"
                },
                "getValidationResult": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/validationResult",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ValidationResult"
                  },
                  "path": "v2/{+parent}/agent/validationResult",
                  "description": "Gets agent validation result. Agent validation is performed during training time and is updated automatically when training is completed.",
                  "id": "dialogflow.projects.locations.agent.getValidationResult",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The project that the agent is associated with. Format: `projects/`."
                    },
                    "languageCode": {
                      "description": "Optional. The language for which you want a validation result. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "train": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/agent:train",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The project that the agent to train is associated with. Format: `projects/`."
                    }
                  },
                  "id": "dialogflow.projects.locations.agent.train",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent:train",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "description": "Trains the specified agent. Operation ",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2TrainAgentRequest"
                  }
                },
                "updateFulfillment": {
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/fulfillment",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "dialogflow.projects.locations.agent.updateFulfillment",
                  "path": "v2/{+name}",
                  "description": "Updates the fulfillment.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Fulfillment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for Fulfillment in an Environment.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/fulfillment$"
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "PATCH",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Fulfillment"
                  }
                },
                "import": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The project that the agent to import is associated with. Format: `projects/`.",
                      "required": true
                    }
                  },
                  "id": "dialogflow.projects.locations.agent.import",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent:import",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2ImportAgentRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v2/{+parent}/agent:import",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "description": "Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the existing ones. Intents and entity types with the same name are replaced with the new versions from ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless disabled in agent settings). However, once the import is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. Operation An operation which tracks when importing is complete. It only tracks when the draft agent is updated not when it is done training."
                },
                "search": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2SearchAgentsResponse"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent:search",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "format": "int32"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The project to list agents from. Format: `projects/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous list request.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Returns the list of agents. Since there is at most one conversational agent per project, this method is useful primarily for listing all agents across projects the caller has access to. One can achieve that with a wildcard project collection id \"-\". Refer to [List Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).",
                  "path": "v2/{+parent}/agent:search",
                  "id": "dialogflow.projects.locations.agent.search",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "getFulfillment": {
                  "description": "Retrieves the fulfillment.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+name}",
                  "id": "dialogflow.projects.locations.agent.getFulfillment",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the fulfillment. Format: `projects//agent/fulfillment`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/agent/fulfillment$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Fulfillment"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/agent/fulfillment"
                }
              }
            },
            "conversationProfiles": {
              "methods": {
                "create": {
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2ConversationProfile"
                  },
                  "description": "Creates a conversation profile in the specified project. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dialogflow.projects.locations.conversationProfiles.create",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversationProfiles",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project to create a conversation profile for. Format: `projects//locations/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ConversationProfile"
                  },
                  "path": "v2/{+parent}/conversationProfiles",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "get": {
                  "id": "dialogflow.projects.locations.conversationProfiles.get",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ConversationProfile"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversationProfiles/{conversationProfilesId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$"
                    }
                  },
                  "description": "Retrieves the specified conversation profile.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "httpMethod": "GET"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversationProfiles",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListConversationProfilesResponse"
                  },
                  "path": "v2/{+parent}/conversationProfiles",
                  "id": "dialogflow.projects.locations.conversationProfiles.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "type": "integer"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The project to list all conversation profiles from. Format: `projects//locations/`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous list request.",
                      "location": "query"
                    }
                  },
                  "description": "Returns the list of all conversation profiles in the specified project."
                },
                "patch": {
                  "path": "v2/{+name}",
                  "id": "dialogflow.projects.locations.conversationProfiles.patch",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ConversationProfile"
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2ConversationProfile"
                  },
                  "parameters": {
                    "name": {
                      "description": "The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "format": "google-fieldmask",
                      "description": "Required. The mask to control which fields to update.",
                      "location": "query"
                    }
                  },
                  "description": "Updates the specified conversation profile. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API.",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversationProfiles/{conversationProfilesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/conversationProfiles/{conversationProfilesId}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "httpMethod": "DELETE",
                  "id": "dialogflow.projects.locations.conversationProfiles.delete",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the conversation profile to delete. Format: `projects//locations//conversationProfiles/`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/conversationProfiles/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "description": "Deletes the specified conversation profile.",
                  "path": "v2/{+name}"
                }
              }
            },
            "knowledgeBases": {
              "methods": {
                "get": {
                  "path": "v2/{+name}",
                  "id": "dialogflow.projects.locations.knowledgeBases.get",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Retrieves the specified knowledge base.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`.",
                      "type": "string"
                    }
                  }
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.knowledgeBases.list",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListKnowledgeBasesResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases",
                  "httpMethod": "GET",
                  "description": "Returns the list of all knowledge bases of the specified agent.",
                  "path": "v2/{+parent}/knowledgeBases",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "The next_page_token value returned from a previous list request.",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of items to return in a single page. By default 10 and at most 100.",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The project to list of knowledge bases for. Format: `projects//locations/`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "create": {
                  "id": "dialogflow.projects.locations.knowledgeBases.create",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The project to create a knowledge base for. Format: `projects//locations/`."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases",
                  "description": "Creates a knowledge base.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "path": "v2/{+parent}/knowledgeBases",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  }
                },
                "patch": {
                  "path": "v2/{+name}",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the specified knowledge base.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "id": "dialogflow.projects.locations.knowledgeBases.patch",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                      "description": "The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`.",
                      "type": "string",
                      "location": "path"
                    },
                    "updateMask": {
                      "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}",
                  "description": "Deletes the specified knowledge base.",
                  "id": "dialogflow.projects.locations.knowledgeBases.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "path": "v2/{+name}",
                  "parameters": {
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base are also deleted."
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                }
              },
              "resources": {
                "documents": {
                  "methods": {
                    "reload": {
                      "path": "v2/{+name}:reload",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2ReloadDocumentRequest"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}:reload",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/`",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$"
                        }
                      },
                      "description": "Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the document has not changed, there still may be side effects because of internal implementation changes. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`. Operation ",
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.reload",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "list": {
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$",
                          "description": "Required. The knowledge base to list all documents for. Format: `projects//locations//knowledgeBases/`.",
                          "location": "path"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "The maximum number of items to return in a single page. By default 10 and at most 100.",
                          "format": "int32"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "The next_page_token value returned from a previous list request.",
                          "location": "query"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Returns the list of all documents of the knowledge base.",
                      "path": "v2/{+parent}/documents",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListDocumentsResponse"
                      },
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.list"
                    },
                    "get": {
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.get",
                      "description": "Retrieves the specified document.",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the document to retrieve. Format `projects//locations//knowledgeBases//documents/`."
                        }
                      },
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      },
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                      "httpMethod": "GET"
                    },
                    "create": {
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.create",
                      "path": "v2/{+parent}/documents",
                      "httpMethod": "POST",
                      "description": "Creates a new document. Operation ",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      }
                    },
                    "patch": {
                      "description": "Updates the specified document. Operation ",
                      "parameters": {
                        "name": {
                          "description": "Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$"
                        },
                        "updateMask": {
                          "location": "query",
                          "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.",
                          "format": "google-fieldmask",
                          "type": "string"
                        }
                      },
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.patch",
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                      "httpMethod": "PATCH",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "delete": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}",
                      "description": "Deletes the specified document. Operation ",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the document to delete. Format: `projects//locations//knowledgeBases//documents/`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/knowledgeBases/[^/]+/documents/[^/]+$"
                        }
                      },
                      "id": "dialogflow.projects.locations.knowledgeBases.documents.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}"
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "id": "dialogflow.projects.locations.operations.cancel",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "httpMethod": "POST",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "path": "v2/{+name}:cancel"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "path": "v2/{+name}",
                  "id": "dialogflow.projects.locations.operations.get",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource."
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameters": {
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "description": "The standard list page size.",
                      "format": "int32"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The standard list filter.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "path": "v2/{+name}/operations",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET"
                }
              }
            },
            "answerRecords": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "description": "Returns the list of all answer records in the specified project in reverse chronological order.",
                  "id": "dialogflow.projects.locations.answerRecords.list",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list request used to continue listing on the next page.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "description": "Required. Filters to restrict results to specific answer records. Filter on answer record type. Currently predicates on `type` is supported, valid values are `ARTICLE_ANSWER`, `FAQ_ANSWER`. For more information about filtering, see [API Filtering](https://aip.dev/160).",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The project to list all answer records for in reverse chronological order. Format: `projects//locations/`.",
                      "location": "path",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of records to return in a single page. The server may return fewer records than this. If unspecified, we use 10. The maximum is 100.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/answerRecords",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListAnswerRecordsResponse"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/answerRecords",
                  "httpMethod": "GET"
                },
                "patch": {
                  "id": "dialogflow.projects.locations.answerRecords.patch",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2AnswerRecord"
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/answerRecords/{answerRecordsId}",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2AnswerRecord"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "description": "Updates the specified answer record.",
                  "path": "v2/{+name}",
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The unique identifier of this answer record. Format: `projects//locations//answerRecords/`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/answerRecords/[^/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Required. The mask to control which fields get updated.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "conversationProfiles": {
          "methods": {
            "create": {
              "path": "v2/{+parent}/conversationProfiles",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "id": "dialogflow.projects.conversationProfiles.create",
              "httpMethod": "POST",
              "flatPath": "v2/projects/{projectsId}/conversationProfiles",
              "request": {
                "$ref": "GoogleCloudDialogflowV2ConversationProfile"
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2ConversationProfile"
              },
              "description": "Creates a conversation profile in the specified project. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API.",
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "description": "Required. The project to create a conversation profile for. Format: `projects//locations/`.",
                  "required": true
                }
              }
            },
            "get": {
              "response": {
                "$ref": "GoogleCloudDialogflowV2ConversationProfile"
              },
              "path": "v2/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/conversationProfiles/[^/]+$"
                }
              },
              "id": "dialogflow.projects.conversationProfiles.get",
              "flatPath": "v2/projects/{projectsId}/conversationProfiles/{conversationProfilesId}",
              "description": "Retrieves the specified conversation profile.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ]
            },
            "patch": {
              "path": "v2/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "request": {
                "$ref": "GoogleCloudDialogflowV2ConversationProfile"
              },
              "id": "dialogflow.projects.conversationProfiles.patch",
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GoogleCloudDialogflowV2ConversationProfile"
              },
              "flatPath": "v2/projects/{projectsId}/conversationProfiles/{conversationProfilesId}",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/conversationProfiles/[^/]+$",
                  "description": "The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`.",
                  "type": "string"
                },
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "Required. The mask to control which fields to update."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Updates the specified conversation profile. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API."
            },
            "list": {
              "description": "Returns the list of all conversation profiles in the specified project.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "id": "dialogflow.projects.conversationProfiles.list",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2ListConversationProfilesResponse"
              },
              "path": "v2/{+parent}/conversationProfiles",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The next_page_token value returned from a previous list request."
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of items to return in a single page. By default 100 and at most 1000.",
                  "location": "query"
                },
                "parent": {
                  "description": "Required. The project to list all conversation profiles from. Format: `projects//locations/`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                }
              },
              "flatPath": "v2/projects/{projectsId}/conversationProfiles"
            },
            "delete": {
              "id": "dialogflow.projects.conversationProfiles.delete",
              "httpMethod": "DELETE",
              "flatPath": "v2/projects/{projectsId}/conversationProfiles/{conversationProfilesId}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+/conversationProfiles/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the conversation profile to delete. Format: `projects//locations//conversationProfiles/`."
                }
              },
              "path": "v2/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "description": "Deletes the specified conversation profile.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              }
            }
          }
        },
        "operations": {
          "methods": {
            "list": {
              "id": "dialogflow.projects.operations.list",
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The standard list page token."
                },
                "filter": {
                  "description": "The standard list filter.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The standard list page size.",
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "The name of the operation's parent resource."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "path": "v2/{+name}/operations",
              "flatPath": "v2/projects/{projectsId}/operations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ]
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "The name of the operation resource.",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "required": true
                }
              },
              "flatPath": "v2/projects/{projectsId}/operations/{operationsId}",
              "httpMethod": "GET",
              "id": "dialogflow.projects.operations.get",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "path": "v2/{+name}"
            },
            "cancel": {
              "flatPath": "v2/projects/{projectsId}/operations/{operationsId}:cancel",
              "httpMethod": "POST",
              "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the operation resource to be cancelled.",
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "path": "v2/{+name}:cancel",
              "id": "dialogflow.projects.operations.cancel"
            }
          }
        },
        "agent": {
          "resources": {
            "knowledgeBases": {
              "methods": {
                "get": {
                  "id": "dialogflow.projects.agent.knowledgeBases.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "description": "Retrieves the specified knowledge base.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the knowledge base to retrieve. Format `projects//locations//knowledgeBases/`."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}"
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}",
                  "httpMethod": "PATCH",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "id": "dialogflow.projects.agent.knowledgeBases.patch",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields."
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "description": "Updates the specified knowledge base.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+name}"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The project to create a knowledge base for. Format: `projects//locations/`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent$",
                      "required": true
                    }
                  },
                  "id": "dialogflow.projects.agent.knowledgeBases.create",
                  "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases",
                  "description": "Creates a knowledge base.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/knowledgeBases"
                },
                "delete": {
                  "description": "Deletes the specified knowledge base.",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the knowledge base to delete. Format: `projects//locations//knowledgeBases/`.",
                      "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "force": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base are also deleted."
                    }
                  },
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.agent.knowledgeBases.delete",
                  "httpMethod": "DELETE",
                  "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}"
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListKnowledgeBasesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The project to list of knowledge bases for. Format: `projects//locations/`.",
                      "pattern": "^projects/[^/]+/agent$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous list request.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of items to return in a single page. By default 10 and at most 100.",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "path": "v2/{+parent}/knowledgeBases",
                  "id": "dialogflow.projects.agent.knowledgeBases.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "description": "Returns the list of all knowledge bases of the specified agent."
                }
              },
              "resources": {
                "documents": {
                  "methods": {
                    "get": {
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the document to retrieve. Format `projects//locations//knowledgeBases//documents/`."
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Retrieves the specified document.",
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.get",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                      "path": "v2/{+name}"
                    },
                    "patch": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Updates the specified document. Operation ",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.",
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$",
                          "location": "path"
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.patch",
                      "httpMethod": "PATCH",
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      }
                    },
                    "create": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents",
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Document"
                      },
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.create",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+$",
                          "required": true,
                          "description": "Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`."
                        }
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+parent}/documents",
                      "description": "Creates a new document. Operation "
                    },
                    "delete": {
                      "path": "v2/{+name}",
                      "httpMethod": "DELETE",
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.delete",
                      "description": "Deletes the specified document. Operation ",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The name of the document to delete. Format: `projects//locations//knowledgeBases//documents/`.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "reload": {
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2ReloadDocumentRequest"
                      },
                      "description": "Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the document has not changed, there still may be side effects because of internal implementation changes. Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`. Operation ",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents/{documentsId}:reload",
                      "httpMethod": "POST",
                      "path": "v2/{+name}:reload",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+/documents/[^/]+$",
                          "required": true,
                          "description": "Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/`"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.reload"
                    },
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListDocumentsResponse"
                      },
                      "id": "dialogflow.projects.agent.knowledgeBases.documents.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The knowledge base to list all documents for. Format: `projects//locations//knowledgeBases/`.",
                          "pattern": "^projects/[^/]+/agent/knowledgeBases/[^/]+$"
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "The maximum number of items to return in a single page. By default 10 and at most 100.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "description": "Returns the list of all documents of the knowledge base.",
                      "flatPath": "v2/projects/{projectsId}/agent/knowledgeBases/{knowledgeBasesId}/documents",
                      "path": "v2/{+parent}/documents"
                    }
                  }
                }
              }
            },
            "entityTypes": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "description": "Retrieves the specified entity type.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "id": "dialogflow.projects.agent.entityTypes.get",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the entity type. Format: `projects//agent/entityTypes/`.",
                      "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "languageCode": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  }
                },
                "batchUpdate": {
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes:batchUpdate",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest"
                  },
                  "path": "v2/{+parent}/entityTypes:batchUpdate",
                  "id": "dialogflow.projects.agent.entityTypes.batchUpdate",
                  "description": "Updates/Creates multiple entity types in the specified agent. Operation ",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The name of the agent to update or create entity types in. Format: `projects//agent`.",
                      "pattern": "^projects/[^/]+/agent$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/agent$",
                      "type": "string",
                      "description": "Required. The agent to list all entity types from. Format: `projects//agent`.",
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous list request."
                    },
                    "languageCode": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                    }
                  },
                  "path": "v2/{+parent}/entityTypes",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "id": "dialogflow.projects.agent.entityTypes.list",
                  "description": "Returns the list of all entity types in the specified agent.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListEntityTypesResponse"
                  }
                },
                "batchDelete": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Deletes entity types in the specified agent. Operation ",
                  "id": "dialogflow.projects.agent.entityTypes.batchDelete",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the agent to delete all entities types for. Format: `projects//agent`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v2/{+parent}/entityTypes:batchDelete",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes:batchDelete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  }
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "id": "dialogflow.projects.agent.entityTypes.create",
                  "description": "Creates an entity type in the specified agent.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The agent to create a entity type for. Format: `projects//agent`.",
                      "pattern": "^projects/[^/]+/agent$"
                    },
                    "languageCode": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v2/{+parent}/entityTypes",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "httpMethod": "PATCH",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "parameters": {
                    "languageCode": {
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "type": "string",
                      "location": "query"
                    },
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Optional. The mask to control which fields get updated."
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$"
                    }
                  },
                  "description": "Updates the specified entity type.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.agent.entityTypes.patch",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}",
                  "id": "dialogflow.projects.agent.entityTypes.delete",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the entity type to delete. Format: `projects//agent/entityTypes/`.",
                      "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$"
                    }
                  },
                  "description": "Deletes the specified entity type."
                }
              },
              "resources": {
                "entities": {
                  "methods": {
                    "batchUpdate": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}/entities:batchUpdate",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.agent.entityTypes.entities.batchUpdate",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The name of the entity type to update or create entities in. Format: `projects//agent/entityTypes/`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                          "required": true
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchUpdateEntitiesRequest"
                      },
                      "description": "Updates or creates multiple entities in the specified entity type. This method does not affect entities in the entity type that aren't explicitly specified in the request. Operation ",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v2/{+parent}/entities:batchUpdate",
                      "httpMethod": "POST"
                    },
                    "batchDelete": {
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.agent.entityTypes.entities.batchDelete",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "path": "v2/{+parent}/entities:batchDelete",
                      "description": "Deletes entities in the specified entity type. Operation ",
                      "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}/entities:batchDelete",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the entity type to delete entries for. Format: `projects//agent/entityTypes/`."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchDeleteEntitiesRequest"
                      }
                    },
                    "batchCreate": {
                      "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}/entities:batchCreate",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the entity type to create entities in. Format: `projects//agent/entityTypes/`."
                        }
                      },
                      "path": "v2/{+parent}/entities:batchCreate",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "description": "Creates multiple new entities in the specified entity type. Operation ",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchCreateEntitiesRequest"
                      },
                      "id": "dialogflow.projects.agent.entityTypes.entities.batchCreate"
                    }
                  }
                }
              }
            },
            "environments": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/environments",
                  "description": "Returns the list of all non-draft environments of the specified agent.",
                  "flatPath": "v2/projects/{projectsId}/agent/environments",
                  "parameters": {
                    "parent": {
                      "description": "Required. The agent to list all environments from. Format: - `projects//agent` - `projects//locations//agent`",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$",
                      "required": true
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "id": "dialogflow.projects.agent.environments.list",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListEnvironmentsResponse"
                  }
                },
                "delete": {
                  "path": "v2/{+name}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/environments/[^/]+$",
                      "description": "Required. The name of the environment to delete. / Format: - `projects//agent/environments/` - `projects//locations//agent/environments/`",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.agent.environments.delete",
                  "description": "Deletes the specified agent environment.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Environment"
                  },
                  "path": "v2/{+name}",
                  "parameters": {
                    "allowLoadToDraftAndDiscardChanges": {
                      "type": "boolean",
                      "description": "Optional. This field is used to prevent accidental overwrite of the draft environment, which is an operation that cannot be undone. To confirm that the caller desires this overwrite, this field must be explicitly set to true when updating the draft environment (environment ID = `-`).",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "description": "Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/`",
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent/environments/[^/]+$",
                      "required": true
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "Required. The mask to control which fields get updated.",
                      "location": "query",
                      "format": "google-fieldmask"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Environment"
                  },
                  "httpMethod": "PATCH",
                  "description": "Updates the specified agent environment. This method allows you to deploy new agent versions into the environment. When an environment is pointed to a new agent version by setting `environment.agent_version`, the environment is temporarily set to the `LOADING` state. During that time, the environment keeps on serving the previous version of the agent. After the new agent version is done loading, the environment is set back to the `RUNNING` state. You can use \"-\" as Environment ID in environment name to update version in \"draft\" environment. WARNING: this will negate all recent changes to draft and can't be undone. You may want to save the draft to a version before calling this function.",
                  "id": "dialogflow.projects.agent.environments.patch",
                  "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "getHistory": {
                  "path": "v2/{+parent}/history",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "type": "integer",
                      "location": "query",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent/environments/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the environment to retrieve history for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/`"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "dialogflow.projects.agent.environments.getHistory",
                  "description": "Gets the history of the specified environment.",
                  "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/history",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2EnvironmentHistory"
                  }
                },
                "get": {
                  "path": "v2/{+name}",
                  "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}",
                  "id": "dialogflow.projects.agent.environments.get",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/agent/environments/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Environment"
                  },
                  "httpMethod": "GET",
                  "description": "Retrieves the specified agent environment.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Environment"
                  },
                  "description": "Creates an agent environment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v2/{+parent}/environments",
                  "id": "dialogflow.projects.agent.environments.create",
                  "flatPath": "v2/projects/{projectsId}/agent/environments",
                  "parameters": {
                    "environmentId": {
                      "location": "query",
                      "description": "Required. The unique id of the new environment.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent$",
                      "description": "Required. The agent to create an environment for. Supported formats: - `projects//agent` - `projects//locations//agent`",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Environment"
                  }
                }
              },
              "resources": {
                "users": {
                  "resources": {
                    "sessions": {
                      "methods": {
                        "deleteContexts": {
                          "description": "Deletes all active contexts in the specified session.",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                          "id": "dialogflow.projects.agent.environments.users.sessions.deleteContexts",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "parameters": {
                            "parent": {
                              "location": "path",
                              "type": "string",
                              "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                              "description": "Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "required": true
                            }
                          },
                          "httpMethod": "DELETE",
                          "parameterOrder": [
                            "parent"
                          ],
                          "path": "v2/{+parent}/contexts"
                        },
                        "detectIntent": {
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2DetectIntentRequest"
                          },
                          "path": "v2/{+session}:detectIntent",
                          "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2DetectIntentResponse"
                          },
                          "parameterOrder": [
                            "session"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}:detectIntent",
                          "id": "dialogflow.projects.agent.environments.users.sessions.detectIntent",
                          "parameters": {
                            "session": {
                              "description": "Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                              "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "required": true
                            }
                          }
                        }
                      },
                      "resources": {
                        "contexts": {
                          "methods": {
                            "get": {
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "parameters": {
                                "name": {
                                  "location": "path",
                                  "description": "Required. The name of the context. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                  "required": true
                                }
                              },
                              "description": "Retrieves the specified context.",
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.get",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "path": "v2/{+name}",
                              "httpMethod": "GET",
                              "parameterOrder": [
                                "name"
                              ]
                            },
                            "delete": {
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "parameters": {
                                "name": {
                                  "description": "Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                  "type": "string",
                                  "required": true,
                                  "location": "path"
                                }
                              },
                              "parameterOrder": [
                                "name"
                              ],
                              "httpMethod": "DELETE",
                              "path": "v2/{+name}",
                              "description": "Deletes the specified context.",
                              "response": {
                                "$ref": "GoogleProtobufEmpty"
                              },
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.delete",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}"
                            },
                            "create": {
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.create",
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "path": "v2/{+parent}/contexts",
                              "parameters": {
                                "parent": {
                                  "required": true,
                                  "location": "path",
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                  "description": "Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                                }
                              },
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "description": "Creates a context. If the specified context already exists, overrides the context.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "httpMethod": "POST",
                              "parameterOrder": [
                                "parent"
                              ]
                            },
                            "list": {
                              "parameters": {
                                "parent": {
                                  "description": "Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "location": "path",
                                  "required": true,
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                  "type": "string"
                                },
                                "pageSize": {
                                  "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                                  "location": "query",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "pageToken": {
                                  "type": "string",
                                  "location": "query",
                                  "description": "Optional. The next_page_token value returned from a previous list request."
                                }
                              },
                              "path": "v2/{+parent}/contexts",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.list",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2ListContextsResponse"
                              },
                              "httpMethod": "GET",
                              "description": "Returns the list of all contexts in the specified session.",
                              "parameterOrder": [
                                "parent"
                              ]
                            },
                            "patch": {
                              "path": "v2/{+name}",
                              "description": "Updates the specified context.",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "httpMethod": "PATCH",
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.patch",
                              "parameterOrder": [
                                "name"
                              ],
                              "parameters": {
                                "updateMask": {
                                  "location": "query",
                                  "format": "google-fieldmask",
                                  "type": "string",
                                  "description": "Optional. The mask to control which fields get updated."
                                },
                                "name": {
                                  "required": true,
                                  "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                  "type": "string",
                                  "location": "path"
                                }
                              },
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ]
                            }
                          }
                        },
                        "entityTypes": {
                          "methods": {
                            "delete": {
                              "description": "Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "response": {
                                "$ref": "GoogleProtobufEmpty"
                              },
                              "path": "v2/{+name}",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "parameterOrder": [
                                "name"
                              ],
                              "parameters": {
                                "name": {
                                  "required": true,
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                  "description": "Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "type": "string",
                                  "location": "path"
                                }
                              },
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.delete",
                              "httpMethod": "DELETE"
                            },
                            "create": {
                              "path": "v2/{+parent}/entityTypes",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "parameters": {
                                "parent": {
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                  "type": "string",
                                  "location": "path",
                                  "description": "Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "required": true
                                }
                              },
                              "httpMethod": "POST",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "parameterOrder": [
                                "parent"
                              ],
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.create",
                              "description": "Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration."
                            },
                            "list": {
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse"
                              },
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.list",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "path": "v2/{+parent}/entityTypes",
                              "parameters": {
                                "pageSize": {
                                  "format": "int32",
                                  "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                                  "location": "query",
                                  "type": "integer"
                                },
                                "pageToken": {
                                  "location": "query",
                                  "type": "string",
                                  "description": "Optional. The next_page_token value returned from a previous list request."
                                },
                                "parent": {
                                  "type": "string",
                                  "required": true,
                                  "description": "Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$"
                                }
                              },
                              "parameterOrder": [
                                "parent"
                              ],
                              "httpMethod": "GET",
                              "description": "Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration."
                            },
                            "patch": {
                              "parameterOrder": [
                                "name"
                              ],
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "httpMethod": "PATCH",
                              "path": "v2/{+name}",
                              "description": "Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.patch",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "parameters": {
                                "updateMask": {
                                  "type": "string",
                                  "description": "Optional. The mask to control which fields get updated.",
                                  "location": "query",
                                  "format": "google-fieldmask"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                  "location": "path",
                                  "required": true
                                }
                              }
                            },
                            "get": {
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.get",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "parameterOrder": [
                                "name"
                              ],
                              "httpMethod": "GET",
                              "parameters": {
                                "name": {
                                  "required": true,
                                  "type": "string",
                                  "description": "Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                  "location": "path"
                                }
                              },
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "description": "Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                              "path": "v2/{+name}"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "intents": {
                  "methods": {
                    "list": {
                      "id": "dialogflow.projects.agent.environments.intents.list",
                      "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/intents",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListIntentsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. The agent to list all intents from. Format: `projects//agent`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/agent/environments/[^/]+$"
                        },
                        "intentView": {
                          "type": "string",
                          "enum": [
                            "INTENT_VIEW_UNSPECIFIED",
                            "INTENT_VIEW_FULL"
                          ],
                          "location": "query",
                          "enumDescriptions": [
                            "Training phrases field is not populated in the response.",
                            "All fields are populated."
                          ],
                          "description": "Optional. The resource view to apply to the returned intent."
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32"
                        },
                        "languageCode": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                        }
                      },
                      "description": "Returns the list of all intents in the specified agent.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/intents",
                      "httpMethod": "GET"
                    }
                  }
                }
              }
            },
            "intents": {
              "methods": {
                "batchUpdate": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/intents:batchUpdate",
                  "flatPath": "v2/projects/{projectsId}/agent/intents:batchUpdate",
                  "id": "dialogflow.projects.agent.intents.batchUpdate",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The name of the agent to update or create intents in. Format: `projects//agent`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/agent$",
                      "location": "path"
                    }
                  },
                  "description": "Updates/Creates multiple intents in the specified agent. Operation ",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchUpdateIntentsRequest"
                  }
                },
                "batchDelete": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "description": "Deletes intents in the specified agent. Operation ",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "dialogflow.projects.agent.intents.batchDelete",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchDeleteIntentsRequest"
                  },
                  "path": "v2/{+parent}/intents:batchDelete",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the agent to delete all entities types for. Format: `projects//agent`.",
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent$",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/agent/intents:batchDelete"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The agent to create a intent for. Format: `projects//agent`."
                    },
                    "intentView": {
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "type": "string",
                      "description": "Optional. The resource view to apply to the returned intent.",
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ],
                      "location": "query"
                    },
                    "languageCode": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v2/{+parent}/intents",
                  "id": "dialogflow.projects.agent.intents.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "description": "Creates an intent in the specified agent.",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/intents"
                },
                "get": {
                  "description": "Retrieves the specified intent.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.agent.intents.get",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/intents/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the intent. Format: `projects//agent/intents/`.",
                      "location": "path"
                    },
                    "intentView": {
                      "location": "query",
                      "description": "Optional. The resource view to apply to the returned intent.",
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "type": "string",
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ]
                    },
                    "languageCode": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/intents/{intentsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}"
                },
                "list": {
                  "id": "dialogflow.projects.agent.intents.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Returns the list of all intents in the specified agent.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListIntentsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                    },
                    "languageCode": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                    },
                    "intentView": {
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ],
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "location": "query",
                      "description": "Optional. The resource view to apply to the returned intent.",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The agent to list all intents from. Format: `projects//agent`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/intents",
                  "path": "v2/{+parent}/intents"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Updates the specified intent.",
                  "parameters": {
                    "updateMask": {
                      "format": "google-fieldmask",
                      "location": "query",
                      "description": "Optional. The mask to control which fields get updated.",
                      "type": "string"
                    },
                    "languageCode": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                    },
                    "intentView": {
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ],
                      "type": "string",
                      "description": "Optional. The resource view to apply to the returned intent.",
                      "location": "query"
                    },
                    "name": {
                      "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/intents/[^/]+$"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/intents/{intentsId}",
                  "path": "v2/{+name}",
                  "id": "dialogflow.projects.agent.intents.patch",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "httpMethod": "PATCH"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v2/{+name}",
                  "id": "dialogflow.projects.agent.intents.delete",
                  "httpMethod": "DELETE",
                  "description": "Deletes the specified intent and its direct or indirect followup intents.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/intents/{intentsId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the intent to delete. If this intent has direct or indirect followup intents, we also delete them. Format: `projects//agent/intents/`.",
                      "pattern": "^projects/[^/]+/agent/intents/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                }
              }
            },
            "sessions": {
              "methods": {
                "detectIntent": {
                  "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2DetectIntentResponse"
                  },
                  "parameterOrder": [
                    "session"
                  ],
                  "parameters": {
                    "session": {
                      "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                      "description": "Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+session}:detectIntent",
                  "id": "dialogflow.projects.agent.sessions.detectIntent",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2DetectIntentRequest"
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}:detectIntent"
                },
                "deleteContexts": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "id": "dialogflow.projects.agent.sessions.deleteContexts",
                  "path": "v2/{+parent}/contexts",
                  "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                      "description": "Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "description": "Deletes all active contexts in the specified session.",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              },
              "resources": {
                "entityTypes": {
                  "methods": {
                    "delete": {
                      "path": "v2/{+name}",
                      "id": "dialogflow.projects.agent.sessions.entityTypes.delete",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "httpMethod": "DELETE",
                      "description": "Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}"
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$"
                        },
                        "updateMask": {
                          "format": "google-fieldmask",
                          "location": "query",
                          "description": "Optional. The mask to control which fields get updated.",
                          "type": "string"
                        }
                      },
                      "id": "dialogflow.projects.agent.sessions.entityTypes.patch",
                      "httpMethod": "PATCH",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                      "description": "Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "create": {
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes",
                      "path": "v2/{+parent}/entityTypes",
                      "description": "Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "id": "dialogflow.projects.agent.sessions.entityTypes.create",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                          "description": "Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ]
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                          "type": "string"
                        }
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                      "httpMethod": "GET",
                      "path": "v2/{+name}",
                      "description": "Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "id": "dialogflow.projects.agent.sessions.entityTypes.get"
                    },
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse"
                      },
                      "httpMethod": "GET",
                      "description": "Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                        },
                        "parent": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$"
                        }
                      },
                      "path": "v2/{+parent}/entityTypes",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.agent.sessions.entityTypes.list",
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes"
                    }
                  }
                },
                "contexts": {
                  "methods": {
                    "list": {
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts",
                      "id": "dialogflow.projects.agent.sessions.contexts.list",
                      "description": "Returns the list of all contexts in the specified session.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+parent}/contexts",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                        },
                        "pageSize": {
                          "location": "query",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32",
                          "type": "integer"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListContextsResponse"
                      }
                    },
                    "create": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "path": "v2/{+parent}/contexts",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "httpMethod": "POST",
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "description": "Creates a context. If the specified context already exists, overrides the context.",
                      "id": "dialogflow.projects.agent.sessions.contexts.create"
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "id": "dialogflow.projects.agent.sessions.contexts.delete",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "description": "Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                          "type": "string"
                        }
                      },
                      "description": "Deletes the specified context.",
                      "path": "v2/{+name}"
                    },
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "path": "v2/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the context. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$"
                        }
                      },
                      "description": "Retrieves the specified context.",
                      "id": "dialogflow.projects.agent.sessions.contexts.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts/{contextsId}"
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "httpMethod": "PATCH",
                      "path": "v2/{+name}",
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "parameters": {
                        "updateMask": {
                          "location": "query",
                          "format": "google-fieldmask",
                          "type": "string",
                          "description": "Optional. The mask to control which fields get updated."
                        },
                        "name": {
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
                        }
                      },
                      "description": "Updates the specified context.",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.agent.sessions.contexts.patch"
                    }
                  }
                }
              }
            },
            "versions": {
              "methods": {
                "delete": {
                  "flatPath": "v2/projects/{projectsId}/agent/versions/{versionsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the version to delete. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/agent/versions/[^/]+$"
                    }
                  },
                  "path": "v2/{+name}",
                  "description": "Delete the specified agent version.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "id": "dialogflow.projects.agent.versions.delete"
                },
                "patch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/versions/{versionsId}",
                  "httpMethod": "PATCH",
                  "path": "v2/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Version"
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Version"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent/versions/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`"
                    },
                    "updateMask": {
                      "description": "Required. The mask to control which fields get updated.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "id": "dialogflow.projects.agent.versions.patch",
                  "description": "Updates the specified agent version. Note that this method does not allow you to update the state of the agent the given version points to. It allows you to update only mutable properties of the version resource."
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$",
                      "description": "Required. The agent to create a version for. Supported formats: - `projects//agent` - `projects//locations//agent`",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Version"
                  },
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Version"
                  },
                  "id": "dialogflow.projects.agent.versions.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/agent/versions",
                  "description": "Creates an agent version. The new version points to the agent instance in the \"default\" environment.",
                  "path": "v2/{+parent}/versions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "get": {
                  "httpMethod": "GET",
                  "description": "Retrieves the specified agent version.",
                  "id": "dialogflow.projects.agent.versions.get",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/versions/{versionsId}",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/versions/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Version"
                  }
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListVersionsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "location": "query"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The agent to list all versions from. Supported formats: - `projects//agent` - `projects//locations//agent`",
                      "pattern": "^projects/[^/]+/agent$",
                      "required": true
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/versions",
                  "id": "dialogflow.projects.agent.versions.list",
                  "description": "Returns the list of all versions of the specified agent.",
                  "flatPath": "v2/projects/{projectsId}/agent/versions"
                }
              }
            }
          },
          "methods": {
            "updateFulfillment": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "description": "Updates the fulfillment.",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/agent/fulfillment$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for Fulfillment in an Environment.",
                  "required": true
                },
                "updateMask": {
                  "location": "query",
                  "description": "Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated.",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "flatPath": "v2/projects/{projectsId}/agent/fulfillment",
              "id": "dialogflow.projects.agent.updateFulfillment",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudDialogflowV2Fulfillment"
              },
              "path": "v2/{+name}",
              "response": {
                "$ref": "GoogleCloudDialogflowV2Fulfillment"
              }
            },
            "export": {
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "description": "Exports the specified agent to a ZIP file. Operation ",
              "path": "v2/{+parent}/agent:export",
              "flatPath": "v2/projects/{projectsId}/agent:export",
              "id": "dialogflow.projects.agent.export",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "request": {
                "$ref": "GoogleCloudDialogflowV2ExportAgentRequest"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "Required. The project that the agent to export is associated with. Format: `projects/`.",
                  "location": "path"
                }
              },
              "httpMethod": "POST"
            },
            "restore": {
              "flatPath": "v2/projects/{projectsId}/agent:restore",
              "path": "v2/{+parent}/agent:restore",
              "request": {
                "$ref": "GoogleCloudDialogflowV2RestoreAgentRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "id": "dialogflow.projects.agent.restore",
              "parameterOrder": [
                "parent"
              ],
              "description": "Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the intents and entity types in the older version are deleted. After the restore, the restored draft agent will be trained automatically (unless disabled in agent settings). However, once the restore is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. Operation An operation which tracks when restoring is complete. It only tracks when the draft agent is updated not when it is done training.",
              "parameters": {
                "parent": {
                  "description": "Required. The project that the agent to restore is associated with. Format: `projects/`.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true
                }
              }
            },
            "train": {
              "request": {
                "$ref": "GoogleCloudDialogflowV2TrainAgentRequest"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The project that the agent to train is associated with. Format: `projects/`.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                }
              },
              "path": "v2/{+parent}/agent:train",
              "description": "Trains the specified agent. Operation ",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameterOrder": [
                "parent"
              ],
              "id": "dialogflow.projects.agent.train",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "httpMethod": "POST",
              "flatPath": "v2/projects/{projectsId}/agent:train"
            },
            "search": {
              "id": "dialogflow.projects.agent.search",
              "description": "Returns the list of agents. Since there is at most one conversational agent per project, this method is useful primarily for listing all agents across projects the caller has access to. One can achieve that with a wildcard project collection id \"-\". Refer to [List Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).",
              "response": {
                "$ref": "GoogleCloudDialogflowV2SearchAgentsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/agent:search",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "path": "v2/{+parent}/agent:search",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. The project to list agents from. Format: `projects/`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                },
                "pageToken": {
                  "description": "The next_page_token value returned from a previous list request.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                }
              }
            },
            "import": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "description": "Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the existing ones. Intents and entity types with the same name are replaced with the new versions from ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless disabled in agent settings). However, once the import is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. Operation An operation which tracks when importing is complete. It only tracks when the draft agent is updated not when it is done training.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The project that the agent to import is associated with. Format: `projects/`.",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "path": "v2/{+parent}/agent:import",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "request": {
                "$ref": "GoogleCloudDialogflowV2ImportAgentRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "dialogflow.projects.agent.import",
              "flatPath": "v2/projects/{projectsId}/agent:import"
            },
            "getValidationResult": {
              "path": "v2/{+parent}/agent/validationResult",
              "httpMethod": "GET",
              "description": "Gets agent validation result. Agent validation is performed during training time and is updated automatically when training is completed.",
              "parameters": {
                "languageCode": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. The language for which you want a validation result. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The project that the agent is associated with. Format: `projects/`.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "flatPath": "v2/projects/{projectsId}/agent/validationResult",
              "response": {
                "$ref": "GoogleCloudDialogflowV2ValidationResult"
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "dialogflow.projects.agent.getValidationResult"
            },
            "getFulfillment": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v2/projects/{projectsId}/agent/fulfillment",
              "description": "Retrieves the fulfillment.",
              "path": "v2/{+name}",
              "id": "dialogflow.projects.agent.getFulfillment",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/agent/fulfillment$",
                  "description": "Required. The name of the fulfillment. Format: `projects//agent/fulfillment`.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleCloudDialogflowV2Fulfillment"
              }
            }
          }
        }
      }
    }
  },
  "ownerName": "Google",
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "name": "dialogflow",
  "servicePath": "",
  "version": "v2",
  "basePath": "",
  "schemas": {
    "GoogleCloudDialogflowCxV3ExportAgentResponse": {
      "properties": {
        "agentUri": {
          "type": "string",
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest."
        },
        "agentContent": {
          "format": "byte",
          "description": "Uncompressed raw byte content for agent.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The response message for Agents.ExportAgent.",
      "id": "GoogleCloudDialogflowCxV3ExportAgentResponse"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction",
      "properties": {},
      "description": "Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user."
    },
    "GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata": {
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata",
      "description": "Metadata for ImportDocuments operation."
    },
    "GoogleCloudDialogflowV2HumanAgentHandoffConfig": {
      "properties": {
        "livePersonConfig": {
          "description": "Uses LivePerson (https://www.liveperson.com).",
          "$ref": "GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig"
        },
        "salesforceLiveAgentConfig": {
          "description": "Uses Salesforce Live Agent.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig"
        }
      },
      "type": "object",
      "description": "Defines the hand off to a live agent, typically on which external agent service provider to connect to a conversation. Currently, this feature is not general available, please contact Google to get access.",
      "id": "GoogleCloudDialogflowV2HumanAgentHandoffConfig"
    },
    "GoogleCloudDialogflowCxV3ExportTestCasesResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ExportTestCasesResponse",
      "properties": {
        "gcsUri": {
          "description": "The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest.",
          "type": "string"
        },
        "content": {
          "type": "string",
          "format": "byte",
          "description": "Uncompressed raw byte content for test cases."
        }
      },
      "description": "The response message for TestCases.ExportTestCases."
    },
    "GoogleCloudDialogflowV2IntentMessageCarouselSelect": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Required. Carousel items.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageCarouselSelect",
      "description": "The card for presenting a carousel of options to select from.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2AnswerRecord": {
      "description": "Answer records are records to manage answer history and feedbacks for Dialogflow. Currently, answer record includes: - human agent assistant article suggestion - human agent assistant faq article It doesn't include: - `DetectIntent` intent matching - `DetectIntent` knowledge Answer records are not related to the conversation history in the Dialogflow Console. A Record is generated even when the end-user disables conversation history in the console. Records are created when there's a human agent assistant suggestion generated. A typical workflow for customers provide feedback to an answer is: 1. For human agent assistant, customers get suggestion via ListSuggestions API. Together with the answers, AnswerRecord.name are returned to the customers. 2. The customer uses the AnswerRecord.name to call the UpdateAnswerRecord method to send feedback about a specific answer that they believe is wrong.",
      "type": "object",
      "properties": {
        "answerFeedback": {
          "$ref": "GoogleCloudDialogflowV2AnswerFeedback",
          "description": "Required. The AnswerFeedback for this record. You can set this with AnswerRecords.UpdateAnswerRecord in order to give us feedback about this answer."
        },
        "agentAssistantRecord": {
          "description": "Output only. The record for human agent assistant.",
          "$ref": "GoogleCloudDialogflowV2AgentAssistantRecord",
          "readOnly": true
        },
        "name": {
          "description": "The unique identifier of this answer record. Format: `projects//locations//answerRecords/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2AnswerRecord"
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem": {
      "type": "object",
      "description": "Browsing carousel tile",
      "properties": {
        "footer": {
          "type": "string",
          "description": "Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text."
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. Hero image for the carousel item."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the carousel item. Maximum of four lines of text."
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the carousel item. Maximum of two lines of text."
        },
        "openUriAction": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction",
          "description": "Required. Action to present to the user."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
    },
    "GoogleCloudDialogflowV2beta1SuggestionResult": {
      "type": "object",
      "properties": {
        "error": {
          "description": "Error status if the request failed.",
          "$ref": "GoogleRpcStatus"
        },
        "suggestFaqAnswersResponse": {
          "description": "SuggestFaqAnswersResponse if request is for FAQ_ANSWER.",
          "$ref": "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse"
        },
        "suggestSmartRepliesResponse": {
          "description": "SuggestSmartRepliesResponse if request is for SMART_REPLY.",
          "$ref": "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse"
        },
        "suggestArticlesResponse": {
          "description": "SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.",
          "$ref": "GoogleCloudDialogflowV2beta1SuggestArticlesResponse"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1SuggestionResult",
      "description": "One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent."
    },
    "GoogleCloudDialogflowCxV3beta1RunTestCaseResponse": {
      "type": "object",
      "description": "The response message for TestCases.RunTestCase.",
      "id": "GoogleCloudDialogflowCxV3beta1RunTestCaseResponse",
      "properties": {
        "result": {
          "description": "The result.",
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases": {
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases",
      "properties": {
        "cases": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase"
          },
          "description": "A list of cascading if-else conditions."
        }
      },
      "description": "A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "description": "Always present. The tag used to identify which fulfillment is being called."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo",
      "description": "Represents fulfillment information communicated to the webhook."
    },
    "GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse",
      "description": "Response message for Documents.ImportDocuments.",
      "properties": {
        "warnings": {
          "description": "Includes details about skipped documents or any other warnings.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1EventInput": {
      "description": "Represents the event to trigger.",
      "id": "GoogleCloudDialogflowCxV3beta1EventInput",
      "properties": {
        "event": {
          "description": "Name of the event.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse": {
      "description": "The response message for EntityTypes.BatchUpdateEntityTypes.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityType"
          },
          "description": "The collection of updated or created entity types."
        }
      }
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig": {
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig",
      "type": "object",
      "properties": {
        "enableEntityExtraction": {
          "type": "boolean",
          "description": "Enable entity extraction in conversation messages on [agent assist stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults to false. Currently, this feature is not general available, please contact Google to get access."
        },
        "enableSentimentAnalysis": {
          "description": "Enable sentiment analysis in conversation messages on [agent assist stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults to false. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral: https://cloud.google.com/natural-language/docs/basics#sentiment_analysis For Participants.StreamingAnalyzeContent method, result will be in StreamingAnalyzeContentResponse.message.SentimentAnalysisResult. For Participants.AnalyzeContent method, result will be in AnalyzeContentResponse.message.SentimentAnalysisResult For Conversations.ListMessages method, result will be in ListMessagesResponse.messages.SentimentAnalysisResult If Pub/Sub notification is configured, result will be in ConversationEvent.new_message_payload.SentimentAnalysisResult.",
          "type": "boolean"
        }
      },
      "description": "Configuration for analyses to run on each conversation message."
    },
    "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse",
      "type": "object",
      "description": "Represents a fulfillment response to the user.",
      "properties": {
        "messages": {
          "description": "The list of rich message responses to present to the user.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          }
        },
        "mergeBehavior": {
          "type": "string",
          "description": "Merge behavior for `messages`.",
          "enumDescriptions": [
            "Not specified. `APPEND` will be used.",
            "`messages` will be appended to the list of messages waiting to be sent to the user.",
            "`messages` will replace the list of messages waiting to be sent to the user."
          ],
          "enum": [
            "MERGE_BEHAVIOR_UNSPECIFIED",
            "APPEND",
            "REPLACE"
          ]
        }
      }
    },
    "GoogleCloudDialogflowCxV3InputAudioConfig": {
      "properties": {
        "sampleRateHertz": {
          "description": "Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.",
          "type": "integer",
          "format": "int32"
        },
        "modelVariant": {
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ],
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ],
          "type": "string",
          "description": "Optional. Which variant of the Speech model to use."
        },
        "model": {
          "type": "string",
          "description": "Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details."
        },
        "phraseHints": {
          "description": "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enableWordInfo": {
          "type": "boolean",
          "description": "Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information."
        },
        "singleUtterance": {
          "type": "boolean",
          "description": "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods."
        },
        "audioEncoding": {
          "type": "string",
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "AUDIO_ENCODING_LINEAR_16",
            "AUDIO_ENCODING_FLAC",
            "AUDIO_ENCODING_MULAW",
            "AUDIO_ENCODING_AMR",
            "AUDIO_ENCODING_AMR_WB",
            "AUDIO_ENCODING_OGG_OPUS",
            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.",
            "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000."
          ],
          "description": "Required. Audio encoding of the audio content to process."
        }
      },
      "id": "GoogleCloudDialogflowCxV3InputAudioConfig",
      "description": "Instructs the speech recognizer on how to process the audio content.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart": {
      "description": "Represents a part of a training phrase.",
      "type": "object",
      "properties": {
        "parameterId": {
          "description": "The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart"
    },
    "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo": {
      "id": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo",
      "properties": {
        "value": {
          "type": "any",
          "description": "Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value."
        },
        "justCollected": {
          "type": "boolean",
          "description": "Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn."
        },
        "displayName": {
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook.",
          "type": "string"
        },
        "required": {
          "type": "boolean",
          "description": "Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Indicates that the parameter does not have a value.",
            "Indicates that the parameter value is invalid. This field can be used by the webhook to invalidate the parameter and ask the server to collect it from the user again.",
            "Indicates that the parameter has a value."
          ],
          "enum": [
            "PARAMETER_STATE_UNSPECIFIED",
            "EMPTY",
            "INVALID",
            "FILLED"
          ],
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored."
        }
      },
      "description": "Represents parameter information.",
      "type": "object"
    },
    "GoogleLongrunningListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        }
      },
      "type": "object",
      "description": "The response message for Operations.ListOperations.",
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion": {
      "description": "The suggestion chip message that allows the user to jump out to the app or website associated with this agent.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The URI of the app or site to open when the user taps the suggestion chip."
        },
        "destinationName": {
          "type": "string",
          "description": "Required. The name of the app or site this chip is linking to."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1AudioInput": {
      "properties": {
        "config": {
          "description": "Required. Instructs the speech recognizer how to process the speech audio.",
          "$ref": "GoogleCloudDialogflowCxV3beta1InputAudioConfig"
        },
        "audio": {
          "format": "byte",
          "description": "The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.",
          "type": "string"
        }
      },
      "description": "Represents the natural speech audio to be processed.",
      "id": "GoogleCloudDialogflowCxV3beta1AudioInput",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1TestCaseResult": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.",
          "type": "string"
        },
        "environment": {
          "description": "Environment where the test was run. If not set, it indicates the draft environment.",
          "type": "string"
        },
        "testResult": {
          "enum": [
            "TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ],
          "description": "Whether the test case passed in the agent environment.",
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "The test passed.",
            "The test did not pass."
          ],
          "type": "string"
        },
        "conversationTurns": {
          "type": "array",
          "description": "The conversation turns uttered during the test case replay in chronological order.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurn"
          }
        },
        "testTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the test was run."
        }
      },
      "description": "Represents a result from running a test case in an agent environment.",
      "id": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
    },
    "GoogleCloudDialogflowCxV3IntentInput": {
      "description": "Represents the intent to trigger programmatically rather than as a result of natural language processing.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3IntentInput",
      "properties": {
        "intent": {
          "description": "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageImage": {
      "properties": {
        "imageUri": {
          "description": "Optional. The public URI to an image file.",
          "type": "string"
        },
        "accessibilityText": {
          "type": "string",
          "description": "Optional. A text description of the image to be used for accessibility, e.g., screen readers."
        }
      },
      "description": "The image response message.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageImage"
    },
    "GoogleCloudDialogflowV2IntentMessageSimpleResponse": {
      "description": "The simple response message containing speech or text.",
      "type": "object",
      "properties": {
        "ssml": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech."
        },
        "displayText": {
          "type": "string",
          "description": "Optional. The text to display."
        },
        "textToSpeech": {
          "description": "One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageSimpleResponse"
    },
    "GoogleCloudDialogflowV2beta1Message": {
      "id": "GoogleCloudDialogflowV2beta1Message",
      "properties": {
        "sendTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Optional. The time when the message was sent."
        },
        "name": {
          "type": "string",
          "description": "Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
        },
        "participant": {
          "description": "Output only. The participant that sends this message.",
          "readOnly": true,
          "type": "string"
        },
        "languageCode": {
          "description": "Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
          "type": "string"
        },
        "messageAnnotation": {
          "description": "Output only. The annotation for the message.",
          "$ref": "GoogleCloudDialogflowV2beta1MessageAnnotation",
          "readOnly": true
        },
        "participantRole": {
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ],
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ],
          "description": "Output only. The role of the participant.",
          "readOnly": true,
          "type": "string"
        },
        "content": {
          "type": "string",
          "description": "Required. The message content."
        },
        "sentimentAnalysis": {
          "$ref": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult",
          "readOnly": true,
          "description": "Output only. The sentiment analysis result for the message."
        },
        "createTime": {
          "description": "Output only. The time when the message was created in Contact Center AI.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        }
      },
      "description": "Represents a message posted into a conversation.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1WebhookResponse": {
      "description": "The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `\"\"` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).",
      "id": "GoogleCloudDialogflowV2beta1WebhookResponse",
      "type": "object",
      "properties": {
        "fulfillmentText": {
          "type": "string",
          "description": "Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller."
        },
        "endInteraction": {
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.",
          "type": "boolean"
        },
        "liveAgentHandoff": {
          "type": "boolean",
          "description": "Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false."
        },
        "followupEventInput": {
          "description": "Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields.",
          "$ref": "GoogleCloudDialogflowV2beta1EventInput"
        },
        "sessionEntityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SessionEntityType"
          },
          "type": "array",
          "description": "Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods."
        },
        "outputContexts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          },
          "description": "Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller."
        },
        "payload": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
          "type": "object"
        },
        "source": {
          "type": "string",
          "description": "Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller."
        },
        "fulfillmentMessages": {
          "description": "Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent": {
      "id": "GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent",
      "type": "object",
      "properties": {
        "suggestionResults": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SuggestionResult"
          },
          "description": "The suggestion results payload that this notification refers to. It will only be set when HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses sets to true."
        },
        "conversation": {
          "description": "The conversation this notification refers to. Format: `projects//conversations/`.",
          "type": "string"
        },
        "participant": {
          "description": "The participant that the suggestion is compiled for. And This field is used to call Participants.ListSuggestions API. Format: `projects//conversations//participants/`. It will not be set in legacy workflow. HumanAgentAssistantConfig.name for more information.",
          "type": "string"
        }
      },
      "description": "Output only. Represents a notification sent to Pub/Sub subscribers for agent assistant events in a specific conversation."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction": {
      "type": "object",
      "description": "Actions on Google action to open a given url.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction",
      "properties": {
        "urlTypeHint": {
          "description": "Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.",
          "enum": [
            "URL_TYPE_HINT_UNSPECIFIED",
            "AMP_ACTION",
            "AMP_CONTENT"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Url would be an amp action",
            "URL that points directly to AMP content, or to a canonical URL which refers to AMP content via ."
          ],
          "type": "string"
        },
        "url": {
          "description": "Required. URL",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2EnvironmentHistory": {
      "description": "The response message for Environments.GetEnvironmentHistory.",
      "type": "object",
      "properties": {
        "parent": {
          "description": "Output only. The name of the environment this history is for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/`",
          "readOnly": true,
          "type": "string"
        },
        "entries": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2EnvironmentHistoryEntry"
          },
          "type": "array",
          "readOnly": true,
          "description": "Output only. The list of agent environments. There will be a maximum number of items returned based on the page_size field in the request."
        },
        "nextPageToken": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "GoogleCloudDialogflowV2EnvironmentHistory"
    },
    "GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest": {
      "type": "object",
      "properties": {
        "entityTypeNames": {
          "items": {
            "type": "string"
          },
          "description": "Required. The names entity types to delete. All names must point to the same agent as `parent`.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest",
      "description": "The request message for EntityTypes.BatchDeleteEntityTypes."
    },
    "GoogleCloudDialogflowCxV3beta1TestConfig": {
      "properties": {
        "flow": {
          "description": "Flow name. If not set, default start flow is assumed. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "trackingParameters": {
          "items": {
            "type": "string"
          },
          "description": "Session parameters to be compared when calculating differences.",
          "type": "array"
        }
      },
      "description": "Represents configurations for a test case.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1TestConfig"
    },
    "GoogleCloudDialogflowCxV3Fulfillment": {
      "id": "GoogleCloudDialogflowCxV3Fulfillment",
      "properties": {
        "conditionalCases": {
          "description": "Conditional cases for this fulfillment.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
          }
        },
        "setParameterActions": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction"
          },
          "type": "array",
          "description": "Set parameter values before executing the webhook."
        },
        "tag": {
          "description": "The tag used by the webhook to identify which fulfillment is being called. This field is required if `webhook` is specified.",
          "type": "string"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          },
          "description": "The list of rich message responses to present to the user."
        },
        "webhook": {
          "type": "string",
          "description": "The webhook to call. Format: `projects//locations//agents//webhooks/`."
        }
      },
      "description": "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply": {
      "description": "Rich Business Messaging (RBM) suggested reply that the user can click instead of typing in their own response.",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Suggested reply text."
        },
        "postbackData": {
          "type": "string",
          "description": "Opaque payload that the Dialogflow receives in a user event when the user taps the suggested reply. This data will be also forwarded to webhook to allow performing custom business logic."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply"
    },
    "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse": {
      "id": "GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse",
      "properties": {
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "format": "int32",
          "type": "integer"
        },
        "smartReplyAnswers": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SmartReplyAnswer"
          },
          "type": "array",
          "description": "Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in SmartReplyConfig."
        },
        "latestMessage": {
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.",
          "type": "string"
        }
      },
      "description": "The response message for Participants.SuggestSmartReplies.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageSimpleResponses": {
      "type": "object",
      "properties": {
        "simpleResponses": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageSimpleResponse"
          },
          "description": "Required. The list of simple responses."
        }
      },
      "description": "The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.",
      "id": "GoogleCloudDialogflowV2IntentMessageSimpleResponses"
    },
    "GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata": {
      "description": "Metadata for DeleteDocument operation.",
      "id": "GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3Intent": {
      "properties": {
        "priority": {
          "description": "The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "type": "integer",
          "format": "int32"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the intent, unique within the agent."
        },
        "description": {
          "type": "string",
          "description": "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`."
        },
        "parameters": {
          "description": "The collection of parameters associated with the intent.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentParameter"
          }
        },
        "labels": {
          "description": "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys.\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys.head * sys.contextual The above labels do not require value. \"sys.head\" means the intent is a head intent. \"sys.contextual\" means the intent is a contextual intent.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "trainingPhrases": {
          "description": "The collection of training phrases the agent is trained on to identify the intent.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentTrainingPhrase"
          }
        },
        "isFallback": {
          "type": "boolean",
          "description": "Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event."
        }
      },
      "type": "object",
      "description": "An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.",
      "id": "GoogleCloudDialogflowCxV3Intent"
    },
    "GoogleCloudDialogflowCxV3EventInput": {
      "description": "Represents the event to trigger.",
      "type": "object",
      "properties": {
        "event": {
          "description": "Name of the event.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3EventInput"
    },
    "GoogleCloudDialogflowV2ValidationError": {
      "properties": {
        "errorMessage": {
          "description": "The detailed error messsage.",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The names of the entries that the error is associated with. Format: - \"projects//agent\", if the error is associated with the entire agent. - \"projects//agent/intents/\", if the error is associated with certain intents. - \"projects//agent/intents//trainingPhrases/\", if the error is associated with certain intent training phrases. - \"projects//agent/intents//parameters/\", if the error is associated with certain intent parameters. - \"projects//agent/entities/\", if the error is associated with certain entities."
        },
        "severity": {
          "type": "string",
          "description": "The severity of the error.",
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ERROR",
            "CRITICAL"
          ],
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "The agent doesn't follow Dialogflow best practices.",
            "The agent may not behave as expected.",
            "The agent may experience partial failures.",
            "The agent may completely fail."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2ValidationError",
      "description": "Represents a single validation error."
    },
    "GoogleCloudDialogflowV2SearchAgentsResponse": {
      "id": "GoogleCloudDialogflowV2SearchAgentsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "agents": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          },
          "description": "The list of agents. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "The response message for Agents.SearchAgents."
    },
    "GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
        }
      },
      "description": "Metadata for ImportDocuments operation.",
      "id": "GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3BatchRunTestCasesResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestCaseResult"
          },
          "description": "The test case results. The detailed conversation turns are empty in this response."
        }
      },
      "description": "The response message for TestCases.BatchRunTestCases.",
      "id": "GoogleCloudDialogflowCxV3BatchRunTestCasesResponse"
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction": {
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The HTTP or HTTPS scheme URI."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction",
      "description": "Opens the given URI.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio": {
      "properties": {
        "segments": {
          "description": "Segments this audio response is composed of.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio",
      "type": "object",
      "description": "Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user."
    },
    "GoogleCloudDialogflowCxV3IntentTrainingPhrase": {
      "properties": {
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart"
          },
          "type": "array",
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set."
        },
        "repeatCount": {
          "description": "Indicates how many times this example was added to the intent.",
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string",
          "description": "Output only. The unique identifier of the training phrase."
        }
      },
      "id": "GoogleCloudDialogflowCxV3IntentTrainingPhrase",
      "description": "Represents an example that the agent is trained on to identify the intent.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Name of media card."
        },
        "icon": {
          "description": "Optional. Icon to display above media content.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "largeImage": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. Image to display above media content."
        },
        "contentUrl": {
          "description": "Required. Url where the media is stored.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of media card.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response media object for media content card.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject"
    },
    "GoogleCloudDialogflowV2Participant": {
      "type": "object",
      "description": "Represents a conversation participant (human agent, virtual agent, end-user).",
      "properties": {
        "name": {
          "type": "string",
          "description": "Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`."
        },
        "sipRecordingMediaLabel": {
          "description": "Optional. Label applied to streams representing this participant in SIPREC XML metadata and SDP. This is used to assign transcriptions from that media stream to this participant. This field can be updated.",
          "type": "string"
        },
        "role": {
          "description": "Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ],
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ],
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2Participant"
    },
    "GoogleCloudDialogflowV2SpeechContext": {
      "type": "object",
      "description": "Hints for the speech recognizer to help with recognition in a specific conversation state.",
      "id": "GoogleCloudDialogflowV2SpeechContext",
      "properties": {
        "phrases": {
          "type": "array",
          "description": "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. This list can be used to: * improve accuracy for words and phrases you expect the user to say, e.g. typical commands for your Dialogflow agent * add additional words to the speech recognizer vocabulary * ... See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/quotas) for usage limits.",
          "items": {
            "type": "string"
          }
        },
        "boost": {
          "description": "Optional. Boost for this context compared to other contexts: * If the boost is positive, Dialogflow will increase the probability that the phrases in this context are recognized over similar sounding phrases. * If the boost is unspecified or non-positive, Dialogflow will not apply any boost. Dialogflow recommends that you use boosts in the range (0, 20] and that you find a value that fits your use case with binary search.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer": {
      "id": "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer",
      "description": "An answer from Knowledge Connector.",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`."
        },
        "answer": {
          "description": "The piece of text from the `source` knowledge base document that answers this conversational query.",
          "type": "string"
        },
        "matchConfidenceLevel": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Indicates that the confidence is low.",
            "Indicates our confidence is medium.",
            "Indicates our confidence is high."
          ],
          "description": "The system's confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given `` pair may change without notice, as it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality of an answer.",
          "enum": [
            "MATCH_CONFIDENCE_LEVEL_UNSPECIFIED",
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        },
        "faqQuestion": {
          "type": "string",
          "description": "The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise."
        },
        "matchConfidence": {
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the future. We recommend using `match_confidence_level` which should be generally more stable.",
          "format": "float",
          "type": "number"
        }
      }
    },
    "GoogleCloudDialogflowCxV3Form": {
      "description": "A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.",
      "type": "object",
      "properties": {
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FormParameter"
          },
          "description": "Parameters to collect from the user.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3Form"
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput": {
      "description": "The output from the virtual agent.",
      "properties": {
        "triggeredIntent": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Intent",
          "description": "The Intent that triggered the response. Only name and displayName will be set."
        },
        "sessionParameters": {
          "description": "The session parameters available to the bot at this point.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "Response error from the agent in the test result. If set, other output is empty."
        },
        "currentPage": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Page",
          "description": "The Page on which the utterance was spoken. Only name and displayName will be set."
        },
        "textResponses": {
          "type": "array",
          "description": "The text responses from the agent for the turn.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageText"
          }
        },
        "diagnosticInfo": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Required. Input only. The diagnostic info output for the turn."
        },
        "differences": {
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestRunDifference"
          },
          "description": "Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse",
      "properties": {
        "mergeBehavior": {
          "enumDescriptions": [
            "Not specified. `APPEND` will be used.",
            "`messages` will be appended to the list of messages waiting to be sent to the user.",
            "`messages` will replace the list of messages waiting to be sent to the user."
          ],
          "description": "Merge behavior for `messages`.",
          "type": "string",
          "enum": [
            "MERGE_BEHAVIOR_UNSPECIFIED",
            "APPEND",
            "REPLACE"
          ]
        },
        "messages": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          },
          "type": "array",
          "description": "The list of rich message responses to present to the user."
        }
      },
      "description": "Represents a fulfillment response to the user."
    },
    "GoogleCloudDialogflowV2beta1EntityType": {
      "type": "object",
      "description": "Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).",
      "id": "GoogleCloudDialogflowV2beta1EntityType",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The name of the entity type."
        },
        "autoExpansionMode": {
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ],
          "type": "string",
          "description": "Optional. Indicates whether the entity type can be automatically expanded.",
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ]
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityTypeEntity"
          },
          "description": "Optional. The collection of entity entries associated with the entity type.",
          "type": "array"
        },
        "kind": {
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a reference value.",
            "List entity types contain a set of entries that do not map to reference values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "description": "Required. Indicates the kind of entity type."
        },
        "enableFuzzyExtraction": {
          "description": "Optional. Enables fuzzy entity extraction during classification.",
          "type": "boolean"
        },
        "name": {
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo",
      "properties": {
        "parameterInfo": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo"
          },
          "description": "Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter."
        }
      },
      "description": "Represents form information."
    },
    "GoogleCloudDialogflowV2IntentMessageSuggestions": {
      "properties": {
        "suggestions": {
          "type": "array",
          "description": "Required. The list of suggested replies.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageSuggestion"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageSuggestions",
      "type": "object",
      "description": "The collection of suggestions."
    },
    "GoogleCloudDialogflowV2LoggingConfig": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2LoggingConfig",
      "properties": {
        "enableStackdriverLogging": {
          "description": "Whether to log conversation events like CONVERSATION_STARTED to Stackdriver in the conversation project as JSON format ConversationEvent protos.",
          "type": "boolean"
        }
      },
      "description": "Defines logging behavior for conversation lifecycle events."
    },
    "GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse": {
      "properties": {
        "entityTypes": {
          "type": "array",
          "description": "The collection of updated or created entity types.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityType"
          }
        }
      },
      "type": "object",
      "description": "The response message for EntityTypes.BatchUpdateEntityTypes.",
      "id": "GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse"
    },
    "GoogleCloudDialogflowV2MessageAnnotation": {
      "id": "GoogleCloudDialogflowV2MessageAnnotation",
      "properties": {
        "containEntities": {
          "type": "boolean",
          "description": "Indicates whether the text message contains entities."
        },
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2AnnotatedMessagePart"
          },
          "type": "array",
          "description": "The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text]."
        }
      },
      "description": "Represents the result of annotation for the message.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookResponse": {
      "properties": {
        "pageInfo": {
          "description": "Information about page status. This field can be omitted by the webhook if it does not intend to modify page status.",
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfo"
        },
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "fulfillmentResponse": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse",
          "description": "The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user."
        },
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "payload": {
          "type": "object",
          "description": "Value to append directly to QueryResult.webhook_payloads.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "sessionInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1SessionInfo",
          "description": "Information about session status. This field can be omitted by the webhook if it does not intend to modify session status."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1WebhookResponse",
      "type": "object",
      "description": "The response message for a webhook call."
    },
    "GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata": {
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "type": "string",
          "readOnly": true,
          "description": "Required. Output only. The current state of this operation.",
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata",
      "description": "Metadata in google::longrunning::Operation for Knowledge operations."
    },
    "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction": {
      "description": "Setting a parameter value.",
      "properties": {
        "value": {
          "description": "The new value of the parameter. A null value clears the parameter.",
          "type": "any"
        },
        "parameter": {
          "description": "Display name of the parameter.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3FulfillmentSetParameterAction",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1MessageAnnotation": {
      "type": "object",
      "properties": {
        "containEntities": {
          "description": "Required. Indicates whether the text message contains entities.",
          "type": "boolean"
        },
        "parts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1AnnotatedMessagePart"
          },
          "description": "Optional. The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text]."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1MessageAnnotation",
      "description": "Represents the result of annotation for the message."
    },
    "GoogleCloudDialogflowCxV3beta1Form": {
      "type": "object",
      "description": "A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.",
      "id": "GoogleCloudDialogflowCxV3beta1Form",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FormParameter"
          },
          "description": "Parameters to collect from the user."
        }
      }
    },
    "GoogleCloudDialogflowCxV3TestConfig": {
      "description": "Represents configurations for a test case.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3TestConfig",
      "properties": {
        "flow": {
          "type": "string",
          "description": "Flow name. If not set, default start flow is assumed. Format: `projects//locations//agents//flows/`."
        },
        "trackingParameters": {
          "type": "array",
          "description": "Session parameters to be compared when calculating differences.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource": {
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource",
      "type": "object",
      "description": "Dialogflow source setting. Supported feature: DIALOGFLOW_ASSIST.",
      "properties": {
        "agent": {
          "description": "Required. The name of a Dialogflow virtual agent used for end user side intent detection and suggestion. Format: `projects//locations//agent`. When multiple agents are allowed in the same Dialogflow project.",
          "type": "string"
        }
      }
    },
    "GoogleTypeLatLng": {
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0]."
        },
        "longitude": {
          "format": "double",
          "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
          "type": "number"
        }
      },
      "type": "object",
      "id": "GoogleTypeLatLng",
      "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard. Values must be within normalized ranges."
    },
    "GoogleCloudDialogflowV2AutomatedAgentConfig": {
      "id": "GoogleCloudDialogflowV2AutomatedAgentConfig",
      "type": "object",
      "properties": {
        "agent": {
          "type": "string",
          "description": "Required. ID of the Dialogflow agent environment to use. This project needs to either be the same project as the conversation or you need to grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow API Service Agent` role in this project. Format: `projects//locations//agent/environments/`. If environment is not specified, the default `draft` environment is used. Refer to [DetectIntentRequest](/dialogflow/docs/reference/rpc/google.cloud.dialogflow.v2#google.cloud.dialogflow.v2.DetectIntentRequest) for more details."
        }
      },
      "description": "Defines the Automated Agent to connect to a conversation."
    },
    "GoogleCloudDialogflowCxV3QueryInput": {
      "id": "GoogleCloudDialogflowCxV3QueryInput",
      "properties": {
        "text": {
          "description": "The natural language text to be processed.",
          "$ref": "GoogleCloudDialogflowCxV3TextInput"
        },
        "event": {
          "$ref": "GoogleCloudDialogflowCxV3EventInput",
          "description": "The event to be triggered."
        },
        "dtmf": {
          "description": "The DTMF event to be handled.",
          "$ref": "GoogleCloudDialogflowCxV3DtmfInput"
        },
        "languageCode": {
          "description": "Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        },
        "audio": {
          "$ref": "GoogleCloudDialogflowCxV3AudioInput",
          "description": "The natural language speech audio to be processed."
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowCxV3IntentInput",
          "description": "The intent to be triggered."
        }
      },
      "description": "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. ",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata": {
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors for failed test cases.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseError"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata",
      "description": "Metadata returned for the TestCases.ImportTestCases long running operation."
    },
    "GoogleCloudDialogflowV2SentimentAnalysisRequestConfig": {
      "type": "object",
      "properties": {
        "analyzeQueryTextSentiment": {
          "description": "Instructs the service to perform sentiment analysis on `query_text`. If not provided, sentiment analysis is not performed on `query_text`.",
          "type": "boolean"
        }
      },
      "description": "Configures the types of sentiment analysis to perform.",
      "id": "GoogleCloudDialogflowV2SentimentAnalysisRequestConfig"
    },
    "GoogleCloudDialogflowCxV3PageInfo": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3PageInfo",
      "description": "Represents page information communicated to and from the webhook.",
      "properties": {
        "formInfo": {
          "description": "Optional for both WebhookRequest and WebhookResponse. Information about the form.",
          "$ref": "GoogleCloudDialogflowCxV3PageInfoFormInfo"
        },
        "currentPage": {
          "type": "string",
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1DtmfInput": {
      "type": "object",
      "properties": {
        "finishDigit": {
          "type": "string",
          "description": "The finish digit (if any)."
        },
        "digits": {
          "type": "string",
          "description": "The dtmf digits."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1DtmfInput",
      "description": "Represents the input for dtmf event."
    },
    "GoogleCloudDialogflowV2SuggestFaqAnswersResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse",
      "description": "The request message for Participants.SuggestFaqAnswers.",
      "properties": {
        "faqAnswers": {
          "description": "Answers extracted from FAQ documents.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2FaqAnswer"
          }
        },
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "format": "int32",
          "type": "integer"
        },
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ExportAgentResponse": {
      "id": "GoogleCloudDialogflowCxV3beta1ExportAgentResponse",
      "description": "The response message for Agents.ExportAgent.",
      "type": "object",
      "properties": {
        "agentContent": {
          "format": "byte",
          "type": "string",
          "description": "Uncompressed raw byte content for agent."
        },
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies": {
      "description": "The quick replies response message.",
      "properties": {
        "quickReplies": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The collection of quick replies."
        },
        "title": {
          "description": "Optional. The title of the collection of quick replies.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff": {
      "description": "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.",
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment": {
      "properties": {
        "allowPlaybackInterruption": {
          "type": "boolean",
          "description": "Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.",
          "readOnly": true
        },
        "audio": {
          "type": "string",
          "format": "byte",
          "description": "Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request."
        },
        "uri": {
          "type": "string",
          "description": "Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it."
        }
      },
      "id": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment",
      "type": "object",
      "description": "Represents one segment of audio."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio": {
      "description": "Plays audio from a file in Telephony Gateway.",
      "properties": {
        "audioUri": {
          "description": "Required. URI to a Google Cloud Storage object containing the audio to play, e.g., \"gs://bucket/object\". The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio"
    },
    "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput": {
      "properties": {
        "triggeredIntent": {
          "$ref": "GoogleCloudDialogflowCxV3Intent",
          "description": "The Intent that triggered the response. Only name and displayName will be set."
        },
        "diagnosticInfo": {
          "description": "Required. Input only. The diagnostic info output for the turn.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "textResponses": {
          "description": "The text responses from the agent for the turn.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessageText"
          },
          "type": "array"
        },
        "sessionParameters": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The session parameters available to the bot at this point.",
          "type": "object"
        },
        "status": {
          "description": "Response error from the agent in the test result. If set, other output is empty.",
          "$ref": "GoogleRpcStatus"
        },
        "differences": {
          "description": "Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestRunDifference"
          },
          "type": "array",
          "readOnly": true
        },
        "currentPage": {
          "description": "The Page on which the utterance was spoken. Only name and displayName will be set.",
          "$ref": "GoogleCloudDialogflowCxV3Page"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput",
      "description": "The output from the virtual agent.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction": {
      "type": "object",
      "description": "Rich Business Messaging (RBM) suggested client-side action that the user can choose from the card.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction",
      "properties": {
        "postbackData": {
          "description": "Opaque payload that the Dialogflow receives in a user event when the user taps the suggested action. This data will be also forwarded to webhook to allow performing custom business logic.",
          "type": "string"
        },
        "dial": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial",
          "description": "Suggested client side action: Dial a phone number"
        },
        "openUrl": {
          "description": "Suggested client side action: Open a URI on device",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri"
        },
        "shareLocation": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation",
          "description": "Suggested client side action: Share user location"
        },
        "text": {
          "type": "string",
          "description": "Text to display alongside the action."
        }
      }
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCases": {
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases",
      "type": "object",
      "properties": {
        "cases": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase"
          },
          "description": "A list of cascading if-else conditions.",
          "type": "array"
        }
      },
      "description": "A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored."
    },
    "GoogleCloudDialogflowCxV3TestCase": {
      "type": "object",
      "description": "Represents a test case.",
      "properties": {
        "creationTime": {
          "description": "Output only. When the test was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "lastTestResult": {
          "description": "The latest test result.",
          "$ref": "GoogleCloudDialogflowCxV3TestCaseResult"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters."
        },
        "notes": {
          "description": "Additional freeform notes about the test case. Limit of 400 characters.",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "description": "Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with \"#\" and has a limit of 30 characters.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."
        },
        "testCaseConversationTurns": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ConversationTurn"
          },
          "description": "The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.",
          "type": "array"
        },
        "testConfig": {
          "$ref": "GoogleCloudDialogflowCxV3TestConfig",
          "description": "Config for the test case."
        }
      },
      "id": "GoogleCloudDialogflowCxV3TestCase"
    },
    "GoogleCloudDialogflowV2ListIntentsResponse": {
      "description": "The response message for Intents.ListIntents.",
      "id": "GoogleCloudDialogflowV2ListIntentsResponse",
      "type": "object",
      "properties": {
        "intents": {
          "description": "The list of agent intents. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1SessionInfo": {
      "properties": {
        "parameters": {
          "description": "Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.",
          "additionalProperties": {
            "type": "any"
          },
          "type": "object"
        },
        "session": {
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1SessionInfo",
      "type": "object",
      "description": "Represents session information communicated to and from the webhook."
    },
    "GoogleCloudDialogflowV2EnvironmentHistoryEntry": {
      "description": "Represents an environment history entry.",
      "properties": {
        "description": {
          "type": "string",
          "description": "The developer-provided description for this environment history entry."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The creation time of this environment history entry."
        },
        "agentVersion": {
          "type": "string",
          "description": "The agent version loaded into this environment history entry."
        }
      },
      "id": "GoogleCloudDialogflowV2EnvironmentHistoryEntry",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
        }
      },
      "description": "Metadata for ReloadDocument operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio": {
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio",
      "properties": {
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean",
          "readOnly": true
        },
        "audioUri": {
          "type": "string",
          "description": "Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it."
        }
      },
      "description": "Specifies an audio clip to be played by the client as part of the response.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1Intent": {
      "properties": {
        "outputContexts": {
          "type": "array",
          "description": "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          }
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of this intent."
        },
        "events": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters."
        },
        "defaultResponsePlatforms": {
          "description": "Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "FACEBOOK",
              "SLACK",
              "TELEGRAM",
              "KIK",
              "SKYPE",
              "LINE",
              "VIBER",
              "ACTIONS_ON_GOOGLE",
              "TELEPHONY",
              "GOOGLE_HANGOUTS"
            ],
            "enumDescriptions": [
              "Not specified.",
              "Facebook.",
              "Slack.",
              "Telegram.",
              "Kik.",
              "Skype.",
              "Line.",
              "Viber.",
              "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
              "Telephony Gateway.",
              "Google Hangouts."
            ]
          }
        },
        "followupIntentInfo": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo"
          }
        },
        "name": {
          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` - `projects//locations//agent/intents/`",
          "type": "string"
        },
        "trainingPhrases": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentTrainingPhrase"
          },
          "type": "array",
          "description": "Optional. The collection of examples that the agent is trained on."
        },
        "inputContextNames": {
          "description": "Optional. The list of context names required for this intent to be triggered. Formats: - `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "endInteraction": {
          "type": "boolean",
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false."
        },
        "priority": {
          "format": "int32",
          "description": "Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "type": "integer"
        },
        "messages": {
          "type": "array",
          "description": "Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          }
        },
        "mlDisabled": {
          "description": "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.",
          "type": "boolean"
        },
        "webhookState": {
          "description": "Optional. Indicates whether webhooks are enabled for the intent.",
          "type": "string",
          "enum": [
            "WEBHOOK_STATE_UNSPECIFIED",
            "WEBHOOK_STATE_ENABLED",
            "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
          ],
          "enumDescriptions": [
            "Webhook is disabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent. Also, each slot filling prompt is forwarded to the webhook."
          ]
        },
        "liveAgentHandoff": {
          "description": "Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.",
          "type": "boolean"
        },
        "parameters": {
          "type": "array",
          "description": "Optional. The collection of parameters associated with the intent.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentParameter"
          }
        },
        "resetContexts": {
          "type": "boolean",
          "description": "Optional. Indicates whether to delete all contexts in the current session when this intent is matched."
        },
        "parentFollowupIntentName": {
          "type": "string",
          "description": "Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`."
        },
        "action": {
          "type": "string",
          "description": "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
        },
        "mlEnabled": {
          "type": "boolean",
          "description": "Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set to false, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false, then the default value is determined as follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018 the default is: ml_enabled = true / ml_disabled = false."
        },
        "rootFollowupIntentName": {
          "readOnly": true,
          "description": "Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "isFallback": {
          "description": "Optional. Indicates whether this is a fallback intent.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1Intent",
      "description": "An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview)."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard",
      "type": "object",
      "properties": {
        "cardOrientation": {
          "description": "Required. Orientation of the card.",
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Horizontal layout.",
            "Vertical layout."
          ],
          "enum": [
            "CARD_ORIENTATION_UNSPECIFIED",
            "HORIZONTAL",
            "VERTICAL"
          ]
        },
        "thumbnailImageAlignment": {
          "enum": [
            "THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED",
            "LEFT",
            "RIGHT"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Thumbnail preview is left-aligned.",
            "Thumbnail preview is right-aligned."
          ],
          "type": "string",
          "description": "Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout."
        },
        "cardContent": {
          "description": "Required. Card content.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
        }
      },
      "description": "Standalone Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. You can group multiple rich cards into one using RbmCarouselCard but carousel cards will give you less control over the card layout."
    },
    "GoogleCloudDialogflowCxV3TestError": {
      "description": "Error info for running a test.",
      "id": "GoogleCloudDialogflowCxV3TestError",
      "properties": {
        "testTime": {
          "description": "The timestamp when the test was completed.",
          "format": "google-datetime",
          "type": "string"
        },
        "testCase": {
          "description": "The test case resource name.",
          "type": "string"
        },
        "status": {
          "description": "The status associated with the test.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageMediaContent": {
      "id": "GoogleCloudDialogflowV2IntentMessageMediaContent",
      "type": "object",
      "description": "The media content card for Actions on Google.",
      "properties": {
        "mediaType": {
          "description": "Optional. What type of media is the content (ie \"audio\").",
          "enumDescriptions": [
            "Unspecified.",
            "Response media type is audio."
          ],
          "enum": [
            "RESPONSE_MEDIA_TYPE_UNSPECIFIED",
            "AUDIO"
          ],
          "type": "string"
        },
        "mediaObjects": {
          "description": "Required. List of media objects.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio",
      "properties": {
        "segments": {
          "description": "Segments this audio response is composed of.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment"
          },
          "type": "array"
        }
      },
      "description": "Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user."
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig": {
      "description": "Custom conversation models used in agent assist feature. Supported feature: ARTICLE_SUGGESTION, SMART_COMPOSE, SMART_REPLY.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig",
      "properties": {
        "model": {
          "description": "Required. Conversation model resource name. Format: `projects//conversationModels/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2ImportAgentRequest": {
      "id": "GoogleCloudDialogflowV2ImportAgentRequest",
      "type": "object",
      "description": "The request message for Agents.ImportAgent.",
      "properties": {
        "agentContent": {
          "description": "Zip compressed raw byte content for agent.",
          "format": "byte",
          "type": "string"
        },
        "agentUri": {
          "type": "string",
          "description": "The URI to a Google Cloud Storage file containing the agent to import. Note: The URI must start with \"gs://\"."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase": {
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase",
      "type": "object",
      "properties": {
        "condition": {
          "type": "string",
          "description": "The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition)."
        },
        "caseContent": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent"
          },
          "description": "A list of case content."
        }
      },
      "description": "Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively."
    },
    "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata": {
      "description": "Metadata returned for the TestCases.BatchRunTestCases long running operation.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata",
      "properties": {
        "errors": {
          "description": "The test errors.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestError"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCardButton": {
      "description": "Optional. Contains information about a button.",
      "properties": {
        "text": {
          "description": "Optional. The text to show on the button.",
          "type": "string"
        },
        "postback": {
          "type": "string",
          "description": "Optional. The text to send back to the Dialogflow API or a URI to open."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCardButton"
    },
    "GoogleCloudDialogflowCxV3ResponseMessage": {
      "properties": {
        "endInteraction": {
          "readOnly": true,
          "description": "Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageEndInteraction"
        },
        "liveAgentHandoff": {
          "description": "Hands off conversation to a human agent.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff"
        },
        "outputAudioText": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText",
          "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message."
        },
        "playAudio": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio",
          "description": "Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way."
        },
        "text": {
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageText",
          "description": "Returns a text response."
        },
        "conversationSuccess": {
          "description": "Indicates that the conversation succeeded.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess"
        },
        "payload": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Returns a response containing a custom, platform-specific payload.",
          "type": "object"
        },
        "mixedAudio": {
          "description": "Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessageMixedAudio"
        }
      },
      "id": "GoogleCloudDialogflowCxV3ResponseMessage",
      "description": "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3TextInput": {
      "id": "GoogleCloudDialogflowCxV3TextInput",
      "properties": {
        "text": {
          "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents the natural language text to be processed."
    },
    "GoogleCloudDialogflowCxV3RunTestCaseMetadata": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3RunTestCaseMetadata",
      "description": "Metadata returned for the TestCases.RunTestCase long running operation."
    },
    "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio": {
      "id": "GoogleCloudDialogflowCxV3ResponseMessagePlayAudio",
      "description": "Specifies an audio clip to be played by the client as part of the response.",
      "type": "object",
      "properties": {
        "allowPlaybackInterruption": {
          "readOnly": true,
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean"
        },
        "audioUri": {
          "description": "Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo": {
      "id": "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo",
      "type": "object",
      "description": "Represents parameter information.",
      "properties": {
        "required": {
          "type": "boolean",
          "description": "Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes."
        },
        "displayName": {
          "type": "string",
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook."
        },
        "value": {
          "type": "any",
          "description": "Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Indicates that the parameter does not have a value.",
            "Indicates that the parameter value is invalid. This field can be used by the webhook to invalidate the parameter and ask the server to collect it from the user again.",
            "Indicates that the parameter has a value."
          ],
          "enum": [
            "PARAMETER_STATE_UNSPECIFIED",
            "EMPTY",
            "INVALID",
            "FILLED"
          ],
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored."
        },
        "justCollected": {
          "description": "Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowV2SessionEntityType": {
      "description": "A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).",
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          },
          "description": "Required. The collection of entities associated with this session entity type."
        },
        "name": {
          "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
          "type": "string"
        },
        "entityOverrideMode": {
          "type": "string",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ],
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ],
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition."
        }
      },
      "id": "GoogleCloudDialogflowV2SessionEntityType"
    },
    "GoogleCloudDialogflowV2beta1SessionEntityType": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityTypeEntity"
          },
          "description": "Required. The collection of entities associated with this session entity type."
        },
        "entityOverrideMode": {
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition.",
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ]
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented."
        }
      },
      "description": "A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).",
      "id": "GoogleCloudDialogflowV2beta1SessionEntityType"
    },
    "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse": {
      "id": "GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse",
      "description": "The request message for Participants.SuggestFaqAnswers.",
      "properties": {
        "contextSize": {
          "type": "integer",
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "format": "int32"
        },
        "latestMessage": {
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.",
          "type": "string"
        },
        "faqAnswers": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1FaqAnswer"
          },
          "description": "Output only. Answers extracted from FAQ documents.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata",
      "type": "object",
      "description": "Metadata returned for the TestCases.ExportTestCases long running operation.",
      "properties": {}
    },
    "GoogleCloudDialogflowV2beta1EventInput": {
      "type": "object",
      "description": "Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\"Hello #welcome_event.name! What can I do for you today?\"`.",
      "properties": {
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value"
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the event."
        },
        "languageCode": {
          "type": "string",
          "description": "Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1EventInput"
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "id": "GoogleProtobufEmpty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "GoogleCloudDialogflowCxV3beta1InputAudioConfig": {
      "id": "GoogleCloudDialogflowCxV3beta1InputAudioConfig",
      "description": "Instructs the speech recognizer on how to process the audio content.",
      "type": "object",
      "properties": {
        "phraseHints": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details."
        },
        "audioEncoding": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.",
            "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000."
          ],
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "AUDIO_ENCODING_LINEAR_16",
            "AUDIO_ENCODING_FLAC",
            "AUDIO_ENCODING_MULAW",
            "AUDIO_ENCODING_AMR",
            "AUDIO_ENCODING_AMR_WB",
            "AUDIO_ENCODING_OGG_OPUS",
            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
          ],
          "description": "Required. Audio encoding of the audio content to process."
        },
        "singleUtterance": {
          "description": "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods.",
          "type": "boolean"
        },
        "enableWordInfo": {
          "type": "boolean",
          "description": "Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information."
        },
        "modelVariant": {
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ],
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ],
          "type": "string",
          "description": "Optional. Which variant of the Speech model to use."
        },
        "model": {
          "description": "Optional. Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details.",
          "type": "string"
        },
        "sampleRateHertz": {
          "format": "int32",
          "type": "integer",
          "description": "Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details."
        }
      }
    },
    "GoogleCloudDialogflowV2VoiceSelectionParams": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender.",
          "type": "string"
        },
        "ssmlGender": {
          "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
          "enumDescriptions": [
            "An unspecified gender, which means that the client doesn't care which gender the selected voice will have.",
            "A male voice.",
            "A female voice.",
            "A gender-neutral voice."
          ],
          "type": "string",
          "enum": [
            "SSML_VOICE_GENDER_UNSPECIFIED",
            "SSML_VOICE_GENDER_MALE",
            "SSML_VOICE_GENDER_FEMALE",
            "SSML_VOICE_GENDER_NEUTRAL"
          ]
        }
      },
      "id": "GoogleCloudDialogflowV2VoiceSelectionParams",
      "description": "Description of which voice to use for speech synthesis."
    },
    "GoogleCloudDialogflowV2NotificationConfig": {
      "properties": {
        "topic": {
          "type": "string",
          "description": "Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. Notification works for phone calls, if this topic either is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic project. Format: `projects//locations//topics/`."
        },
        "messageFormat": {
          "description": "Format of message.",
          "enum": [
            "MESSAGE_FORMAT_UNSPECIFIED",
            "PROTO",
            "JSON"
          ],
          "type": "string",
          "enumDescriptions": [
            "If it is unspeified, PROTO will be used.",
            "Pubsub message will be serialized proto.",
            "Pubsub message will be json."
          ]
        }
      },
      "description": "Defines notification behavior.",
      "id": "GoogleCloudDialogflowV2NotificationConfig",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Message": {
      "description": "Represents a message posted into a conversation.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time when the message was created.",
          "readOnly": true,
          "type": "string"
        },
        "participant": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The participant that sends this message."
        },
        "messageAnnotation": {
          "description": "Output only. The annotation for the message.",
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowV2MessageAnnotation"
        },
        "participantRole": {
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Output only. The role of the participant.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ]
        },
        "content": {
          "type": "string",
          "description": "Required. The message content."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\"."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2Message"
    },
    "GoogleCloudDialogflowV2Version": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2Version",
      "description": "You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for: - testing - development - production - etc. For more information, see the [versions and environments guide](https://cloud.google.com/dialogflow/docs/agents-versions).",
      "properties": {
        "createTime": {
          "readOnly": true,
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The creation time of this version. This field is read-only, i.e., it cannot be set by create and update methods."
        },
        "description": {
          "type": "string",
          "description": "Optional. The developer-provided description of this version."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`"
        },
        "versionNumber": {
          "readOnly": true,
          "type": "integer",
          "description": "Output only. The sequential number of this version. This field is read-only which means it cannot be set by create and update methods.",
          "format": "int32"
        },
        "status": {
          "enum": [
            "VERSION_STATUS_UNSPECIFIED",
            "IN_PROGRESS",
            "READY",
            "FAILED"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "Not specified. This value is not used.",
            "Version is not ready to serve (e.g. training is in progress).",
            "Version is ready to serve.",
            "Version training failed."
          ],
          "description": "Output only. The status of this version. This field is read-only and cannot be set by create and update methods.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageMediaContent": {
      "description": "The media content card for Actions on Google.",
      "properties": {
        "mediaObjects": {
          "description": "Required. List of media objects.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject"
          },
          "type": "array"
        },
        "mediaType": {
          "enum": [
            "RESPONSE_MEDIA_TYPE_UNSPECIFIED",
            "AUDIO"
          ],
          "description": "Optional. What type of media is the content (ie \"audio\").",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Response media type is audio."
          ]
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageMediaContent"
    },
    "GoogleCloudDialogflowV2IntentMessageListSelect": {
      "description": "The card for presenting a list of options to select from.",
      "properties": {
        "subtitle": {
          "description": "Optional. Subtitle of the list.",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageListSelectItem"
          },
          "description": "Required. List items.",
          "type": "array"
        },
        "title": {
          "description": "Optional. The overall title of the list.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageListSelect"
    },
    "GoogleCloudDialogflowV2Context": {
      "description": "Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).",
      "id": "GoogleCloudDialogflowV2Context",
      "properties": {
        "lifespanCount": {
          "format": "int32",
          "description": "Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.",
          "type": "integer"
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
        },
        "parameters": {
          "description": "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2InputAudioConfig": {
      "properties": {
        "singleUtterance": {
          "type": "boolean",
          "description": "If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods. Note: When specified, InputAudioConfig.single_utterance takes precedence over StreamingDetectIntentRequest.single_utterance."
        },
        "disableNoSpeechRecognizedEvent": {
          "type": "boolean",
          "description": "Only used in Participants.AnalyzeContent and Participants.StreamingAnalyzeContent. If `false` and recognition doesn't return any result, trigger `NO_SPEECH_RECOGNIZED` event to Dialogflow agent."
        },
        "modelVariant": {
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ],
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ],
          "description": "Which variant of the Speech model to use.",
          "type": "string"
        },
        "enableWordInfo": {
          "description": "If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.",
          "type": "boolean"
        },
        "speechContexts": {
          "type": "array",
          "description": "Context information to assist speech recognition. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SpeechContext"
          }
        },
        "model": {
          "type": "string",
          "description": "Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details."
        },
        "phraseHints": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details. This field is deprecated. Please use [speech_contexts]() instead. If you specify both [phrase_hints]() and [speech_contexts](), Dialogflow will treat the [phrase_hints]() as a single additional [SpeechContext]()."
        },
        "audioEncoding": {
          "description": "Required. Audio encoding of the audio content to process.",
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "AUDIO_ENCODING_LINEAR_16",
            "AUDIO_ENCODING_FLAC",
            "AUDIO_ENCODING_MULAW",
            "AUDIO_ENCODING_AMR",
            "AUDIO_ENCODING_AMR_WB",
            "AUDIO_ENCODING_OGG_OPUS",
            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.",
            "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000."
          ]
        },
        "languageCode": {
          "description": "Required. The language of the supplied audio. Dialogflow does not do translations. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        },
        "sampleRateHertz": {
          "description": "Required. Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "GoogleCloudDialogflowV2InputAudioConfig",
      "type": "object",
      "description": "Instructs the speech recognizer how to process the audio content."
    },
    "GoogleCloudDialogflowCxV3TransitionRoute": {
      "description": "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3TransitionRoute",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The unique identifier of this transition route.",
          "readOnly": true
        },
        "condition": {
          "type": "string",
          "description": "The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled."
        },
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "triggerFulfillment": {
          "description": "The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.",
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment"
        },
        "intent": {
          "description": "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.",
          "type": "string"
        },
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageCard": {
      "properties": {
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageCardButton"
          },
          "description": "Optional. The collection of card buttons."
        },
        "imageUri": {
          "type": "string",
          "description": "Optional. The public URI to an image file for the card."
        },
        "title": {
          "description": "Optional. The title of the card.",
          "type": "string"
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageCard",
      "description": "The card response message.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata": {
      "properties": {},
      "description": "Metadata returned for the TestCases.RunTestCase long running operation.",
      "id": "GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata",
      "type": "object"
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig": {
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig",
      "type": "object",
      "properties": {
        "dialogflowQuerySource": {
          "description": "Query from Dialogflow agent. It is used by DIALOGFLOW_ASSIST.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource"
        },
        "maxResults": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of results to return. Currently, if unset, defaults to 10. And the max number is 20."
        },
        "knowledgeBaseQuerySource": {
          "description": "Query from knowledgebase. It is used by: ARTICLE_SUGGESTION, FAQ.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource"
        },
        "contextFilterSettings": {
          "description": "Determines how recent conversation context is filtered when generating suggestions. If unspecified, no messages will be dropped.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings"
        },
        "documentQuerySource": {
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource",
          "description": "Query from knowledge base document. It is used by: SMART_REPLY, SMART_COMPOSE."
        },
        "confidenceThreshold": {
          "type": "number",
          "format": "float",
          "description": "Confidence threshold of query result. Agent Assist gives each suggestion a score in the range [0.0, 1.0], based on the relevance between the suggestion and the current conversation context. A score of 0.0 has no relevance, while a score of 1.0 has high relevance. Only suggestions with a score greater than or equal to the value of this field are included in the results. For a baseline model (the default), the recommended value is in the range [0.05, 0.1]. For a custom model, there is no recommended value. Tune this value by starting from a very low value and slowly increasing until you have desired results. If this field is not set, it defaults to 0.0, which means that all suggestions are returned. Supported features: ARTICLE_SUGGESTION."
        }
      },
      "description": "Config for suggestion query."
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult",
      "properties": {
        "score": {
          "type": "number",
          "format": "float",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment)."
        },
        "magnitude": {
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "format": "float",
          "type": "number"
        }
      },
      "description": "Represents the result of sentiment analysis."
    },
    "GoogleCloudDialogflowV2IntentTrainingPhrase": {
      "description": "Represents an example that the agent is trained on.",
      "id": "GoogleCloudDialogflowV2IntentTrainingPhrase",
      "properties": {
        "timesAddedCount": {
          "description": "Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "Required. The type of the training phrase.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXAMPLE",
            "TEMPLATE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Examples do not contain @-prefixed entity type names, but example parts can be annotated with entity types.",
            "Templates are not annotated with entity types, but they can contain @-prefixed entity type names as substrings. Template mode has been deprecated. Example mode is the only supported way to create new training phrases. If you have existing training phrases that you've created in template mode, those will continue to work."
          ]
        },
        "parts": {
          "type": "array",
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentTrainingPhrasePart"
          }
        },
        "name": {
          "description": "Output only. The unique identifier of this training phrase.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2QueryResult": {
      "description": "Represents the result of conversational query or event processing.",
      "id": "GoogleCloudDialogflowV2QueryResult",
      "properties": {
        "parameters": {
          "description": "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "intentDetectionConfidence": {
          "type": "number",
          "format": "float",
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list."
        },
        "diagnosticInfo": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors"
        },
        "queryText": {
          "description": "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input.",
          "type": "string"
        },
        "speechRecognitionConfidence": {
          "format": "float",
          "type": "number",
          "description": "The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult."
        },
        "webhookPayload": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.",
          "type": "object"
        },
        "allRequiredParamsPresent": {
          "type": "boolean",
          "description": "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
        },
        "webhookSource": {
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response.",
          "type": "string"
        },
        "action": {
          "type": "string",
          "description": "The action name from the matched intent."
        },
        "fulfillmentText": {
          "description": "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.",
          "type": "string"
        },
        "sentimentAnalysisResult": {
          "$ref": "GoogleCloudDialogflowV2SentimentAnalysisResult",
          "description": "The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request."
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowV2Intent",
          "description": "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`."
        },
        "fulfillmentMessages": {
          "description": "The collection of rich messages to present to the user.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          }
        },
        "languageCode": {
          "type": "string",
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes."
        },
        "outputContexts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "type": "array",
          "description": "The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig": {
      "description": "Detail human agent assistant config.",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig",
      "properties": {
        "featureConfigs": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig"
          },
          "description": "Configuration of different suggestion features. One feature can have only one config.",
          "type": "array"
        },
        "groupSuggestionResponses": {
          "type": "boolean",
          "description": "If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If `group_suggestion_responses` set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse": {
      "type": "object",
      "properties": {
        "textToSpeech": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml."
        },
        "displayText": {
          "description": "Optional. The text to display.",
          "type": "string"
        },
        "ssml": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse",
      "description": "The simple response message containing speech or text."
    },
    "GoogleCloudDialogflowV2SuggestionResult": {
      "properties": {
        "suggestArticlesResponse": {
          "$ref": "GoogleCloudDialogflowV2SuggestArticlesResponse",
          "description": "SuggestArticlesResponse if request is for ARTICLE_SUGGESTION."
        },
        "error": {
          "description": "Error status if the request failed.",
          "$ref": "GoogleRpcStatus"
        },
        "suggestFaqAnswersResponse": {
          "description": "SuggestFaqAnswersResponse if request is for FAQ_ANSWER.",
          "$ref": "GoogleCloudDialogflowV2SuggestFaqAnswersResponse"
        }
      },
      "type": "object",
      "description": "One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.",
      "id": "GoogleCloudDialogflowV2SuggestionResult"
    },
    "GoogleCloudDialogflowV2DetectIntentResponse": {
      "description": "The message returned from the DetectIntent method.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2DetectIntentResponse",
      "properties": {
        "webhookStatus": {
          "$ref": "GoogleRpcStatus",
          "description": "Specifies the status of the webhook request."
        },
        "outputAudio": {
          "description": "The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.fulfillment_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content.",
          "format": "byte",
          "type": "string"
        },
        "outputAudioConfig": {
          "$ref": "GoogleCloudDialogflowV2OutputAudioConfig",
          "description": "The config used by the speech synthesizer to generate the output audio."
        },
        "queryResult": {
          "description": "The selected results of the conversational query or event processing. See `alternative_query_results` for additional potential results.",
          "$ref": "GoogleCloudDialogflowV2QueryResult"
        },
        "responseId": {
          "type": "string",
          "description": "The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageImage": {
      "properties": {
        "accessibilityText": {
          "type": "string",
          "description": "A text description of the image to be used for accessibility, e.g., screen readers. Required if image_uri is set for CarouselSelect."
        },
        "imageUri": {
          "description": "Optional. The public URI to an image file.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The image response message.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageImage"
    },
    "GoogleCloudDialogflowV2beta1AnnotatedMessagePart": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. A part of a message possibly annotated with an entity."
        },
        "formattedValue": {
          "type": "any",
          "description": "Optional. The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { \"amount\": 5, \"currency\": \"USD\" } "
        },
        "entityType": {
          "type": "string",
          "description": "Optional. The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity."
        }
      },
      "type": "object",
      "description": "Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.",
      "id": "GoogleCloudDialogflowV2beta1AnnotatedMessagePart"
    },
    "GoogleCloudDialogflowV2beta1QueryResult": {
      "description": "Represents the result of conversational query or event processing.",
      "type": "object",
      "properties": {
        "intent": {
          "$ref": "GoogleCloudDialogflowV2beta1Intent",
          "description": "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`."
        },
        "webhookPayload": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.",
          "type": "object"
        },
        "speechRecognitionConfidence": {
          "format": "float",
          "description": "The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.",
          "type": "number"
        },
        "intentDetectionConfidence": {
          "type": "number",
          "format": "float",
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list."
        },
        "sentimentAnalysisResult": {
          "description": "The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request.",
          "$ref": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult"
        },
        "knowledgeAnswers": {
          "$ref": "GoogleCloudDialogflowV2beta1KnowledgeAnswers",
          "description": "The result from Knowledge Connector (if any), ordered by decreasing `KnowledgeAnswers.match_confidence`."
        },
        "queryText": {
          "type": "string",
          "description": "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input."
        },
        "fulfillmentText": {
          "description": "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.",
          "type": "string"
        },
        "action": {
          "type": "string",
          "description": "The action name from the matched intent."
        },
        "webhookSource": {
          "type": "string",
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response."
        },
        "fulfillmentMessages": {
          "description": "The collection of rich messages to present to the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          },
          "type": "array"
        },
        "languageCode": {
          "type": "string",
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes."
        },
        "diagnosticInfo": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors"
        },
        "outputContexts": {
          "description": "The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          }
        },
        "allRequiredParamsPresent": {
          "type": "boolean",
          "description": "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1QueryResult"
    },
    "GoogleCloudDialogflowV2ListDocumentsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "documents": {
          "description": "The list of documents.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Document"
          },
          "type": "array"
        }
      },
      "description": "Response message for Documents.ListDocuments.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2ListDocumentsResponse"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageText": {
      "id": "GoogleCloudDialogflowCxV3ResponseMessageText",
      "type": "object",
      "description": "The text response message.",
      "properties": {
        "allowPlaybackInterruption": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request."
        },
        "text": {
          "description": "Required. A collection of text responses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2KnowledgeBase": {
      "id": "GoogleCloudDialogflowV2KnowledgeBase",
      "type": "object",
      "description": "A knowledge base represents a collection of knowledge documents that you provide to Dialogflow. Your knowledge documents contain information that may be useful during conversations with end-users. Some Dialogflow features use knowledge bases when looking for a response to an end-user input. For more information, see the [knowledge base guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases). Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`.",
      "properties": {
        "displayName": {
          "description": "Required. The display name of the knowledge base. The name must be 1024 bytes or less; otherwise, the creation request fails.",
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "Language which represents the KnowledgeBase. When the KnowledgeBase is created/updated, expect this to be present for non en-us languages. When unspecified, the default language code en-us applies."
        },
        "name": {
          "description": "The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2ListEnvironmentsResponse": {
      "id": "GoogleCloudDialogflowV2ListEnvironmentsResponse",
      "properties": {
        "environments": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Environment"
          },
          "description": "The list of agent environments. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object",
      "description": "The response message for Environments.ListEnvironments."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation",
      "description": "Opens the device's location chooser so the user can pick a location to send back to the agent.",
      "type": "object",
      "properties": {}
    },
    "GoogleCloudDialogflowV2beta1KnowledgeAnswers": {
      "id": "GoogleCloudDialogflowV2beta1KnowledgeAnswers",
      "description": "Represents the result of querying a Knowledge base.",
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer"
          },
          "description": "A list of answers from Knowledge Connector."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCard": {
      "description": "Table card for Actions on Google.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCard",
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "description": "Optional. Rows in this table of data.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow"
          }
        },
        "columnProperties": {
          "description": "Optional. Display properties for the columns in this table.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties"
          },
          "type": "array"
        },
        "buttons": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          },
          "type": "array",
          "description": "Optional. List of buttons for the card."
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. Image which should be displayed on the card."
        },
        "title": {
          "description": "Required. Title of the card.",
          "type": "string"
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. Subtitle to the title."
        }
      }
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase": {
      "type": "object",
      "properties": {
        "condition": {
          "description": "The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).",
          "type": "string"
        },
        "caseContent": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent"
          },
          "description": "A list of case content."
        }
      },
      "description": "Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.",
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase"
    },
    "GoogleLongrunningOperation": {
      "type": "object",
      "id": "GoogleLongrunningOperation",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleCloudDialogflowV2SynthesizeSpeechConfig": {
      "id": "GoogleCloudDialogflowV2SynthesizeSpeechConfig",
      "description": "Configuration of how speech should be synthesized.",
      "properties": {
        "voice": {
          "description": "Optional. The desired voice of the synthesized audio.",
          "$ref": "GoogleCloudDialogflowV2VoiceSelectionParams"
        },
        "speakingRate": {
          "type": "number",
          "format": "double",
          "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values \u003c 0.25 or \u003e 4.0 will return an error."
        },
        "pitch": {
          "type": "number",
          "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.",
          "format": "double"
        },
        "volumeGainDb": {
          "format": "double",
          "type": "number",
          "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that."
        },
        "effectsProfileId": {
          "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSuggestion": {
      "properties": {
        "title": {
          "description": "Required. The text shown the in the suggestion chip.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSuggestion",
      "description": "The suggestion chip message that the user can tap to quickly post a reply to the conversation.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2AnalyzeContentRequest": {
      "description": "The request message for Participants.AnalyzeContent.",
      "type": "object",
      "properties": {
        "textInput": {
          "$ref": "GoogleCloudDialogflowV2TextInput",
          "description": "The natural language text to be processed."
        },
        "eventInput": {
          "$ref": "GoogleCloudDialogflowV2EventInput",
          "description": "An input event to send to Dialogflow."
        },
        "queryParams": {
          "description": "Parameters for a Dialogflow virtual-agent query.",
          "$ref": "GoogleCloudDialogflowV2QueryParameters"
        },
        "replyAudioConfig": {
          "$ref": "GoogleCloudDialogflowV2OutputAudioConfig",
          "description": "Speech synthesis configuration. The speech synthesis settings for a virtual agent that may be configured for the associated conversation profile are not used when calling AnalyzeContent. If this configuration is not supplied, speech synthesis is disabled."
        },
        "requestId": {
          "description": "A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2AnalyzeContentRequest"
    },
    "GoogleCloudDialogflowCxV3TestRunDifference": {
      "properties": {
        "description": {
          "type": "string",
          "description": "A description of the diff, showing the actual output vs expected output."
        },
        "type": {
          "type": "string",
          "description": "The type of diff.",
          "enumDescriptions": [
            "Should never be used.",
            "The intent.",
            "The page.",
            "The parameters.",
            "The message utterance."
          ],
          "enum": [
            "DIFF_TYPE_UNSPECIFIED",
            "INTENT",
            "PAGE",
            "PARAMETERS",
            "UTTERANCE"
          ]
        }
      },
      "description": "The description of differences between original and replayed agent output.",
      "id": "GoogleCloudDialogflowCxV3TestRunDifference",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
        }
      },
      "type": "object",
      "description": "Metadata for DeleteDocument operation.",
      "id": "GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata"
    },
    "GoogleCloudDialogflowV2ListParticipantsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results or empty if there are no more results in the list.",
          "type": "string"
        },
        "participants": {
          "description": "The list of participants. There is a maximum number of items returned based on the page_size field in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Participant"
          }
        }
      },
      "description": "The response message for Participants.ListParticipants.",
      "id": "GoogleCloudDialogflowV2ListParticipantsResponse"
    },
    "GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse": {
      "description": "The response message for Intents.BatchUpdateIntents.",
      "properties": {
        "intents": {
          "description": "The collection of updated or created intents.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Intent"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse"
    },
    "GoogleCloudDialogflowCxV3beta1EventHandler": {
      "properties": {
        "targetPage": {
          "type": "string",
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
        },
        "triggerFulfillment": {
          "description": "The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.",
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment"
        },
        "targetFlow": {
          "type": "string",
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`."
        },
        "event": {
          "type": "string",
          "description": "Required. The name of the event to handle."
        },
        "name": {
          "readOnly": true,
          "description": "Output only. The unique identifier of this event handler.",
          "type": "string"
        }
      },
      "description": "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.",
      "id": "GoogleCloudDialogflowCxV3beta1EventHandler",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText": {
      "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText",
      "properties": {
        "allowPlaybackInterruption": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request."
        },
        "ssml": {
          "type": "string",
          "description": "The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml)."
        },
        "text": {
          "description": "The raw text to be synthesized.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessage": {
      "id": "GoogleCloudDialogflowV2IntentMessage",
      "properties": {
        "tableCard": {
          "description": "Table card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageTableCard"
        },
        "listSelect": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageListSelect",
          "description": "The list card response for Actions on Google."
        },
        "suggestions": {
          "description": "The suggestion chips for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageSuggestions"
        },
        "platform": {
          "description": "Optional. The platform that this message is intended for.",
          "enumDescriptions": [
            "Default platform.",
            "Facebook.",
            "Slack.",
            "Telegram.",
            "Kik.",
            "Skype.",
            "Line.",
            "Viber.",
            "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
            "Google Hangouts."
          ],
          "type": "string",
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "FACEBOOK",
            "SLACK",
            "TELEGRAM",
            "KIK",
            "SKYPE",
            "LINE",
            "VIBER",
            "ACTIONS_ON_GOOGLE",
            "GOOGLE_HANGOUTS"
          ]
        },
        "payload": {
          "description": "A custom platform-specific response.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "card": {
          "description": "The card response.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageCard"
        },
        "quickReplies": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageQuickReplies",
          "description": "The quick replies response."
        },
        "carouselSelect": {
          "description": "The carousel card response for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageCarouselSelect"
        },
        "mediaContent": {
          "description": "The media content card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageMediaContent"
        },
        "simpleResponses": {
          "description": "The voice and text-only responses for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageSimpleResponses"
        },
        "text": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageText",
          "description": "The text response."
        },
        "linkOutSuggestion": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion",
          "description": "The link out suggestion chip for Actions on Google."
        },
        "browseCarouselCard": {
          "description": "Browse carousel card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard"
        },
        "basicCard": {
          "description": "The basic card response for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCard"
        },
        "image": {
          "description": "The image response.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        }
      },
      "type": "object",
      "description": "A rich response message. Corresponds to the intent `Response` field in the Dialogflow console. For more information, see [Rich response messages](https://cloud.google.com/dialogflow/docs/intents-rich-messages)."
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo": {
      "type": "object",
      "description": "Represents intent information communicated to the webhook.",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo",
      "properties": {
        "parameters": {
          "additionalProperties": {
            "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue"
          },
          "type": "object",
          "description": "Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here."
        },
        "lastMatchedIntent": {
          "description": "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        },
        "confidence": {
          "type": "number",
          "description": "The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float"
        },
        "displayName": {
          "type": "string",
          "description": "Always present. The display name of the last matched intent."
        }
      }
    },
    "GoogleCloudDialogflowV2ExportAgentRequest": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2ExportAgentRequest",
      "description": "The request message for Agents.ExportAgent.",
      "properties": {
        "agentUri": {
          "type": "string",
          "description": "Required. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the agent to. The format of this URI must be `gs:///`. If left unspecified, the serialized agent is returned inline."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1FaqAnswer": {
      "description": "Represents answer from \"frequently asked questions\".",
      "properties": {
        "answerRecord": {
          "type": "string",
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\""
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "confidence": {
          "format": "float",
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        },
        "metadata": {
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "source": {
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`.",
          "type": "string"
        },
        "question": {
          "type": "string",
          "description": "The corresponding FAQ question."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1FaqAnswer"
    },
    "GoogleCloudDialogflowCxV3beta1TestRunDifference": {
      "type": "object",
      "description": "The description of differences between original and replayed agent output.",
      "id": "GoogleCloudDialogflowCxV3beta1TestRunDifference",
      "properties": {
        "description": {
          "description": "A description of the diff, showing the actual output vs expected output.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "Should never be used.",
            "The intent.",
            "The page.",
            "The parameters.",
            "The message utterance."
          ],
          "enum": [
            "DIFF_TYPE_UNSPECIFIED",
            "INTENT",
            "PAGE",
            "PARAMETERS",
            "UTTERANCE"
          ],
          "description": "The type of diff."
        }
      }
    },
    "GoogleCloudDialogflowV2SpeechToTextConfig": {
      "id": "GoogleCloudDialogflowV2SpeechToTextConfig",
      "description": "Configures speech transcription for ConversationProfile.",
      "properties": {
        "speechModelVariant": {
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ],
          "type": "string",
          "description": "Optional. The speech model used in speech to text. `SPEECH_MODEL_VARIANT_UNSPECIFIED`, `USE_BEST_AVAILABLE` will be treated as `USE_ENHANCED`. It can be overridden in AnalyzeContentRequest and StreamingAnalyzeContentRequest request.",
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2DetectIntentRequest": {
      "description": "The request to detect user's intent.",
      "id": "GoogleCloudDialogflowV2DetectIntentRequest",
      "type": "object",
      "properties": {
        "queryParams": {
          "description": "The parameters of this query.",
          "$ref": "GoogleCloudDialogflowV2QueryParameters"
        },
        "outputAudioConfigMask": {
          "format": "google-fieldmask",
          "description": "Mask for output_audio_config indicating which settings in this request-level config should override speech synthesizer settings defined at agent-level. If unspecified or empty, output_audio_config replaces the agent-level config in its entirety.",
          "type": "string"
        },
        "inputAudio": {
          "type": "string",
          "description": "The natural language speech audio to be processed. This field should be populated iff `query_input` is set to an input audio config. A single request can contain up to 1 minute of speech audio data.",
          "format": "byte"
        },
        "queryInput": {
          "description": "Required. The input specification. It can be set to: 1. an audio config which instructs the speech recognizer how to process the speech audio, 2. a conversational query in the form of text, or 3. an event that specifies which intent to trigger.",
          "$ref": "GoogleCloudDialogflowV2QueryInput"
        },
        "outputAudioConfig": {
          "description": "Instructs the speech synthesizer how to generate the output audio. If this field is not set and agent-level speech synthesizer is not configured, no output audio is generated.",
          "$ref": "GoogleCloudDialogflowV2OutputAudioConfig"
        }
      }
    },
    "GoogleCloudDialogflowV2OutputAudio": {
      "id": "GoogleCloudDialogflowV2OutputAudio",
      "type": "object",
      "properties": {
        "audio": {
          "description": "The natural language speech audio.",
          "format": "byte",
          "type": "string"
        },
        "config": {
          "$ref": "GoogleCloudDialogflowV2OutputAudioConfig",
          "description": "Instructs the speech synthesizer how to generate the speech audio."
        }
      },
      "description": "Represents the natural language speech audio to be played to the end user."
    },
    "GoogleCloudDialogflowV2beta1IntentParameter": {
      "properties": {
        "isList": {
          "type": "boolean",
          "description": "Optional. Indicates whether the parameter represents a list of values."
        },
        "defaultValue": {
          "type": "string",
          "description": "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`."
        },
        "prompts": {
          "type": "array",
          "description": "Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of this parameter."
        },
        "value": {
          "type": "string",
          "description": "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`."
        },
        "mandatory": {
          "description": "Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value.",
          "type": "boolean"
        },
        "entityTypeDisplayName": {
          "description": "Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of the parameter."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentParameter",
      "type": "object",
      "description": "Represents intent parameters."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech": {
      "properties": {
        "text": {
          "type": "string",
          "description": "The raw text to be synthesized."
        },
        "ssml": {
          "description": "The SSML to be synthesized. For more information, see [SSML](https://developers.google.com/actions/reference/ssml).",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech",
      "description": "Synthesizes speech and plays back the synthesized audio to the caller in Telephony Gateway. Telephony Gateway takes the synthesizer settings from `DetectIntentResponse.output_audio_config` which can either be set at request-level or can come from the agent-level synthesizer config.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Sentiment": {
      "id": "GoogleCloudDialogflowV2Sentiment",
      "properties": {
        "score": {
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "format": "float",
          "type": "number"
        },
        "magnitude": {
          "type": "number",
          "format": "float",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative)."
        }
      },
      "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2ReloadDocumentRequest": {
      "properties": {
        "contentUri": {
          "description": "Optional. The path of gcs source file for reloading document content. For now, only gcs uri is supported. For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2ReloadDocumentRequest",
      "description": "Request message for Documents.ReloadDocument.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2ExportAgentResponse": {
      "id": "GoogleCloudDialogflowV2ExportAgentResponse",
      "description": "The response message for Agents.ExportAgent.",
      "type": "object",
      "properties": {
        "agentContent": {
          "description": "Zip compressed raw byte content for agent.",
          "format": "byte",
          "type": "string"
        },
        "agentUri": {
          "type": "string",
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput": {
      "description": "The input from the human user.",
      "properties": {
        "isWebhookEnabled": {
          "description": "If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.",
          "type": "boolean"
        },
        "input": {
          "$ref": "GoogleCloudDialogflowCxV3beta1QueryInput",
          "description": "Supports text input, event input, dtmf input in the test case."
        },
        "injectedParameters": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Parameters that need to be injected into the conversation during intent detection."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput"
    },
    "GoogleCloudDialogflowV2EntityType": {
      "properties": {
        "displayName": {
          "description": "Required. The name of the entity type.",
          "type": "string"
        },
        "name": {
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`.",
          "type": "string"
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          },
          "description": "Optional. The collection of entity entries associated with the entity type.",
          "type": "array"
        },
        "enableFuzzyExtraction": {
          "description": "Optional. Enables fuzzy entity extraction during classification.",
          "type": "boolean"
        },
        "kind": {
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a reference value.",
            "List entity types contain a set of entries that do not map to reference values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "type": "string",
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ],
          "description": "Required. Indicates the kind of entity type."
        },
        "autoExpansionMode": {
          "description": "Optional. Indicates whether the entity type can be automatically expanded.",
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ]
        }
      },
      "id": "GoogleCloudDialogflowV2EntityType",
      "description": "Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1ImportDocumentsResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1ImportDocumentsResponse",
      "description": "Response message for Documents.ImportDocuments.",
      "properties": {
        "warnings": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Includes details about skipped documents or any other warnings.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2ListMessagesResponse": {
      "id": "GoogleCloudDialogflowV2ListMessagesResponse",
      "description": "The response message for Conversations.ListMessages.",
      "properties": {
        "messages": {
          "description": "The list of messages. There will be a maximum number of items returned based on the page_size field in the request. `messages` is sorted by `create_time` in descending order.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Message"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentParameter": {
      "type": "object",
      "description": "Represents intent parameters.",
      "id": "GoogleCloudDialogflowV2IntentParameter",
      "properties": {
        "isList": {
          "description": "Optional. Indicates whether the parameter represents a list of values.",
          "type": "boolean"
        },
        "name": {
          "description": "The unique identifier of this parameter.",
          "type": "string"
        },
        "mandatory": {
          "type": "boolean",
          "description": "Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value."
        },
        "defaultValue": {
          "description": "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of the parameter."
        },
        "value": {
          "description": "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`.",
          "type": "string"
        },
        "entityTypeDisplayName": {
          "type": "string",
          "description": "Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided."
        },
        "prompts": {
          "type": "array",
          "description": "Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem": {
      "properties": {
        "title": {
          "description": "Required. Title of the carousel item.",
          "type": "string"
        },
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "description": {
          "description": "Optional. The body text of the card.",
          "type": "string"
        },
        "info": {
          "description": "Required. Additional info about the option item.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo"
        }
      },
      "description": "An item in the carousel.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem"
    },
    "GoogleCloudDialogflowV2beta1ExportAgentResponse": {
      "id": "GoogleCloudDialogflowV2beta1ExportAgentResponse",
      "type": "object",
      "description": "The response message for Agents.ExportAgent.",
      "properties": {
        "agentContent": {
          "description": "Zip compressed raw byte content for agent.",
          "format": "byte",
          "type": "string"
        },
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2Conversation": {
      "id": "GoogleCloudDialogflowV2Conversation",
      "description": "Represents a conversation. A conversation is an interaction between an agent, including live agents and Dialogflow agents, and a support customer. Conversations can include phone calls and text-based chat sessions.",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The unique identifier of this conversation. Format: `projects//locations//conversations/`."
        },
        "conversationProfile": {
          "description": "Required. The Conversation Profile to be used to configure this Conversation. This field cannot be updated. Format: `projects//locations//conversationProfiles/`.",
          "type": "string"
        },
        "lifecycleState": {
          "type": "string",
          "description": "Output only. The current state of the Conversation.",
          "enumDescriptions": [
            "Unknown.",
            "Conversation is currently open for media analysis.",
            "Conversation has been completed."
          ],
          "readOnly": true,
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "IN_PROGRESS",
            "COMPLETED"
          ]
        },
        "endTime": {
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The time the conversation was finished.",
          "type": "string"
        },
        "conversationStage": {
          "enumDescriptions": [
            "Unknown. Should never be used after a conversation is successfully created.",
            "The conversation should return virtual agent responses into the conversation.",
            "The conversation should not provide responses, just listen and provide suggestions."
          ],
          "description": "The stage of a conversation. It indicates whether the virtual agent or a human agent is handling the conversation. If the conversation is created with the conversation profile that has Dialogflow config set, defaults to ConversationStage.VIRTUAL_AGENT_STAGE; Otherwise, defaults to ConversationStage.HUMAN_ASSIST_STAGE. If the conversation is created with the conversation profile that has Dialogflow config set but explicitly sets conversation_stage to ConversationStage.HUMAN_ASSIST_STAGE, it skips ConversationStage.VIRTUAL_AGENT_STAGE stage and directly goes to ConversationStage.HUMAN_ASSIST_STAGE.",
          "enum": [
            "CONVERSATION_STAGE_UNSPECIFIED",
            "VIRTUAL_AGENT_STAGE",
            "HUMAN_ASSIST_STAGE"
          ],
          "type": "string"
        },
        "phoneNumber": {
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowV2ConversationPhoneNumber",
          "description": "Output only. It will not be empty if the conversation is to be connected over telephony."
        },
        "startTime": {
          "description": "Output only. The time the conversation was started.",
          "format": "google-datetime",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest": {
      "id": "GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest",
      "type": "object",
      "properties": {
        "entityTypeBatchUri": {
          "description": "The URI to a Google Cloud Storage file containing entity types to update or create. The file format can either be a serialized proto (of EntityBatch type) or a JSON object. Note: The URI must start with \"gs://\".",
          "type": "string"
        },
        "languageCode": {
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
          "type": "string"
        },
        "updateMask": {
          "description": "Optional. The mask to control which fields get updated.",
          "type": "string",
          "format": "google-fieldmask"
        },
        "entityTypeBatchInline": {
          "description": "The collection of entity types to update or create.",
          "$ref": "GoogleCloudDialogflowV2EntityTypeBatch"
        }
      },
      "description": "The request message for EntityTypes.BatchUpdateEntityTypes."
    },
    "GoogleCloudDialogflowCxV3beta1Intent": {
      "type": "object",
      "properties": {
        "isFallback": {
          "type": "boolean",
          "description": "Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests."
        },
        "trainingPhrases": {
          "description": "The collection of training phrases the agent is trained on to identify the intent.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase"
          },
          "type": "array"
        },
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentParameter"
          },
          "description": "The collection of parameters associated with the intent.",
          "type": "array"
        },
        "displayName": {
          "description": "Required. The human-readable name of the intent, unique within the agent.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`."
        },
        "description": {
          "description": "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys-\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. \"sys-head\" means the intent is a head intent. \"sys-contextual\" means the intent is a contextual intent.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1Intent",
      "description": "An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent."
    },
    "GoogleCloudDialogflowCxV3ExportTestCasesMetadata": {
      "properties": {},
      "id": "GoogleCloudDialogflowCxV3ExportTestCasesMetadata",
      "description": "Metadata returned for the TestCases.ExportTestCases long running operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3IntentParameter": {
      "properties": {
        "id": {
          "description": "Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts.",
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
        },
        "isList": {
          "type": "boolean",
          "description": "Indicates whether the parameter represents a list of values."
        },
        "redact": {
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.",
          "type": "boolean"
        }
      },
      "description": "Represents an intent parameter.",
      "id": "GoogleCloudDialogflowCxV3IntentParameter",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart": {
      "id": "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart",
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        },
        "userDefined": {
          "description": "Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true.",
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "description": "Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase."
        },
        "alias": {
          "description": "Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase.",
          "type": "string"
        }
      },
      "description": "Represents a part of a training phrase.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton",
      "description": "The button object that appears at the bottom of a card.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Required. The title of the button."
        },
        "openUriAction": {
          "description": "Required. Action to take when a user taps on the button.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect": {
      "description": "The card for presenting a carousel of options to select from.",
      "properties": {
        "items": {
          "type": "array",
          "description": "Required. Carousel items.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1TestError": {
      "type": "object",
      "description": "Error info for running a test.",
      "properties": {
        "testTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The timestamp when the test was completed."
        },
        "status": {
          "description": "The status associated with the test.",
          "$ref": "GoogleRpcStatus"
        },
        "testCase": {
          "description": "The test case resource name.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1TestError"
    },
    "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata": {
      "type": "object",
      "properties": {
        "state": {
          "description": "Required. Output only. The current state of this operation.",
          "readOnly": true,
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ]
        }
      },
      "id": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
      "description": "Metadata in google::longrunning::Operation for Knowledge operations."
    },
    "GoogleCloudDialogflowV2TrainAgentRequest": {
      "type": "object",
      "properties": {},
      "description": "The request message for Agents.TrainAgent.",
      "id": "GoogleCloudDialogflowV2TrainAgentRequest"
    },
    "GoogleCloudDialogflowCxV3PageInfoFormInfo": {
      "description": "Represents form information.",
      "id": "GoogleCloudDialogflowCxV3PageInfoFormInfo",
      "type": "object",
      "properties": {
        "parameterInfo": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo"
          },
          "description": "Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter."
        }
      }
    },
    "GoogleCloudDialogflowCxV3SessionInfo": {
      "id": "GoogleCloudDialogflowCxV3SessionInfo",
      "type": "object",
      "properties": {
        "parameters": {
          "type": "object",
          "description": "Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.",
          "additionalProperties": {
            "type": "any"
          }
        },
        "session": {
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified.",
          "type": "string"
        }
      },
      "description": "Represents session information communicated to and from the webhook."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment": {
      "properties": {
        "audio": {
          "description": "Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.",
          "format": "byte",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it."
        },
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.",
          "readOnly": true,
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Represents one segment of audio.",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction": {
      "description": "Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction"
    },
    "GoogleCloudDialogflowV2AnnotatedMessagePart": {
      "description": "Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.",
      "properties": {
        "text": {
          "type": "string",
          "description": "A part of a message possibly annotated with an entity."
        },
        "formattedValue": {
          "type": "any",
          "description": "The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { \"amount\": 5, \"currency\": \"USD\" } "
        },
        "entityType": {
          "type": "string",
          "description": "The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2AnnotatedMessagePart"
    },
    "GoogleCloudDialogflowV2beta1Sentiment": {
      "id": "GoogleCloudDialogflowV2beta1Sentiment",
      "type": "object",
      "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text.",
      "properties": {
        "score": {
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "format": "float",
          "type": "number"
        },
        "magnitude": {
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentBatch": {
      "id": "GoogleCloudDialogflowV2IntentBatch",
      "type": "object",
      "description": "This message is a wrapper around a collection of intents.",
      "properties": {
        "intents": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          },
          "type": "array",
          "description": "A collection of intents."
        }
      }
    },
    "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent": {
      "properties": {
        "additionalCases": {
          "description": "Additional cases to be evaluated.",
          "$ref": "GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
        },
        "message": {
          "description": "Returned message.",
          "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
        }
      },
      "description": "The list of messages or conditional cases to activate for this case.",
      "id": "GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent",
      "type": "object"
    },
    "GoogleCloudDialogflowV2AgentAssistantRecord": {
      "type": "object",
      "properties": {
        "faqAnswer": {
          "description": "Output only. The FAQ answer.",
          "$ref": "GoogleCloudDialogflowV2FaqAnswer",
          "readOnly": true
        },
        "articleSuggestionAnswer": {
          "description": "Output only. The article suggestion answer.",
          "$ref": "GoogleCloudDialogflowV2ArticleAnswer",
          "readOnly": true
        }
      },
      "id": "GoogleCloudDialogflowV2AgentAssistantRecord",
      "description": "Represents a record of a human agent assist answer."
    },
    "GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "description": "Metadata for CreateDocument operation."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess": {
      "properties": {
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Custom metadata. Dialogflow doesn't impose any structure on this."
        }
      },
      "type": "object",
      "description": "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess"
    },
    "GoogleCloudDialogflowCxV3EventHandler": {
      "description": "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3EventHandler",
      "properties": {
        "name": {
          "description": "Output only. The unique identifier of this event handler.",
          "readOnly": true,
          "type": "string"
        },
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "event": {
          "description": "Required. The name of the event to handle.",
          "type": "string"
        },
        "triggerFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment",
          "description": "The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks."
        },
        "targetPage": {
          "type": "string",
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
        }
      }
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings",
      "description": "Settings that determine how to filter recent conversation context when generating suggestions.",
      "properties": {
        "dropIvrMessages": {
          "description": "If set to true, all messages from ivr stage are dropped.",
          "type": "boolean"
        },
        "dropHandoffMessages": {
          "type": "boolean",
          "description": "If set to true, the last message from virtual agent (hand off message) and the message before it (trigger message of hand off) are dropped."
        },
        "dropVirtualAgentMessages": {
          "description": "If set to true, all messages from virtual agent are dropped.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowV2CompleteConversationRequest": {
      "properties": {},
      "id": "GoogleCloudDialogflowV2CompleteConversationRequest",
      "type": "object",
      "description": "The request message for Conversations.CompleteConversation."
    },
    "GoogleCloudDialogflowV2beta1SentimentAnalysisResult": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult",
      "properties": {
        "queryTextSentiment": {
          "description": "The sentiment analysis result for `query_text`.",
          "$ref": "GoogleCloudDialogflowV2beta1Sentiment"
        }
      },
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config"
    },
    "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult": {
      "type": "object",
      "properties": {
        "score": {
          "format": "float",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "type": "number"
        },
        "magnitude": {
          "format": "float",
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "type": "number"
        }
      },
      "description": "Represents the result of sentiment analysis.",
      "id": "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult"
    },
    "GoogleCloudDialogflowV2Agent": {
      "description": "A Dialogflow agent is a virtual agent that handles conversations with your end-users. It is a natural language understanding module that understands the nuances of human language. Dialogflow translates end-user text or audio during a conversation to structured data that your apps and services can understand. You design and build a Dialogflow agent to handle the types of conversations required for your system. For more information about agents, see the [Agent guide](https://cloud.google.com/dialogflow/docs/agents-overview).",
      "type": "object",
      "properties": {
        "matchMode": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Best for agents with a small number of examples in intents and/or wide use of templates syntax and composite entities.",
            "Can be used for agents with a large number of examples in intents, especially the ones using @sys.any or very large custom entities."
          ],
          "enum": [
            "MATCH_MODE_UNSPECIFIED",
            "MATCH_MODE_HYBRID",
            "MATCH_MODE_ML_ONLY"
          ],
          "description": "Optional. Determines how intents are detected from user queries."
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "API_VERSION_UNSPECIFIED",
            "API_VERSION_V1",
            "API_VERSION_V2",
            "API_VERSION_V2_BETA_1"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Legacy V1 API.",
            "V2 API.",
            "V2beta1 API."
          ],
          "description": "Optional. API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different service endpoints for different API versions. However, bots connectors and webhook calls will follow the specified API version."
        },
        "defaultLanguageCode": {
          "type": "string",
          "description": "Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the `Update` method."
        },
        "displayName": {
          "description": "Required. The name of this agent.",
          "type": "string"
        },
        "avatarUri": {
          "description": "Optional. The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected."
        },
        "enableLogging": {
          "type": "boolean",
          "description": "Optional. Determines whether this agent should log conversation queries."
        },
        "tier": {
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Standard tier.",
            "Enterprise tier (Essentials).",
            "Enterprise tier (Plus)."
          ],
          "enum": [
            "TIER_UNSPECIFIED",
            "TIER_STANDARD",
            "TIER_ENTERPRISE",
            "TIER_ENTERPRISE_PLUS"
          ],
          "description": "Optional. The agent tier. If not specified, TIER_STANDARD is assumed.",
          "type": "string"
        },
        "classificationThreshold": {
          "type": "number",
          "description": "Optional. To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a fallback intent will be triggered or, if there are no fallback intents defined, no intent will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.",
          "format": "float"
        },
        "supportedLanguageCodes": {
          "type": "array",
          "description": "Optional. The list of all languages supported by this agent (except for the `default_language_code`).",
          "items": {
            "type": "string"
          }
        },
        "timeZone": {
          "description": "Required. The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.",
          "type": "string"
        },
        "parent": {
          "type": "string",
          "description": "Required. The project of this agent. Format: `projects/`."
        }
      },
      "id": "GoogleCloudDialogflowV2Agent"
    },
    "GoogleCloudDialogflowV2ListConversationsResponse": {
      "properties": {
        "conversations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Conversation"
          },
          "description": "The list of conversations. There will be a maximum number of items returned based on the page_size field in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "id": "GoogleCloudDialogflowV2ListConversationsResponse",
      "type": "object",
      "description": "The response message for Conversations.ListConversations."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses",
      "properties": {
        "simpleResponses": {
          "description": "Required. The list of simple responses.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse"
          },
          "type": "array"
        }
      },
      "description": "The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase": {
      "properties": {
        "id": {
          "type": "string",
          "description": "Output only. The unique identifier of the training phrase."
        },
        "repeatCount": {
          "type": "integer",
          "format": "int32",
          "description": "Indicates how many times this example was added to the intent."
        },
        "parts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart"
          },
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set."
        }
      },
      "type": "object",
      "description": "Represents an example that the agent is trained on to identify the intent.",
      "id": "GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase"
    },
    "GoogleCloudDialogflowCxV3TestCaseError": {
      "properties": {
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status associated with the test case."
        },
        "testCase": {
          "description": "The test case.",
          "$ref": "GoogleCloudDialogflowCxV3TestCase"
        }
      },
      "id": "GoogleCloudDialogflowCxV3TestCaseError",
      "description": "Error info for importing a test.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessage": {
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessage",
      "properties": {
        "endInteraction": {
          "readOnly": true,
          "description": "Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction"
        },
        "payload": {
          "description": "Returns a response containing a custom, platform-specific payload.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "liveAgentHandoff": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff",
          "description": "Hands off conversation to a human agent."
        },
        "conversationSuccess": {
          "description": "Indicates that the conversation succeeded.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess"
        },
        "text": {
          "description": "Returns a text response.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageText"
        },
        "outputAudioText": {
          "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText"
        },
        "mixedAudio": {
          "description": "Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio",
          "readOnly": true
        },
        "playAudio": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio",
          "description": "Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way."
        }
      },
      "description": "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageText": {
      "description": "The text response message.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageText",
      "properties": {
        "text": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of the agent's responses.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent": {
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent",
      "properties": {
        "message": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage",
          "description": "Returned message."
        },
        "additionalCases": {
          "description": "Additional cases to be evaluated.",
          "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases"
        }
      },
      "type": "object",
      "description": "The list of messages or conditional cases to activate for this case."
    },
    "GoogleCloudDialogflowV2IntentMessageTableCard": {
      "properties": {
        "subtitle": {
          "description": "Optional. Subtitle to the title.",
          "type": "string"
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. Image which should be displayed on the card."
        },
        "title": {
          "description": "Required. Title of the card.",
          "type": "string"
        },
        "columnProperties": {
          "description": "Optional. Display properties for the columns in this table.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageColumnProperties"
          }
        },
        "buttons": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          },
          "description": "Optional. List of buttons for the card.",
          "type": "array"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageTableCardRow"
          },
          "description": "Optional. Rows in this table of data."
        }
      },
      "description": "Table card for Actions on Google.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageTableCard"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction",
      "description": "Opens the given URI.",
      "properties": {
        "uri": {
          "description": "Required. The HTTP or HTTPS scheme URI.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri",
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The uri to open on the user device"
        }
      },
      "description": "Opens the user's default web browser app to the specified uri If the user has an app installed that is registered as the default handler for the URL, then this app will be opened instead, and its icon will be used in the suggested action UI."
    },
    "GoogleCloudDialogflowCxV3ImportDocumentsResponse": {
      "type": "object",
      "description": "Response message for Documents.ImportDocuments.",
      "properties": {
        "warnings": {
          "type": "array",
          "description": "Includes details about skipped documents or any other warnings.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3ImportDocumentsResponse"
    },
    "GoogleCloudDialogflowCxV3ConversationTurnUserInput": {
      "properties": {
        "injectedParameters": {
          "description": "Parameters that need to be injected into the conversation during intent detection.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "isWebhookEnabled": {
          "description": "If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.",
          "type": "boolean"
        },
        "input": {
          "$ref": "GoogleCloudDialogflowCxV3QueryInput",
          "description": "Supports text input, event input, dtmf input in the test case."
        }
      },
      "type": "object",
      "description": "The input from the human user.",
      "id": "GoogleCloudDialogflowCxV3ConversationTurnUserInput"
    },
    "GoogleCloudDialogflowV2WebhookRequest": {
      "properties": {
        "queryResult": {
          "description": "The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.",
          "$ref": "GoogleCloudDialogflowV2QueryResult"
        },
        "originalDetectIntentRequest": {
          "$ref": "GoogleCloudDialogflowV2OriginalDetectIntentRequest",
          "description": "Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call."
        },
        "responseId": {
          "description": "The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`.",
          "type": "string"
        },
        "session": {
          "type": "string",
          "description": "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`."
        }
      },
      "description": "The request message for a webhook call.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2WebhookRequest"
    },
    "GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata": {
      "description": "Metadata for ImportDocuments operation.",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ImportTestCasesResponse": {
      "properties": {
        "names": {
          "description": "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "The response message for TestCases.ImportTestCases.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ImportTestCasesResponse"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageListSelect": {
      "properties": {
        "items": {
          "type": "array",
          "description": "Required. List items.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem"
          }
        },
        "title": {
          "description": "Optional. The overall title of the list.",
          "type": "string"
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. Subtitle of the list."
        }
      },
      "description": "The card for presenting a list of options to select from.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageListSelect"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard": {
      "description": "Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel",
      "properties": {
        "imageDisplayOptions": {
          "type": "string",
          "enum": [
            "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED",
            "GRAY",
            "WHITE",
            "CROPPED",
            "BLURRED_BACKGROUND"
          ],
          "description": "Optional. Settings for displaying the image. Applies to every image in items.",
          "enumDescriptions": [
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with white bars.",
            "Image is scaled such that the image width and height match or exceed the container dimensions. This may crop the top and bottom of the image if the scaled image height is greater than the container height, or crop the left and right of the image if the scaled image width is greater than the container width. This is similar to \"Zoom Mode\" on a widescreen TV when playing a 4:3 video.",
            "Pad the gaps between image and image frame with a blurred copy of the same image."
          ]
        },
        "items": {
          "type": "array",
          "description": "Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard",
      "type": "object"
    },
    "GoogleCloudDialogflowV2FulfillmentGenericWebService": {
      "type": "object",
      "description": "Represents configuration for a generic web service. Dialogflow supports two mechanisms for authentications: - Basic authentication with username and password. - Authentication with additional authentication headers. More information could be found at: https://cloud.google.com/dialogflow/docs/fulfillment-configure.",
      "properties": {
        "username": {
          "description": "Optional. The user name for HTTP Basic authentication.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "Required. The fulfillment URI for receiving POST requests. It must use https protocol."
        },
        "requestHeaders": {
          "description": "Optional. The HTTP request headers to send together with fulfillment requests.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isCloudFunction": {
          "type": "boolean",
          "description": "Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false."
        },
        "password": {
          "type": "string",
          "description": "Optional. The password for HTTP Basic authentication."
        }
      },
      "id": "GoogleCloudDialogflowV2FulfillmentGenericWebService"
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCard": {
      "description": "The basic card message. Useful for displaying information.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. The title of the card."
        },
        "subtitle": {
          "description": "Optional. The subtitle of the card.",
          "type": "string"
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. The image for the card."
        },
        "formattedText": {
          "description": "Required, unless image is present. The body text of the card.",
          "type": "string"
        },
        "buttons": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          },
          "type": "array",
          "description": "Optional. The collection of card buttons."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCard"
    },
    "GoogleCloudDialogflowV2IntentMessageQuickReplies": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageQuickReplies",
      "properties": {
        "quickReplies": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of quick replies.",
          "type": "array"
        },
        "title": {
          "type": "string",
          "description": "Optional. The title of the collection of quick replies."
        }
      },
      "description": "The quick replies response message."
    },
    "GoogleCloudDialogflowV2AutomatedAgentReply": {
      "id": "GoogleCloudDialogflowV2AutomatedAgentReply",
      "description": "Represents a response from an automated agent.",
      "type": "object",
      "properties": {
        "detectIntentResponse": {
          "$ref": "GoogleCloudDialogflowV2DetectIntentResponse",
          "description": "Response of the Dialogflow Sessions.DetectIntent call."
        }
      }
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings": {
      "type": "object",
      "description": "Settings of suggestion trigger.",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings",
      "properties": {
        "onlyEndUser": {
          "type": "boolean",
          "description": "Only trigger suggestion if participant role of last utterance is END_USER."
        },
        "noSmalltalk": {
          "type": "boolean",
          "description": "Do not trigger if last utterance is small talk."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest": {
      "id": "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest",
      "description": "Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Optional. The version of the protocol used for this request. This field is AoG-specific."
        },
        "source": {
          "type": "string",
          "description": "The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers."
        },
        "payload": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { \"telephony\": { \"caller_id\": \"+18558363987\" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents."
        }
      }
    },
    "GoogleCloudDialogflowV2Intent": {
      "id": "GoogleCloudDialogflowV2Intent",
      "description": "An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).",
      "properties": {
        "defaultResponsePlatforms": {
          "type": "array",
          "description": "Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Default platform.",
              "Facebook.",
              "Slack.",
              "Telegram.",
              "Kik.",
              "Skype.",
              "Line.",
              "Viber.",
              "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
              "Google Hangouts."
            ],
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "FACEBOOK",
              "SLACK",
              "TELEGRAM",
              "KIK",
              "SKYPE",
              "LINE",
              "VIBER",
              "ACTIONS_ON_GOOGLE",
              "GOOGLE_HANGOUTS"
            ]
          }
        },
        "inputContextNames": {
          "description": "Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "followupIntentInfo": {
          "type": "array",
          "description": "Read-only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentFollowupIntentInfo"
          }
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests."
        },
        "name": {
          "type": "string",
          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`."
        },
        "trainingPhrases": {
          "description": "Optional. The collection of examples that the agent is trained on.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentTrainingPhrase"
          }
        },
        "outputContexts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "type": "array",
          "description": "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`."
        },
        "mlDisabled": {
          "type": "boolean",
          "description": "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off."
        },
        "action": {
          "type": "string",
          "description": "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
        },
        "displayName": {
          "description": "Required. The name of this intent.",
          "type": "string"
        },
        "liveAgentHandoff": {
          "description": "Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.",
          "type": "boolean"
        },
        "resetContexts": {
          "type": "boolean",
          "description": "Optional. Indicates whether to delete all contexts in the current session when this intent is matched."
        },
        "parameters": {
          "type": "array",
          "description": "Optional. The collection of parameters associated with the intent.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentParameter"
          }
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          },
          "description": "Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console."
        },
        "endInteraction": {
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.",
          "type": "boolean"
        },
        "isFallback": {
          "type": "boolean",
          "description": "Optional. Indicates whether this is a fallback intent."
        },
        "events": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters."
        },
        "rootFollowupIntentName": {
          "description": "Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. We populate this field only in the output. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "parentFollowupIntentName": {
          "type": "string",
          "description": "Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`."
        },
        "webhookState": {
          "description": "Optional. Indicates whether webhooks are enabled for the intent.",
          "type": "string",
          "enumDescriptions": [
            "Webhook is disabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent. Also, each slot filling prompt is forwarded to the webhook."
          ],
          "enum": [
            "WEBHOOK_STATE_UNSPECIFIED",
            "WEBHOOK_STATE_ENABLED",
            "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata": {
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "type": "object",
      "description": "Metadata for UpdateDocument operation.",
      "id": "GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata"
    },
    "GoogleCloudDialogflowCxV3beta1PageInfo": {
      "id": "GoogleCloudDialogflowCxV3beta1PageInfo",
      "properties": {
        "formInfo": {
          "description": "Optional for both WebhookRequest and WebhookResponse. Information about the form.",
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo"
        },
        "currentPage": {
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        }
      },
      "description": "Represents page information communicated to and from the webhook.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessage": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessage",
      "properties": {
        "tableCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCard",
          "description": "Table card for Actions on Google."
        },
        "telephonyPlayAudio": {
          "description": "Plays audio from a file in Telephony Gateway.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio"
        },
        "platform": {
          "enumDescriptions": [
            "Not specified.",
            "Facebook.",
            "Slack.",
            "Telegram.",
            "Kik.",
            "Skype.",
            "Line.",
            "Viber.",
            "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
            "Telephony Gateway.",
            "Google Hangouts."
          ],
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "FACEBOOK",
            "SLACK",
            "TELEGRAM",
            "KIK",
            "SKYPE",
            "LINE",
            "VIBER",
            "ACTIONS_ON_GOOGLE",
            "TELEPHONY",
            "GOOGLE_HANGOUTS"
          ],
          "type": "string",
          "description": "Optional. The platform that this message is intended for."
        },
        "basicCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCard",
          "description": "Displays a basic card for Actions on Google."
        },
        "linkOutSuggestion": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion",
          "description": "Displays a link out suggestion chip for Actions on Google."
        },
        "telephonyTransferCall": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall",
          "description": "Transfers the call in Telephony Gateway."
        },
        "carouselSelect": {
          "description": "Displays a carousel card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect"
        },
        "rbmStandaloneRichCard": {
          "description": "Standalone Rich Business Messaging (RBM) rich card response.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard"
        },
        "suggestions": {
          "description": "Displays suggestion chips for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSuggestions"
        },
        "browseCarouselCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard",
          "description": "Browse carousel card for Actions on Google."
        },
        "text": {
          "description": "Returns a text response.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageText"
        },
        "rbmText": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmText",
          "description": "Rich Business Messaging (RBM) text response. RBM allows businesses to send enriched and branded versions of SMS. See https://jibe.google.com/business-messaging."
        },
        "listSelect": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageListSelect",
          "description": "Displays a list card for Actions on Google."
        },
        "telephonySynthesizeSpeech": {
          "description": "Synthesizes speech in Telephony Gateway.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech"
        },
        "payload": {
          "description": "A custom platform-specific response.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "image": {
          "description": "Displays an image.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "mediaContent": {
          "description": "The media content card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageMediaContent"
        },
        "quickReplies": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies",
          "description": "Displays quick replies."
        },
        "simpleResponses": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses",
          "description": "Returns a voice or text-only response for Actions on Google."
        },
        "card": {
          "description": "Displays a card.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCard"
        },
        "rbmCarouselRichCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard",
          "description": "Rich Business Messaging (RBM) carousel rich card response."
        }
      },
      "description": "Corresponds to the `Response` field in the Dialogflow console.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior": {
      "id": "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior",
      "description": "Configuration for how the filling of a parameter should be handled.",
      "type": "object",
      "properties": {
        "repromptEventHandlers": {
          "type": "array",
          "description": "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EventHandler"
          }
        },
        "initialPromptFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment",
          "description": "Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCardButton": {
      "description": "The button object that appears at the bottom of a card.",
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCardButton",
      "properties": {
        "title": {
          "description": "Required. The title of the button.",
          "type": "string"
        },
        "openUriAction": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction",
          "description": "Required. Action to take when a user taps on the button."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig": {
      "description": "Config for suggestion features.",
      "type": "object",
      "properties": {
        "conversationModelConfig": {
          "description": "Configs of custom conversation model.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig"
        },
        "queryConfig": {
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig",
          "description": "Configs of query."
        },
        "enableEventBasedSuggestion": {
          "description": "Automatically iterates all participants and tries to compile suggestions. Supported features: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST.",
          "type": "boolean"
        },
        "suggestionTriggerSettings": {
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings",
          "description": "Settings of suggestion trigger. Currently, only ARTICLE_SUGGESTION and FAQ will use this field."
        },
        "suggestionFeature": {
          "description": "The suggestion feature.",
          "$ref": "GoogleCloudDialogflowV2SuggestionFeature"
        }
      },
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem": {
      "type": "object",
      "description": "An item in the list.",
      "properties": {
        "info": {
          "description": "Required. Additional information about this option.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo"
        },
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "description": {
          "type": "string",
          "description": "Optional. The main text describing the item."
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the list item."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem"
    },
    "GoogleCloudDialogflowV2QueryInput": {
      "description": "Represents the query input. It can contain either: 1. An audio config which instructs the speech recognizer how to process the speech audio. 2. A conversational query in the form of text,. 3. An event that specifies which intent to trigger.",
      "properties": {
        "event": {
          "$ref": "GoogleCloudDialogflowV2EventInput",
          "description": "The event to be processed."
        },
        "audioConfig": {
          "description": "Instructs the speech recognizer how to process the speech audio.",
          "$ref": "GoogleCloudDialogflowV2InputAudioConfig"
        },
        "text": {
          "description": "The natural language text to be processed.",
          "$ref": "GoogleCloudDialogflowV2TextInput"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2QueryInput"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia": {
      "description": "Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently supported: Image Types * image/jpeg * image/jpg' * image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 * video/mpeg * video/mpeg4 * video/webm",
      "type": "object",
      "properties": {
        "height": {
          "enum": [
            "HEIGHT_UNSPECIFIED",
            "SHORT",
            "MEDIUM",
            "TALL"
          ],
          "description": "Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored.",
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "112 DP.",
            "168 DP.",
            "264 DP. Not available for rich card carousels when the card width is set to small."
          ]
        },
        "thumbnailUri": {
          "type": "string",
          "description": "Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user's device downloads the file. Depending on the user's setting, the file may not download automatically and may require the user to tap a download button."
        },
        "fileUri": {
          "type": "string",
          "description": "Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell",
      "properties": {
        "text": {
          "description": "Required. Text in this cell.",
          "type": "string"
        }
      },
      "description": "Cell of TableCardRow."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard",
      "type": "object",
      "properties": {
        "cardWidth": {
          "description": "Required. The width of the cards in the carousel.",
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "120 DP. Note that tall media cannot be used.",
            "232 DP."
          ],
          "enum": [
            "CARD_WIDTH_UNSPECIFIED",
            "SMALL",
            "MEDIUM"
          ]
        },
        "cardContents": {
          "description": "Required. The cards in the carousel. A carousel must have at least 2 cards and at most 10.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
          }
        }
      },
      "description": "Carousel Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. If you want to show a single card with more control over the layout, please use RbmStandaloneCard instead."
    },
    "GoogleCloudDialogflowCxV3FormParameterFillBehavior": {
      "description": "Configuration for how the filling of a parameter should be handled.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3FormParameterFillBehavior",
      "properties": {
        "initialPromptFulfillment": {
          "description": "Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.",
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment"
        },
        "repromptEventHandlers": {
          "description": "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EventHandler"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentTrainingPhrase": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentTrainingPhrase",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. The unique identifier of this training phrase."
        },
        "type": {
          "description": "Required. The type of the training phrase.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXAMPLE",
            "TEMPLATE"
          ],
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Examples do not contain @-prefixed entity type names, but example parts can be annotated with entity types.",
            "Templates are not annotated with entity types, but they can contain @-prefixed entity type names as substrings. Template mode has been deprecated. Example mode is the only supported way to create new training phrases. If you have existing training phrases that you've created in template mode, those will continue to work."
          ],
          "type": "string"
        },
        "timesAddedCount": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased."
        },
        "parts": {
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart"
          }
        }
      },
      "description": "Represents an example that the agent is trained on."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties",
      "type": "object",
      "description": "Column properties for TableCard.",
      "properties": {
        "header": {
          "type": "string",
          "description": "Required. Column heading."
        },
        "horizontalAlignment": {
          "enum": [
            "HORIZONTAL_ALIGNMENT_UNSPECIFIED",
            "LEADING",
            "CENTER",
            "TRAILING"
          ],
          "description": "Optional. Defines text alignment for all cells in this column.",
          "type": "string",
          "enumDescriptions": [
            "Text is aligned to the leading edge of the column.",
            "Text is aligned to the leading edge of the column.",
            "Text is centered in the column.",
            "Text is aligned to the trailing edge of the column."
          ]
        }
      }
    },
    "GoogleCloudDialogflowCxV3CreateVersionOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3CreateVersionOperationMetadata",
      "description": "Metadata associated with the long running operation for Versions.CreateVersion.",
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Name of the created version. Format: `projects//locations//agents//flows//versions/`."
        }
      }
    },
    "GoogleCloudDialogflowV2ListSessionEntityTypesResponse": {
      "properties": {
        "sessionEntityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
          },
          "description": "The list of session entity types. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse",
      "description": "The response message for SessionEntityTypes.ListSessionEntityTypes."
    },
    "GoogleCloudDialogflowCxV3FormParameter": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the parameter, unique within the form."
        },
        "fillBehavior": {
          "description": "Required. Defines fill behavior for the parameter.",
          "$ref": "GoogleCloudDialogflowCxV3FormParameterFillBehavior"
        },
        "isList": {
          "type": "boolean",
          "description": "Indicates whether the parameter represents a list of values."
        },
        "redact": {
          "type": "boolean",
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
        },
        "defaultValue": {
          "description": "The default value of an optional parameter. If the parameter is required, the default value will be ignored.",
          "type": "any"
        },
        "entityType": {
          "type": "string",
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
        },
        "required": {
          "type": "boolean",
          "description": "Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes."
        }
      },
      "description": "Represents a form parameter.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3FormParameter"
    },
    "GoogleCloudDialogflowV2ConversationProfile": {
      "type": "object",
      "description": "Defines the services to connect to incoming Dialogflow conversations.",
      "id": "GoogleCloudDialogflowV2ConversationProfile",
      "properties": {
        "notificationConfig": {
          "$ref": "GoogleCloudDialogflowV2NotificationConfig",
          "description": "Configuration for publishing conversation lifecycle events."
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Create time of the conversation profile.",
          "readOnly": true,
          "type": "string"
        },
        "loggingConfig": {
          "$ref": "GoogleCloudDialogflowV2LoggingConfig",
          "description": "Configuration for logging conversation lifecycle events."
        },
        "sttConfig": {
          "$ref": "GoogleCloudDialogflowV2SpeechToTextConfig",
          "description": "Settings for speech transcription."
        },
        "languageCode": {
          "type": "string",
          "description": "Language which represents the conversationProfile. If unspecified, the default language code en-us applies. Users need to create a ConversationProfile for each language they want to support."
        },
        "newMessageEventNotificationConfig": {
          "$ref": "GoogleCloudDialogflowV2NotificationConfig",
          "description": "Configuration for publishing new message events. Event will be sent in format of ConversationEvent"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Update time of the conversation profile."
        },
        "displayName": {
          "type": "string",
          "description": "Required. Human readable name for this profile. Max length 1024 bytes."
        },
        "automatedAgentConfig": {
          "description": "Configuration for an automated agent to use with this profile.",
          "$ref": "GoogleCloudDialogflowV2AutomatedAgentConfig"
        },
        "humanAgentAssistantConfig": {
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfig",
          "description": "Configuration for agent assistance to use with this profile."
        },
        "humanAgentHandoffConfig": {
          "$ref": "GoogleCloudDialogflowV2HumanAgentHandoffConfig",
          "description": "Configuration for connecting to a live agent. Currently, this feature is not general available, please contact Google to get access."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata": {
      "properties": {
        "version": {
          "type": "string",
          "description": "Name of the created version. Format: `projects//locations//agents//flows//versions/`."
        }
      },
      "description": "Metadata associated with the long running operation for Versions.CreateVersion.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata"
    },
    "GoogleCloudDialogflowV2beta1SmartReplyAnswer": {
      "description": "Represents a smart reply answer.",
      "properties": {
        "answerRecord": {
          "type": "string",
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\""
        },
        "confidence": {
          "description": "Smart reply confidence. The system's confidence score that this reply is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "format": "float",
          "type": "number"
        },
        "reply": {
          "description": "The content of the reply.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1SmartReplyAnswer",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText": {
      "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText",
      "properties": {
        "ssml": {
          "description": "The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).",
          "type": "string"
        },
        "text": {
          "description": "The raw text to be synthesized.",
          "type": "string"
        },
        "allowPlaybackInterruption": {
          "readOnly": true,
          "type": "boolean",
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "type": "object",
      "description": "Metadata for UpdateDocument operation."
    },
    "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata": {
      "id": "GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata",
      "properties": {
        "state": {
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "readOnly": true,
          "type": "string",
          "description": "Required. Output only. The current state of this operation.",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ]
        }
      },
      "type": "object",
      "description": "Metadata in google::longrunning::Operation for Knowledge operations."
    },
    "GoogleCloudDialogflowV2EventInput": {
      "properties": {
        "parameters": {
          "description": "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "name": {
          "description": "Required. The unique identifier of the event.",
          "type": "string"
        },
        "languageCode": {
          "description": "Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        }
      },
      "description": "Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\"Hello #welcome_event.name! What can I do for you today?\"`.",
      "id": "GoogleCloudDialogflowV2EventInput",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3Page": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3Page",
      "properties": {
        "transitionRoutes": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TransitionRoute"
          },
          "description": "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.",
          "type": "array"
        },
        "displayName": {
          "description": "Required. The human-readable name of the page, unique within the agent.",
          "type": "string"
        },
        "entryFulfillment": {
          "description": "The fulfillment to call when the session is entering the page.",
          "$ref": "GoogleCloudDialogflowCxV3Fulfillment"
        },
        "transitionRouteGroups": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -\u003e page's transition route group -\u003e flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`."
        },
        "name": {
          "description": "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "form": {
          "description": "The form associated with the page, used for collecting parameters relevant to the page.",
          "$ref": "GoogleCloudDialogflowCxV3Form"
        },
        "eventHandlers": {
          "type": "array",
          "description": "Handlers associated with the page to handle events such as webhook errors, no match or no input.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3EventHandler"
          }
        }
      },
      "description": "A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page)."
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue": {
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue",
      "description": "Represents a value for an intent parameter.",
      "type": "object",
      "properties": {
        "originalValue": {
          "description": "Always present. Original text value extracted from user utterance.",
          "type": "string"
        },
        "resolvedValue": {
          "type": "any",
          "description": "Always present. Structured value for the parameter extracted from user utterance."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject": {
      "description": "Response media object for media content card.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject",
      "properties": {
        "icon": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. Icon to display above media content."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of media card."
        },
        "contentUrl": {
          "description": "Required. Url where the media is stored.",
          "type": "string"
        },
        "largeImage": {
          "description": "Optional. Image to display above media content.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "name": {
          "description": "Required. Name of media card.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2ListConversationProfilesResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2ListConversationProfilesResponse",
      "description": "The response message for ConversationProfiles.ListConversationProfiles.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "conversationProfiles": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2ConversationProfile"
          },
          "type": "array",
          "description": "The list of project conversation profiles. There is a maximum number of items returned based on the page_size field in the request."
        }
      }
    },
    "GoogleCloudDialogflowV2DocumentReloadStatus": {
      "type": "object",
      "description": "The status of a reload attempt.",
      "properties": {
        "time": {
          "format": "google-datetime",
          "description": "The time of a reload attempt. This reload may have been triggered automatically or manually and may not have succeeded.",
          "type": "string"
        },
        "status": {
          "$ref": "GoogleRpcStatus",
          "description": "The status of a reload attempt or the initial load."
        }
      },
      "id": "GoogleCloudDialogflowV2DocumentReloadStatus"
    },
    "GoogleCloudDialogflowV2Environment": {
      "properties": {
        "state": {
          "description": "Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
          "enumDescriptions": [
            "Not specified. This value is not used.",
            "Stopped.",
            "Loading.",
            "Running."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "STOPPED",
            "LOADING",
            "RUNNING"
          ],
          "readOnly": true
        },
        "agentVersion": {
          "type": "string",
          "description": "Optional. The agent version loaded into this environment. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`"
        },
        "fulfillment": {
          "$ref": "GoogleCloudDialogflowV2Fulfillment",
          "description": "Optional. The fulfillment settings to use for this environment."
        },
        "name": {
          "type": "string",
          "description": "Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/`",
          "readOnly": true
        },
        "textToSpeechSettings": {
          "description": "Optional. Text to speech settings for this environment.",
          "$ref": "GoogleCloudDialogflowV2TextToSpeechSettings"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The last update time of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
          "format": "google-datetime",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. The developer-provided description for this environment. The maximum length is 500 characters. If exceeded, the request is rejected."
        }
      },
      "description": "You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for: - testing - development - production - etc. For more information, see the [versions and environments guide](https://cloud.google.com/dialogflow/docs/agents-versions).",
      "id": "GoogleCloudDialogflowV2Environment",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1Page": {
      "id": "GoogleCloudDialogflowCxV3beta1Page",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`."
        },
        "transitionRoutes": {
          "description": "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TransitionRoute"
          },
          "type": "array"
        },
        "form": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Form",
          "description": "The form associated with the page, used for collecting parameters relevant to the page."
        },
        "entryFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment",
          "description": "The fulfillment to call when the session is entering the page."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the page, unique within the agent."
        },
        "transitionRouteGroups": {
          "description": "Ordered list of `TransitionRouteGroups` associated with the page. Transition route groups must be unique within a page. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -\u003e page's transition route group -\u003e flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "eventHandlers": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1EventHandler"
          },
          "type": "array",
          "description": "Handlers associated with the page to handle events such as webhook errors, no match or no input."
        }
      },
      "description": "A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page)."
    },
    "GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata": {
      "type": "object",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "id": "GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata",
      "description": "Metadata for ReloadDocument operation."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCard": {
      "description": "The card response message.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCard",
      "type": "object",
      "properties": {
        "imageUri": {
          "type": "string",
          "description": "Optional. The public URI to an image file for the card."
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        },
        "title": {
          "description": "Optional. The title of the card.",
          "type": "string"
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCardButton"
          },
          "description": "Optional. The collection of card buttons."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1FormParameter": {
      "properties": {
        "required": {
          "type": "boolean",
          "description": "Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes."
        },
        "redact": {
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.",
          "type": "boolean"
        },
        "fillBehavior": {
          "description": "Required. Defines fill behavior for the parameter.",
          "$ref": "GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior"
        },
        "defaultValue": {
          "type": "any",
          "description": "The default value of an optional parameter. If the parameter is required, the default value will be ignored."
        },
        "isList": {
          "description": "Indicates whether the parameter represents a list of values.",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The human-readable name of the parameter, unique within the form."
        },
        "entityType": {
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1FormParameter",
      "description": "Represents a form parameter."
    },
    "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo": {
      "id": "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo",
      "description": "Represents a single followup intent in the chain.",
      "properties": {
        "followupIntentName": {
          "description": "The unique identifier of the followup intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "parentFollowupIntentName": {
          "type": "string",
          "description": "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageCardButton": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Optional. The text to show on the button."
        },
        "postback": {
          "type": "string",
          "description": "Optional. The text to send back to the Dialogflow API or a URI to open."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageCardButton",
      "description": "Contains information about a button."
    },
    "GoogleCloudDialogflowV2RestoreAgentRequest": {
      "id": "GoogleCloudDialogflowV2RestoreAgentRequest",
      "description": "The request message for Agents.RestoreAgent.",
      "properties": {
        "agentContent": {
          "format": "byte",
          "description": "Zip compressed raw byte content for agent.",
          "type": "string"
        },
        "agentUri": {
          "type": "string",
          "description": "The URI to a Google Cloud Storage file containing the agent to restore. Note: The URI must start with \"gs://\"."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse": {
      "properties": {
        "names": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`."
        }
      },
      "description": "The response message for TestCases.ImportTestCases.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse"
    },
    "GoogleCloudDialogflowV2AnswerFeedback": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2AnswerFeedback",
      "properties": {
        "clicked": {
          "description": "Indicates whether the answer/item was clicked by the human agent or not. Default to false.",
          "type": "boolean"
        },
        "clickTime": {
          "type": "string",
          "description": "Time when the answer/item was clicked.",
          "format": "google-datetime"
        },
        "agentAssistantDetailFeedback": {
          "$ref": "GoogleCloudDialogflowV2AgentAssistantFeedback",
          "description": "Detail feedback of agent assist suggestions."
        },
        "correctnessLevel": {
          "description": "The correctness level of the specific answer.",
          "enumDescriptions": [
            "Correctness level unspecified.",
            "Answer is totally wrong.",
            "Answer is partially correct.",
            "Answer is fully correct."
          ],
          "enum": [
            "CORRECTNESS_LEVEL_UNSPECIFIED",
            "NOT_CORRECT",
            "PARTIALLY_CORRECT",
            "FULLY_CORRECT"
          ],
          "type": "string"
        },
        "displayTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Time when the answer/item was displayed."
        },
        "displayed": {
          "type": "boolean",
          "description": "Indicates whether the answer/item was displayed to the human agent in the agent desktop UI. Default to false."
        }
      },
      "description": "Represents feedback the customer has about the quality & correctness of a certain answer in a conversation."
    },
    "GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
        }
      },
      "description": "Metadata for DeleteDocument operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess": {
      "description": "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.",
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object",
          "description": "Custom metadata. Dialogflow doesn't impose any structure on this."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1Context": {
      "id": "GoogleCloudDialogflowV2beta1Context",
      "properties": {
        "parameters": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: depending on parameter value type, could be one of string, number, boolean, null, list or map - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "type": "object"
        },
        "name": {
          "description": "Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, - `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
          "type": "string"
        },
        "lifespanCount": {
          "type": "integer",
          "description": "Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview)."
    },
    "GoogleCloudDialogflowV2ListKnowledgeBasesResponse": {
      "id": "GoogleCloudDialogflowV2ListKnowledgeBasesResponse",
      "type": "object",
      "description": "Response message for KnowledgeBases.ListKnowledgeBases.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        },
        "knowledgeBases": {
          "type": "array",
          "description": "The list of knowledge bases.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2KnowledgeBase"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2KnowledgeOperationMetadata": {
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "id": "GoogleCloudDialogflowV2KnowledgeOperationMetadata",
      "properties": {
        "state": {
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "description": "Output only. The current state of this operation.",
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2DtmfParameters": {
      "type": "object",
      "properties": {
        "acceptsDtmfInput": {
          "description": "Indicates whether DTMF input can be handled in the next request.",
          "type": "boolean"
        }
      },
      "description": "The message in the response that indicates the parameters of DTMF.",
      "id": "GoogleCloudDialogflowV2DtmfParameters"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow": {
      "description": "Row of TableCard.",
      "properties": {
        "cells": {
          "type": "array",
          "description": "Optional. List of cells that make up this row.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell"
          }
        },
        "dividerAfter": {
          "description": "Optional. Whether to add a visual divider after this row.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow"
    },
    "GoogleCloudDialogflowV2BatchCreateEntitiesRequest": {
      "id": "GoogleCloudDialogflowV2BatchCreateEntitiesRequest",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
        },
        "entities": {
          "description": "Required. The entities to create.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          }
        }
      },
      "description": "The request message for EntityTypes.BatchCreateEntities.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageSelectItemInfo": {
      "id": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo",
      "description": "Additional info about the select item for when it is triggered in a dialog.",
      "properties": {
        "synonyms": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of synonyms that can also be used to trigger this item in dialog."
        },
        "key": {
          "type": "string",
          "description": "Required. A unique key that will be sent back to the agent if this response is given."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ConversationTurn": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3ConversationTurn",
      "properties": {
        "userInput": {
          "description": "The user input.",
          "$ref": "GoogleCloudDialogflowCxV3ConversationTurnUserInput"
        },
        "virtualAgentOutput": {
          "$ref": "GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput",
          "description": "The virtual agent output."
        }
      },
      "description": "One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response."
    },
    "GoogleCloudDialogflowV2IntentMessageText": {
      "id": "GoogleCloudDialogflowV2IntentMessageText",
      "properties": {
        "text": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of the agent's responses.",
          "type": "array"
        }
      },
      "description": "The text response message.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2SentimentAnalysisResult": {
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
      "type": "object",
      "properties": {
        "queryTextSentiment": {
          "description": "The sentiment analysis result for `query_text`.",
          "$ref": "GoogleCloudDialogflowV2Sentiment"
        }
      },
      "id": "GoogleCloudDialogflowV2SentimentAnalysisResult"
    },
    "GoogleCloudDialogflowV2WebhookResponse": {
      "description": "The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `\"\"` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).",
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller."
        },
        "followupEventInput": {
          "description": "Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields.",
          "$ref": "GoogleCloudDialogflowV2EventInput"
        },
        "fulfillmentText": {
          "type": "string",
          "description": "Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller."
        },
        "payload": {
          "description": "Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "outputContexts": {
          "description": "Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "type": "array"
        },
        "sessionEntityTypes": {
          "type": "array",
          "description": "Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
          }
        },
        "fulfillmentMessages": {
          "description": "Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowV2WebhookResponse"
    },
    "GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "description": "Metadata for CreateDocument operation."
    },
    "GoogleCloudDialogflowV2FulfillmentFeature": {
      "id": "GoogleCloudDialogflowV2FulfillmentFeature",
      "description": "Whether fulfillment is enabled for the specific feature.",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SMALLTALK"
          ],
          "description": "The type of the feature that enabled for fulfillment.",
          "enumDescriptions": [
            "Feature type not specified.",
            "Fulfillment is enabled for SmallTalk."
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2SuggestionFeature": {
      "properties": {
        "type": {
          "enumDescriptions": [
            "Unspecified feature type.",
            "Run article suggestion model.",
            "Run FAQ model."
          ],
          "description": "Type of Human Agent Assistant API feature to request.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "ARTICLE_SUGGESTION",
            "FAQ"
          ]
        }
      },
      "type": "object",
      "description": "The type of Human Agent Assistant API suggestion to perform, and the maximum number of results to return for that type. Multiple `Feature` objects can be specified in the `features` list.",
      "id": "GoogleCloudDialogflowV2SuggestionFeature"
    },
    "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The new value of the parameter. A null value clears the parameter.",
          "type": "any"
        },
        "parameter": {
          "description": "Display name of the parameter.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction",
      "description": "Setting a parameter value."
    },
    "GoogleCloudDialogflowV2IntentMessageTableCardRow": {
      "id": "GoogleCloudDialogflowV2IntentMessageTableCardRow",
      "properties": {
        "dividerAfter": {
          "type": "boolean",
          "description": "Optional. Whether to add a visual divider after this row."
        },
        "cells": {
          "description": "Optional. List of cells that make up this row.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageTableCardCell"
          }
        }
      },
      "description": "Row of TableCard.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2SuggestFaqAnswersRequest": {
      "description": "The request message for Participants.SuggestFaqAnswers.",
      "id": "GoogleCloudDialogflowV2SuggestFaqAnswersRequest",
      "type": "object",
      "properties": {
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message to compile suggestion for. If empty, it will be the latest message of the conversation. Format: `projects//locations//conversations//messages/`."
        },
        "contextSize": {
          "description": "Max number of messages prior to and including [latest_message] to use as context when compiling the suggestion. By default 20 and at most 50.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem": {
      "type": "object",
      "properties": {
        "image": {
          "description": "Optional. Hero image for the carousel item.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the carousel item. Maximum of four lines of text."
        },
        "footer": {
          "type": "string",
          "description": "Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text."
        },
        "openUriAction": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction",
          "description": "Required. Action to present to the user."
        },
        "title": {
          "description": "Required. Title of the carousel item. Maximum of two lines of text.",
          "type": "string"
        }
      },
      "description": "Browsing carousel tile",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
    },
    "GoogleCloudDialogflowV2QueryParameters": {
      "id": "GoogleCloudDialogflowV2QueryParameters",
      "description": "Represents the parameters of the conversational query.",
      "type": "object",
      "properties": {
        "geoLocation": {
          "description": "The geo location of this conversational query.",
          "$ref": "GoogleTypeLatLng"
        },
        "contexts": {
          "description": "The collection of contexts to be activated before this query is executed.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          }
        },
        "resetContexts": {
          "description": "Specifies whether to delete all contexts in the current session before the new ones are activated.",
          "type": "boolean"
        },
        "timeZone": {
          "type": "string",
          "description": "The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in agent settings is used."
        },
        "payload": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "This field can be used to pass custom data to your webhook. Arbitrary JSON objects are supported. If supplied, the value is used to populate the `WebhookRequest.original_detect_intent_request.payload` field sent to your webhook.",
          "type": "object"
        },
        "sessionEntityTypes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
          },
          "description": "Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query."
        },
        "webhookHeaders": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through the Dialogflow web console. The headers defined within this field will overwrite the headers configured through the Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc.",
          "type": "object"
        },
        "sentimentAnalysisRequestConfig": {
          "$ref": "GoogleCloudDialogflowV2SentimentAnalysisRequestConfig",
          "description": "Configures the type of sentiment analysis to perform. If not provided, sentiment analysis is not performed."
        }
      }
    },
    "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo": {
      "id": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo",
      "description": "Represents intent information communicated to the webhook.",
      "type": "object",
      "properties": {
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue"
          },
          "description": "Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here."
        },
        "lastMatchedIntent": {
          "type": "string",
          "description": "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`."
        },
        "displayName": {
          "description": "Always present. The display name of the last matched intent.",
          "type": "string"
        },
        "confidence": {
          "format": "float",
          "description": "The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmText": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmText",
      "properties": {
        "rbmSuggestion": {
          "description": "Optional. One or more suggestions to show to the user.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          }
        },
        "text": {
          "description": "Required. Text sent and displayed to the user.",
          "type": "string"
        }
      },
      "description": "Rich Business Messaging (RBM) text response with suggestions."
    },
    "GoogleCloudDialogflowV2IntentMessageSuggestion": {
      "properties": {
        "title": {
          "description": "Required. The text shown the in the suggestion chip.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageSuggestion",
      "description": "The suggestion chip message that the user can tap to quickly post a reply to the conversation.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2ArticleAnswer": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2ArticleAnswer",
      "description": "Represents article answer.",
      "properties": {
        "title": {
          "description": "The article title.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "The article URI."
        },
        "confidence": {
          "format": "float",
          "description": "Article match confidence. The system's confidence score that this article is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).",
          "type": "number"
        },
        "snippets": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Article snippets."
        },
        "metadata": {
          "description": "A map that contains metadata about the answer and the document from which it originates.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "answerRecord": {
          "type": "string",
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\""
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1Fulfillment": {
      "id": "GoogleCloudDialogflowCxV3beta1Fulfillment",
      "properties": {
        "conditionalCases": {
          "description": "Conditional cases for this fulfillment.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases"
          },
          "type": "array"
        },
        "webhook": {
          "type": "string",
          "description": "The webhook to call. Format: `projects//locations//agents//webhooks/`."
        },
        "messages": {
          "description": "The list of rich message responses to present to the user.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          },
          "type": "array"
        },
        "setParameterActions": {
          "description": "Set parameter values before executing the webhook.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction"
          }
        },
        "tag": {
          "type": "string",
          "description": "The tag used by the webhook to identify which fulfillment is being called. This field is required if `webhook` is specified."
        }
      },
      "type": "object",
      "description": "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo": {
      "description": "Additional info about the select item for when it is triggered in a dialog.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo",
      "properties": {
        "key": {
          "type": "string",
          "description": "Required. A unique key that will be sent back to the agent if this response is given."
        },
        "synonyms": {
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of synonyms that can also be used to trigger this item in dialog.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata",
      "description": "Metadata for UpdateDocument operation.",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1IntentParameter": {
      "description": "Represents an intent parameter.",
      "id": "GoogleCloudDialogflowCxV3beta1IntentParameter",
      "properties": {
        "isList": {
          "type": "boolean",
          "description": "Indicates whether the parameter represents a list of values."
        },
        "redact": {
          "description": "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled.",
          "type": "boolean"
        },
        "entityType": {
          "description": "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1EntityTypeEntity": {
      "properties": {
        "value": {
          "type": "string",
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
        },
        "synonyms": {
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "An **entity entry** for an associated entity type.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1EntityTypeEntity"
    },
    "GoogleCloudDialogflowV2IntentMessageTableCardCell": {
      "description": "Cell of TableCardRow.",
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. Text in this cell."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageTableCardCell"
    },
    "GoogleCloudDialogflowV2BatchUpdateEntitiesRequest": {
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          },
          "description": "Required. The entities to update or create."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "Optional. The mask to control which fields get updated.",
          "type": "string"
        },
        "languageCode": {
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
          "type": "string"
        }
      },
      "description": "The request message for EntityTypes.BatchUpdateEntities.",
      "id": "GoogleCloudDialogflowV2BatchUpdateEntitiesRequest",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1QueryInput": {
      "type": "object",
      "description": "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. ",
      "id": "GoogleCloudDialogflowCxV3beta1QueryInput",
      "properties": {
        "text": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TextInput",
          "description": "The natural language text to be processed."
        },
        "intent": {
          "$ref": "GoogleCloudDialogflowCxV3beta1IntentInput",
          "description": "The intent to be triggered."
        },
        "event": {
          "description": "The event to be triggered.",
          "$ref": "GoogleCloudDialogflowCxV3beta1EventInput"
        },
        "dtmf": {
          "$ref": "GoogleCloudDialogflowCxV3beta1DtmfInput",
          "description": "The DTMF event to be handled."
        },
        "languageCode": {
          "description": "Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        },
        "audio": {
          "description": "The natural language speech audio to be processed.",
          "$ref": "GoogleCloudDialogflowCxV3beta1AudioInput"
        }
      }
    },
    "GoogleCloudDialogflowV2ConversationEvent": {
      "properties": {
        "type": {
          "enumDescriptions": [
            "Type not set.",
            "A new conversation has been opened. This is fired when a telephone call is answered, or a conversation is created via the API.",
            "An existing conversation has closed. This is fired when a telephone call is terminated, or a conversation is closed via the API.",
            "An existing conversation has received notification from Dialogflow that human intervention is required.",
            "An existing conversation has received a new message, either from API or telephony. It is configured in ConversationProfile.new_message_event_notification_config",
            "Unrecoverable error during a telephone call. In general non-recoverable errors only occur if something was misconfigured in the ConversationProfile corresponding to the call. After a non-recoverable error, Dialogflow may stop responding. We don't fire this event: * in an API call because we can directly return the error, or, * when we can recover from an error."
          ],
          "description": "The type of the event that this notification refers to.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CONVERSATION_STARTED",
            "CONVERSATION_FINISHED",
            "HUMAN_INTERVENTION_NEEDED",
            "NEW_MESSAGE",
            "UNRECOVERABLE_ERROR"
          ]
        },
        "errorStatus": {
          "$ref": "GoogleRpcStatus",
          "description": "More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL."
        },
        "newMessagePayload": {
          "description": "Payload of NEW_MESSAGE event.",
          "$ref": "GoogleCloudDialogflowV2Message"
        },
        "conversation": {
          "description": "The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2ConversationEvent",
      "type": "object",
      "description": "Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events."
    },
    "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff": {
      "id": "GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff",
      "properties": {
        "metadata": {
          "description": "Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        }
      },
      "description": "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Fulfillment": {
      "type": "object",
      "description": "By default, your agent responds to a matched intent with a static response. As an alternative, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday. For more information, see the [fulfillment guide](https://cloud.google.com/dialogflow/docs/fulfillment-overview).",
      "id": "GoogleCloudDialogflowV2Fulfillment",
      "properties": {
        "features": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2FulfillmentFeature"
          },
          "description": "Optional. The field defines whether the fulfillment is enabled for certain features."
        },
        "genericWebService": {
          "description": "Configuration for a generic web service.",
          "$ref": "GoogleCloudDialogflowV2FulfillmentGenericWebService"
        },
        "enabled": {
          "type": "boolean",
          "description": "Optional. Whether fulfillment is enabled."
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for Fulfillment in an Environment."
        },
        "displayName": {
          "description": "Optional. The human-readable name of the fulfillment, unique within the agent. This field is not used for Fulfillment in an Environment.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue": {
      "id": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue",
      "description": "Represents a value for an intent parameter.",
      "properties": {
        "resolvedValue": {
          "type": "any",
          "description": "Always present. Structured value for the parameter extracted from user utterance."
        },
        "originalValue": {
          "type": "string",
          "description": "Always present. Original text value extracted from user utterance."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2BatchUpdateIntentsResponse": {
      "type": "object",
      "properties": {
        "intents": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          },
          "description": "The collection of updated or created intents."
        }
      },
      "id": "GoogleCloudDialogflowV2BatchUpdateIntentsResponse",
      "description": "The response message for Intents.BatchUpdateIntents."
    },
    "GoogleCloudDialogflowV2BatchDeleteIntentsRequest": {
      "properties": {
        "intents": {
          "description": "Required. The collection of intents to delete. Only intent `name` must be filled in.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          }
        }
      },
      "type": "object",
      "description": "The request message for Intents.BatchDeleteIntents.",
      "id": "GoogleCloudDialogflowV2BatchDeleteIntentsRequest"
    },
    "GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata": {
      "id": "GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata",
      "properties": {
        "genericMetadata": {
          "$ref": "GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata",
          "description": "The generic information of the operation."
        }
      },
      "description": "Metadata for ReloadDocument operation.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2ConversationPhoneNumber": {
      "description": "Represents a phone number for telephony integration. It allows for connecting a particular conversation over telephony.",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The phone number to connect to this conversation."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2ConversationPhoneNumber"
    },
    "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata": {
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "id": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata",
      "properties": {
        "state": {
          "type": "string",
          "description": "Required. Output only. The current state of this operation.",
          "readOnly": true,
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ]
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3WebhookResponse": {
      "description": "The response message for a webhook call.",
      "type": "object",
      "properties": {
        "targetFlow": {
          "type": "string",
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`."
        },
        "payload": {
          "type": "object",
          "description": "Value to append directly to QueryResult.webhook_payloads.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "fulfillmentResponse": {
          "$ref": "GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse",
          "description": "The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user."
        },
        "sessionInfo": {
          "description": "Information about session status. This field can be omitted by the webhook if it does not intend to modify session status.",
          "$ref": "GoogleCloudDialogflowCxV3SessionInfo"
        },
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        },
        "pageInfo": {
          "$ref": "GoogleCloudDialogflowCxV3PageInfo",
          "description": "Information about page status. This field can be omitted by the webhook if it does not intend to modify page status."
        }
      },
      "id": "GoogleCloudDialogflowCxV3WebhookResponse"
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource": {
      "properties": {
        "knowledgeBases": {
          "type": "array",
          "description": "Required. Knowledge bases to query. Format: `projects//locations//knowledgeBases/`. Currently, at most 5 knowledge bases are supported.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Knowledge base source settings. Supported features: ARTICLE_SUGGESTION, FAQ.",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1ArticleAnswer": {
      "description": "Represents article answer.",
      "properties": {
        "title": {
          "description": "The article title.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A map that contains metadata about the answer and the document from which it originates."
        },
        "uri": {
          "description": "The article URI.",
          "type": "string"
        },
        "snippets": {
          "items": {
            "type": "string"
          },
          "description": "Output only. Article snippets.",
          "type": "array"
        },
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1ArticleAnswer"
    },
    "GoogleCloudDialogflowV2SuggestArticlesResponse": {
      "id": "GoogleCloudDialogflowV2SuggestArticlesResponse",
      "properties": {
        "latestMessage": {
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.",
          "type": "string"
        },
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesRequest.context_size field in the request if there aren't that many messages in the conversation.",
          "type": "integer",
          "format": "int32"
        },
        "articleAnswers": {
          "description": "Articles ordered by score in descending order.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2ArticleAnswer"
          }
        }
      },
      "type": "object",
      "description": "The response message for Participants.SuggestArticles."
    },
    "GoogleCloudDialogflowV2AgentAssistantFeedback": {
      "description": "Detail feedback of Agent Assist result.",
      "properties": {
        "answerRelevance": {
          "type": "string",
          "description": "Optional. Whether or not the suggested answer is relevant. For example: * Query: \"Can I change my mailing address?\" * Suggested document says: \"Items must be returned/exchanged within 60 days of the purchase date.\" * answer_relevance: AnswerRelevance.IRRELEVANT",
          "enum": [
            "ANSWER_RELEVANCE_UNSPECIFIED",
            "IRRELEVANT",
            "RELEVANT"
          ],
          "enumDescriptions": [
            "Answer relevance unspecified.",
            "Answer is irrelevant to query.",
            "Answer is relevant to query."
          ]
        },
        "documentEfficiency": {
          "type": "string",
          "enumDescriptions": [
            "Document efficiency unspecified.",
            "Document is inefficient.",
            "Document is efficient."
          ],
          "description": "Optional. Whether or not the suggested document is efficient. For example, if the document is poorly written, hard to understand, hard to use or too long to find useful information, document_efficiency is DocumentEfficiency.INEFFICIENT.",
          "enum": [
            "DOCUMENT_EFFICIENCY_UNSPECIFIED",
            "INEFFICIENT",
            "EFFICIENT"
          ]
        },
        "documentCorrectness": {
          "description": "Optional. Whether or not the information in the document is correct. For example: * Query: \"Can I return the package in 2 days once received?\" * Suggested document says: \"Items must be returned/exchanged within 60 days of the purchase date.\" * Ground truth: \"No return or exchange is allowed.\" * [document_correctness]: INCORRECT",
          "enum": [
            "DOCUMENT_CORRECTNESS_UNSPECIFIED",
            "INCORRECT",
            "CORRECT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Document correctness unspecified.",
            "Information in document is incorrect.",
            "Information in document is correct."
          ]
        }
      },
      "id": "GoogleCloudDialogflowV2AgentAssistantFeedback",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3WebhookRequest": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3WebhookRequest",
      "properties": {
        "languageCode": {
          "description": "The language code specified in the original request.",
          "type": "string"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ResponseMessage"
          },
          "description": "The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;"
        },
        "payload": {
          "description": "Custom data set in QueryParameters.payload.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "detectIntentResponseId": {
          "type": "string",
          "description": "Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller."
        },
        "transcript": {
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio.",
          "type": "string"
        },
        "intentInfo": {
          "description": "Information about the last matched intent.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestIntentInfo"
        },
        "text": {
          "type": "string",
          "description": "If natural language text was provided as input, this field will contain a copy of the text."
        },
        "fulfillmentInfo": {
          "description": "Always present. Information about the fulfillment that triggered this webhook call.",
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo"
        },
        "sentimentAnalysisResult": {
          "$ref": "GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult",
          "description": "The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request."
        },
        "sessionInfo": {
          "$ref": "GoogleCloudDialogflowCxV3SessionInfo",
          "description": "Information about session status."
        },
        "triggerIntent": {
          "type": "string",
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
        },
        "triggerEvent": {
          "description": "If an event was provided as input, this field will contain the name of the event.",
          "type": "string"
        },
        "pageInfo": {
          "$ref": "GoogleCloudDialogflowCxV3PageInfo",
          "description": "Information about page status."
        }
      },
      "description": "The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases."
    },
    "GoogleCloudDialogflowV2beta1ConversationEvent": {
      "id": "GoogleCloudDialogflowV2beta1ConversationEvent",
      "description": "Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.",
      "type": "object",
      "properties": {
        "newMessagePayload": {
          "description": "Payload of NEW_MESSAGE event.",
          "$ref": "GoogleCloudDialogflowV2beta1Message"
        },
        "conversation": {
          "type": "string",
          "description": "Required. The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`."
        },
        "type": {
          "description": "Required. The type of the event that this notification refers to.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CONVERSATION_STARTED",
            "CONVERSATION_FINISHED",
            "NEW_MESSAGE",
            "UNRECOVERABLE_ERROR"
          ],
          "enumDescriptions": [
            "Type not set.",
            "A new conversation has been opened. This is fired when a telephone call is answered, or a conversation is created via the API.",
            "An existing conversation has closed. This is fired when a telephone call is terminated, or a conversation is closed via the API.",
            "An existing conversation has received a new message, either from API or telephony. It is configured in ConversationProfile.new_message_event_notification_config",
            "Unrecoverable error during a telephone call. In general non-recoverable errors only occur if something was misconfigured in the ConversationProfile corresponding to the call. After a non-recoverable error, Dialogflow may stop responding. We don't fire this event: * in an API call because we can directly return the error, or, * when we can recover from an error."
          ],
          "type": "string"
        },
        "errorStatus": {
          "description": "Optional. More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL.",
          "$ref": "GoogleRpcStatus"
        }
      }
    },
    "GoogleCloudDialogflowCxV3DtmfInput": {
      "properties": {
        "digits": {
          "description": "The dtmf digits.",
          "type": "string"
        },
        "finishDigit": {
          "type": "string",
          "description": "The finish digit (if any)."
        }
      },
      "type": "object",
      "description": "Represents the input for dtmf event.",
      "id": "GoogleCloudDialogflowCxV3DtmfInput"
    },
    "GoogleCloudDialogflowCxV3AudioInput": {
      "description": "Represents the natural speech audio to be processed.",
      "properties": {
        "audio": {
          "type": "string",
          "description": "The natural language speech audio to be processed. A single request can contain up to 1 minute of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.",
          "format": "byte"
        },
        "config": {
          "description": "Required. Instructs the speech recognizer how to process the speech audio.",
          "$ref": "GoogleCloudDialogflowCxV3InputAudioConfig"
        }
      },
      "id": "GoogleCloudDialogflowCxV3AudioInput",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3ImportTestCasesMetadata": {
      "id": "GoogleCloudDialogflowCxV3ImportTestCasesMetadata",
      "description": "Metadata returned for the TestCases.ImportTestCases long running operation.",
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestCaseError"
          },
          "description": "Errors for failed test cases."
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1TextInput": {
      "description": "Represents the natural language text to be processed.",
      "properties": {
        "text": {
          "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1TextInput",
      "type": "object"
    },
    "GoogleCloudDialogflowV2OutputAudioConfig": {
      "type": "object",
      "properties": {
        "audioEncoding": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM). Audio content returned as LINEAR16 also contains a WAV header.",
            "MP3 audio at 32kbps.",
            "MP3 audio at 64kbps.",
            "Opus encoded audio wrapped in an ogg container. The result will be a file which can be played natively on Android, and in browsers (at least Chrome and Firefox). The quality of the encoding is considerably higher than MP3 while using approximately the same bitrate.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law."
          ],
          "enum": [
            "OUTPUT_AUDIO_ENCODING_UNSPECIFIED",
            "OUTPUT_AUDIO_ENCODING_LINEAR_16",
            "OUTPUT_AUDIO_ENCODING_MP3",
            "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS",
            "OUTPUT_AUDIO_ENCODING_OGG_OPUS",
            "OUTPUT_AUDIO_ENCODING_MULAW"
          ],
          "description": "Required. Audio encoding of the synthesized audio content."
        },
        "sampleRateHertz": {
          "description": "The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
          "type": "integer",
          "format": "int32"
        },
        "synthesizeSpeechConfig": {
          "description": "Configuration of how speech should be synthesized.",
          "$ref": "GoogleCloudDialogflowV2SynthesizeSpeechConfig"
        }
      },
      "id": "GoogleCloudDialogflowV2OutputAudioConfig",
      "description": "Instructs the speech synthesizer on how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent."
    },
    "GoogleCloudDialogflowV2Document": {
      "type": "object",
      "description": "A knowledge document to be used by a KnowledgeBase. For more information, see the [knowledge base guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases). Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`.",
      "properties": {
        "rawContent": {
          "description": "The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.",
          "format": "byte",
          "type": "string"
        },
        "name": {
          "description": "Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`.",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "Required. The MIME type of this document."
        },
        "displayName": {
          "description": "Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.",
          "type": "string"
        },
        "metadata": {
          "description": "Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "enableAutoReload": {
          "description": "Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document. Currently you can only enable automatic reload for documents sourced from a public url, see `source` field for the source types. Reload status can be tracked in `latest_reload_status`. If a reload fails, we will keep the document unchanged. If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling `ReloadDocument` and clear the errors.",
          "type": "boolean"
        },
        "knowledgeTypes": {
          "type": "array",
          "description": "Required. The knowledge type of document content.",
          "items": {
            "enum": [
              "KNOWLEDGE_TYPE_UNSPECIFIED",
              "FAQ",
              "EXTRACTIVE_QA",
              "ARTICLE_SUGGESTION"
            ],
            "enumDescriptions": [
              "The type is unspecified or arbitrary.",
              "The document content contains question and answer pairs as either HTML or CSV. Typical FAQ HTML formats are parsed accurately, but unusual formats may fail to be parsed. CSV must have questions in the first column and answers in the second, with no header. Because of this explicit format, they are always parsed accurately.",
              "Documents for which unstructured text is extracted and used for question answering.",
              "The entire document content as a whole can be used for query results. Only for Contact Center Solutions on Dialogflow."
            ],
            "type": "string"
          }
        },
        "latestReloadStatus": {
          "readOnly": true,
          "$ref": "GoogleCloudDialogflowV2DocumentReloadStatus",
          "description": "Output only. The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded."
        },
        "contentUri": {
          "description": "The URI where the file content is located. For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`. NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the `gs://` format URI described above.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2Document"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequest": {
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequest",
      "properties": {
        "sentimentAnalysisResult": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult",
          "description": "The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request."
        },
        "text": {
          "description": "If natural language text was provided as input, this field will contain a copy of the text.",
          "type": "string"
        },
        "payload": {
          "description": "Custom data set in QueryParameters.payload.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "detectIntentResponseId": {
          "type": "string",
          "description": "Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller."
        },
        "intentInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo",
          "description": "Information about the last matched intent."
        },
        "languageCode": {
          "type": "string",
          "description": "The language code specified in the original request."
        },
        "fulfillmentInfo": {
          "description": "Always present. Information about the fulfillment that triggered this webhook call.",
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo"
        },
        "pageInfo": {
          "description": "Information about page status.",
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfo"
        },
        "messages": {
          "type": "array",
          "description": "The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          }
        },
        "sessionInfo": {
          "description": "Information about session status.",
          "$ref": "GoogleCloudDialogflowCxV3beta1SessionInfo"
        },
        "triggerEvent": {
          "description": "If an event was provided as input, this field will contain the name of the event.",
          "type": "string"
        },
        "transcript": {
          "description": "If natural language speech audio was provided as input, this field will contain the transcript for the audio.",
          "type": "string"
        },
        "triggerIntent": {
          "description": "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`.",
          "type": "string"
        }
      },
      "description": "The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1TestCaseError": {
      "properties": {
        "testCase": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCase",
          "description": "The test case."
        },
        "status": {
          "description": "The status associated with the test case.",
          "$ref": "GoogleRpcStatus"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1TestCaseError",
      "description": "Error info for importing a test."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Required. The phone number to transfer the call to in [E.164 format](https://en.wikipedia.org/wiki/E.164). We currently only allow transferring to US numbers (+1xxxyyyzzzz)."
        }
      },
      "description": "Transfers the call in Telephony Gateway."
    },
    "GoogleCloudDialogflowCxV3beta1TransitionRoute": {
      "id": "GoogleCloudDialogflowCxV3beta1TransitionRoute",
      "type": "object",
      "description": "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow.",
      "properties": {
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "condition": {
          "description": "The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The unique identifier of this transition route.",
          "readOnly": true,
          "type": "string"
        },
        "intent": {
          "description": "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.",
          "type": "string"
        },
        "triggerFulfillment": {
          "$ref": "GoogleCloudDialogflowCxV3beta1Fulfillment",
          "description": "The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first."
        },
        "targetPage": {
          "type": "string",
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent",
      "description": "Rich Business Messaging (RBM) Card content",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. Title of the card (at most 200 bytes). At least one of the title, description or media must be set."
        },
        "media": {
          "description": "Optional. However at least one of the title, description or media must be set. Media (image, GIF or a video) to include in the card.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia"
        },
        "suggestions": {
          "description": "Optional. List of suggestions to include in the card.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          }
        },
        "description": {
          "description": "Optional. Description of the card (at most 2000 bytes). At least one of the title, description or media must be set.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3TestCaseResult": {
      "description": "Represents a result from running a test case in an agent environment.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.",
          "type": "string"
        },
        "environment": {
          "description": "Environment where the test was run. If not set, it indicates the draft environment.",
          "type": "string"
        },
        "testTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time that the test was run."
        },
        "testResult": {
          "enum": [
            "TEST_RESULT_UNSPECIFIED",
            "PASSED",
            "FAILED"
          ],
          "description": "Whether the test case passed in the agent environment.",
          "enumDescriptions": [
            "Not specified. Should never be used.",
            "The test passed.",
            "The test did not pass."
          ],
          "type": "string"
        },
        "conversationTurns": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3ConversationTurn"
          },
          "description": "The conversation turns uttered during the test case replay in chronological order."
        }
      },
      "id": "GoogleCloudDialogflowCxV3TestCaseResult"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion": {
      "description": "Rich Business Messaging (RBM) suggestion. Suggestions allow user to easily select/click a predefined response or perform an action (like opening a web uri).",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion",
      "properties": {
        "reply": {
          "description": "Predefined replies for user to select instead of typing",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply"
        },
        "action": {
          "description": "Predefined client side actions that user can choose",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2TextToSpeechSettings": {
      "id": "GoogleCloudDialogflowV2TextToSpeechSettings",
      "properties": {
        "outputAudioEncoding": {
          "description": "Required. Audio encoding of the synthesized audio content.",
          "type": "string",
          "enum": [
            "OUTPUT_AUDIO_ENCODING_UNSPECIFIED",
            "OUTPUT_AUDIO_ENCODING_LINEAR_16",
            "OUTPUT_AUDIO_ENCODING_MP3",
            "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS",
            "OUTPUT_AUDIO_ENCODING_OGG_OPUS",
            "OUTPUT_AUDIO_ENCODING_MULAW"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM). Audio content returned as LINEAR16 also contains a WAV header.",
            "MP3 audio at 32kbps.",
            "MP3 audio at 64kbps.",
            "Opus encoded audio wrapped in an ogg container. The result will be a file which can be played natively on Android, and in browsers (at least Chrome and Firefox). The quality of the encoding is considerably higher than MP3 while using approximately the same bitrate.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law."
          ]
        },
        "sampleRateHertz": {
          "description": "Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).",
          "format": "int32",
          "type": "integer"
        },
        "enableTextToSpeech": {
          "type": "boolean",
          "description": "Optional. Indicates whether text to speech is enabled. Even when this field is false, other settings in this proto are still retained."
        },
        "synthesizeSpeechConfigs": {
          "description": "Optional. Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/docs/reference/language) to SynthesizeSpeechConfig.",
          "additionalProperties": {
            "$ref": "GoogleCloudDialogflowV2SynthesizeSpeechConfig"
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "Instructs the speech synthesizer on how to generate the output audio content."
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource": {
      "type": "object",
      "description": "Document source settings. Supported features: SMART_REPLY, SMART_COMPOSE.",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. Knowledge documents to query from. Format: `projects//locations//knowledgeBases//documents/`. Currently, at most 5 documents are supported."
        }
      },
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource"
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudDialogflowV2beta1SuggestArticlesResponse": {
      "id": "GoogleCloudDialogflowV2beta1SuggestArticlesResponse",
      "description": "The response message for Participants.SuggestArticles.",
      "properties": {
        "latestMessage": {
          "description": "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.",
          "type": "string"
        },
        "contextSize": {
          "description": "Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesResponse.context_size field in the request if there aren't that many messages in the conversation.",
          "format": "int32",
          "type": "integer"
        },
        "articleAnswers": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1ArticleAnswer"
          },
          "type": "array",
          "description": "Output only. Articles ordered by score in descending order."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2EntityTypeEntity": {
      "description": "An **entity entry** for an associated entity type.",
      "properties": {
        "synonyms": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`."
        },
        "value": {
          "type": "string",
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2EntityTypeEntity"
    },
    "GoogleCloudDialogflowV2ValidationResult": {
      "properties": {
        "validationErrors": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2ValidationError"
          },
          "description": "Contains all validation errors."
        }
      },
      "description": "Represents the output of agent validation.",
      "id": "GoogleCloudDialogflowV2ValidationResult",
      "type": "object"
    },
    "GoogleCloudDialogflowV2BatchUpdateIntentsRequest": {
      "id": "GoogleCloudDialogflowV2BatchUpdateIntentsRequest",
      "type": "object",
      "properties": {
        "intentView": {
          "type": "string",
          "description": "Optional. The resource view to apply to the returned intent.",
          "enumDescriptions": [
            "Training phrases field is not populated in the response.",
            "All fields are populated."
          ],
          "enum": [
            "INTENT_VIEW_UNSPECIFIED",
            "INTENT_VIEW_FULL"
          ]
        },
        "updateMask": {
          "type": "string",
          "description": "Optional. The mask to control which fields get updated.",
          "format": "google-fieldmask"
        },
        "languageCode": {
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
          "type": "string"
        },
        "intentBatchInline": {
          "description": "The collection of intents to update or create.",
          "$ref": "GoogleCloudDialogflowV2IntentBatch"
        },
        "intentBatchUri": {
          "description": "The URI to a Google Cloud Storage file containing intents to update or create. The file format can either be a serialized proto (of IntentBatch type) or JSON object. Note: The URI must start with \"gs://\".",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ConversationTurn": {
      "properties": {
        "userInput": {
          "description": "The user input.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput"
        },
        "virtualAgentOutput": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput",
          "description": "The virtual agent output."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ConversationTurn",
      "type": "object",
      "description": "One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial",
      "description": "Opens the user's default dialer app with the specified phone number but does not dial automatically.",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Required. The phone number to fill in the default dialer app. This field should be in [E.164](https://en.wikipedia.org/wiki/E.164) format. An example of a correctly formatted phone number: +15556767888."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2AnalyzeContentResponse": {
      "id": "GoogleCloudDialogflowV2AnalyzeContentResponse",
      "properties": {
        "endUserSuggestionResults": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2SuggestionResult"
          },
          "type": "array",
          "description": "The suggestions for end user. The order is the same as HumanAgentAssistantConfig.SuggestionConfig.feature_configs of HumanAgentAssistantConfig.end_user_suggestion_config."
        },
        "dtmfParameters": {
          "description": "Indicates the parameters of DTMF.",
          "$ref": "GoogleCloudDialogflowV2DtmfParameters"
        },
        "automatedAgentReply": {
          "$ref": "GoogleCloudDialogflowV2AutomatedAgentReply",
          "description": "Only set if a Dialogflow automated agent has responded. Note that: AutomatedAgentReply.detect_intent_response.output_audio and AutomatedAgentReply.detect_intent_response.output_audio_config are always empty, use reply_audio instead."
        },
        "message": {
          "description": "Message analyzed by CCAI.",
          "$ref": "GoogleCloudDialogflowV2Message"
        },
        "replyAudio": {
          "$ref": "GoogleCloudDialogflowV2OutputAudio",
          "description": "The audio data bytes encoded as specified in the request. This field is set if: - `reply_audio_config` was specified in the request, or - The automated agent responded with audio to play to the user. In such case, `reply_audio.config` contains settings used to synthesize the speech. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content."
        },
        "replyText": {
          "type": "string",
          "description": "The output text content. This field is set if the automated agent responded with text to show to the user."
        },
        "humanAgentSuggestionResults": {
          "description": "The suggestions for most recent human agent. The order is the same as HumanAgentAssistantConfig.SuggestionConfig.feature_configs of HumanAgentAssistantConfig.human_agent_suggestion_config.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SuggestionResult"
          }
        }
      },
      "description": "The response message for Participants.AnalyzeContent.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentFollowupIntentInfo": {
      "properties": {
        "parentFollowupIntentName": {
          "type": "string",
          "description": "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`."
        },
        "followupIntentName": {
          "type": "string",
          "description": "The unique identifier of the followup intent. Format: `projects//agent/intents/`."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentFollowupIntentInfo",
      "description": "Represents a single followup intent in the chain."
    },
    "GoogleCloudDialogflowV2EntityTypeBatch": {
      "id": "GoogleCloudDialogflowV2EntityTypeBatch",
      "properties": {
        "entityTypes": {
          "description": "A collection of entity types.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityType"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "This message is a wrapper around a collection of entity types."
    },
    "GoogleCloudDialogflowV2FaqAnswer": {
      "id": "GoogleCloudDialogflowV2FaqAnswer",
      "properties": {
        "confidence": {
          "format": "float",
          "type": "number",
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain)."
        },
        "answerRecord": {
          "description": "The name of answer record, in the format of \"projects//locations//answerRecords/\"",
          "type": "string"
        },
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document."
        },
        "question": {
          "description": "The corresponding FAQ question.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A map that contains metadata about the answer and the document from which it originates."
        },
        "source": {
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Represents answer from \"frequently asked questions\"."
    },
    "GoogleCloudDialogflowV2OriginalDetectIntentRequest": {
      "id": "GoogleCloudDialogflowV2OriginalDetectIntentRequest",
      "description": "Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.",
      "type": "object",
      "properties": {
        "payload": {
          "description": "Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { \"telephony\": { \"caller_id\": \"+18558363987\" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "source": {
          "description": "The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers.",
          "type": "string"
        },
        "version": {
          "description": "Optional. The version of the protocol used for this request. This field is AoG-specific.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2TextInput": {
      "id": "GoogleCloudDialogflowV2TextInput",
      "type": "object",
      "description": "Represents the natural language text to be processed.",
      "properties": {
        "text": {
          "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters.",
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "Required. The language of this conversational query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language."
        }
      }
    },
    "GoogleCloudDialogflowV2BatchDeleteEntitiesRequest": {
      "properties": {
        "entityValues": {
          "items": {
            "type": "string"
          },
          "description": "Required. The reference `values` of the entities to delete. Note that these are not fully-qualified names, i.e. they don't start with `projects/`.",
          "type": "array"
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
        }
      },
      "type": "object",
      "description": "The request message for EntityTypes.BatchDeleteEntities.",
      "id": "GoogleCloudDialogflowV2BatchDeleteEntitiesRequest"
    },
    "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart": {
      "id": "GoogleCloudDialogflowCxV3IntentTrainingPhrasePart",
      "type": "object",
      "description": "Represents a part of a training phrase.",
      "properties": {
        "parameterId": {
          "description": "The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Required. The text for this part."
        }
      }
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantEvent": {
      "description": "Represents a notification sent to Cloud Pub/Sub subscribers for human agent assistant events in a specific conversation.",
      "properties": {
        "suggestionResults": {
          "description": "The suggestion results payload that this notification refers to.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SuggestionResult"
          }
        },
        "conversation": {
          "type": "string",
          "description": "The conversation this notification refers to. Format: `projects//conversations/`."
        },
        "participant": {
          "type": "string",
          "description": "The participant that the suggestion is compiled for. Format: `projects//conversations//participants/`. It will not be set in legacy workflow."
        }
      },
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantEvent",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageText": {
      "description": "The text response message.",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageText",
      "properties": {
        "allowPlaybackInterruption": {
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean",
          "readOnly": true
        },
        "text": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. A collection of text responses."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata": {
      "id": "GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata",
      "type": "object",
      "description": "Metadata returned for the TestCases.BatchRunTestCases long running operation.",
      "properties": {
        "errors": {
          "description": "The test errors.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3TestError"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction": {
      "type": "object",
      "properties": {
        "urlTypeHint": {
          "enumDescriptions": [
            "Unspecified",
            "Url would be an amp action",
            "URL that points directly to AMP content, or to a canonical URL which refers to AMP content via ."
          ],
          "description": "Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.",
          "type": "string",
          "enum": [
            "URL_TYPE_HINT_UNSPECIFIED",
            "AMP_ACTION",
            "AMP_CONTENT"
          ]
        },
        "url": {
          "description": "Required. URL",
          "type": "string"
        }
      },
      "description": "Actions on Google action to open a given url.",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
    },
    "GoogleCloudDialogflowV2SuggestArticlesRequest": {
      "id": "GoogleCloudDialogflowV2SuggestArticlesRequest",
      "description": "The request message for Participants.SuggestArticles.",
      "type": "object",
      "properties": {
        "latestMessage": {
          "type": "string",
          "description": "The name of the latest conversation message to compile suggestion for. If empty, it will be the latest message of the conversation. Format: `projects//locations//conversations//messages/`."
        },
        "contextSize": {
          "type": "integer",
          "format": "int32",
          "description": "Max number of messages prior to and including latest_message to use as context when compiling the suggestion. By default 20 and at most 50."
        }
      }
    },
    "GoogleCloudDialogflowV2HumanAgentAssistantConfig": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2HumanAgentAssistantConfig",
      "description": "Defines the Human Agent Assist to connect to a conversation.",
      "properties": {
        "humanAgentSuggestionConfig": {
          "description": "Configuration for agent assistance of human agent participant.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig"
        },
        "messageAnalysisConfig": {
          "description": "Configuration for message analysis.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig"
        },
        "notificationConfig": {
          "description": "Pub/Sub topic on which to publish new agent assistant events.",
          "$ref": "GoogleCloudDialogflowV2NotificationConfig"
        },
        "endUserSuggestionConfig": {
          "description": "Configuration for agent assistance of end user participant. Currently, this feature is not general available, please contact Google to get access.",
          "$ref": "GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig"
        }
      }
    },
    "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo": {
      "description": "Represents fulfillment information communicated to the webhook.",
      "properties": {
        "tag": {
          "description": "Always present. The tag used to identify which fulfillment is being called.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageListSelectItem": {
      "id": "GoogleCloudDialogflowV2IntentMessageListSelectItem",
      "type": "object",
      "description": "An item in the list.",
      "properties": {
        "info": {
          "description": "Required. Additional information about this option.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo"
        },
        "title": {
          "description": "Required. The title of the list item.",
          "type": "string"
        },
        "description": {
          "description": "Optional. The main text describing the item.",
          "type": "string"
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. The image to display."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSuggestions": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSuggestions",
      "properties": {
        "suggestions": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSuggestion"
          },
          "description": "Required. The list of suggested replies.",
          "type": "array"
        }
      },
      "description": "The collection of suggestions."
    },
    "GoogleCloudDialogflowCxV3beta1IntentInput": {
      "properties": {
        "intent": {
          "type": "string",
          "description": "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1IntentInput",
      "description": "Represents the intent to trigger programmatically rather than as a result of natural language processing.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard",
      "description": "Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel",
      "properties": {
        "imageDisplayOptions": {
          "type": "string",
          "enumDescriptions": [
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with white bars.",
            "Image is scaled such that the image width and height match or exceed the container dimensions. This may crop the top and bottom of the image if the scaled image height is greater than the container height, or crop the left and right of the image if the scaled image width is greater than the container width. This is similar to \"Zoom Mode\" on a widescreen TV when playing a 4:3 video.",
            "Pad the gaps between image and image frame with a blurred copy of the same image."
          ],
          "enum": [
            "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED",
            "GRAY",
            "WHITE",
            "CROPPED",
            "BLURRED_BACKGROUND"
          ],
          "description": "Optional. Settings for displaying the image. Applies to every image in items."
        },
        "items": {
          "type": "array",
          "description": "Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2ListEntityTypesResponse": {
      "description": "The response message for EntityTypes.ListEntityTypes.",
      "id": "GoogleCloudDialogflowV2ListEntityTypesResponse",
      "properties": {
        "entityTypes": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityType"
          },
          "description": "The list of agent entity types. There will be a maximum number of items returned based on the page_size field in the request."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse": {
      "type": "object",
      "properties": {
        "results": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult"
          },
          "description": "The test case results. The detailed conversation turns are empty in this response.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse",
      "description": "The response message for TestCases.BatchRunTestCases."
    },
    "GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig": {
      "description": "Configuration specific to Salesforce Live Agent.",
      "properties": {
        "deploymentId": {
          "type": "string",
          "description": "Required. Live Agent deployment ID."
        },
        "organizationId": {
          "description": "Required. The organization ID of the Salesforce account.",
          "type": "string"
        },
        "buttonId": {
          "description": "Required. Live Agent chat button ID.",
          "type": "string"
        },
        "endpointDomain": {
          "description": "Required. Domain of the Live Agent endpoint for this agent. You can find the endpoint URL in the `Live Agent settings` page. For example if URL has the form https://d.la4-c2-phx.salesforceliveagent.com/..., you should fill in d.la4-c2-phx.salesforceliveagent.com.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCard": {
      "description": "The basic card message. Useful for displaying information.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCard",
      "properties": {
        "formattedText": {
          "description": "Required, unless image is present. The body text of the card.",
          "type": "string"
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. The image for the card."
        },
        "title": {
          "description": "Optional. The title of the card.",
          "type": "string"
        },
        "buttons": {
          "description": "Optional. The collection of card buttons.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          },
          "type": "array"
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2ListVersionsResponse": {
      "description": "The response message for Versions.ListVersions.",
      "properties": {
        "versions": {
          "description": "The list of agent versions. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Version"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2ListVersionsResponse"
    },
    "GoogleCloudDialogflowV2IntentTrainingPhrasePart": {
      "id": "GoogleCloudDialogflowV2IntentTrainingPhrasePart",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase."
        },
        "entityType": {
          "type": "string",
          "description": "Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase."
        },
        "text": {
          "description": "Required. The text for this part.",
          "type": "string"
        },
        "userDefined": {
          "description": "Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Represents a part of a training phrase."
    },
    "GoogleCloudDialogflowCxV3beta1TestCase": {
      "type": "object",
      "properties": {
        "testConfig": {
          "description": "Config for the test case.",
          "$ref": "GoogleCloudDialogflowCxV3beta1TestConfig"
        },
        "testCaseConversationTurns": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ConversationTurn"
          },
          "description": "The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly."
        },
        "displayName": {
          "description": "Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.",
          "type": "string"
        },
        "lastTestResult": {
          "$ref": "GoogleCloudDialogflowCxV3beta1TestCaseResult",
          "description": "The latest test result."
        },
        "tags": {
          "description": "Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with \"#\" and has a limit of 30 characters.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creationTime": {
          "format": "google-datetime",
          "description": "Output only. When the test was created.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."
        },
        "notes": {
          "description": "Additional freeform notes about the test case. Limit of 400 characters.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1TestCase",
      "description": "Represents a test case."
    },
    "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem": {
      "properties": {
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "description": {
          "type": "string",
          "description": "Optional. The body text of the card."
        },
        "info": {
          "description": "Required. Additional info about the option item.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo"
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the carousel item."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem",
      "description": "An item in the carousel."
    },
    "GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig": {
      "description": "Configuration specific to LivePerson (https://www.liveperson.com).",
      "id": "GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig",
      "type": "object",
      "properties": {
        "accountNumber": {
          "type": "string",
          "description": "Required. Account number of the LivePerson account to connect. This is the account number you input at the login page."
        }
      }
    },
    "GoogleCloudDialogflowV2ListContextsResponse": {
      "description": "The response message for Contexts.ListContexts.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "contexts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "description": "The list of contexts. There will be a maximum number of items returned based on the page_size field in the request."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2ListContextsResponse"
    },
    "GoogleCloudDialogflowCxV3RunTestCaseResponse": {
      "id": "GoogleCloudDialogflowCxV3RunTestCaseResponse",
      "type": "object",
      "description": "The response message for TestCases.RunTestCase.",
      "properties": {
        "result": {
          "$ref": "GoogleCloudDialogflowCxV3TestCaseResult",
          "description": "The result."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageColumnProperties": {
      "description": "Column properties for TableCard.",
      "properties": {
        "horizontalAlignment": {
          "type": "string",
          "enum": [
            "HORIZONTAL_ALIGNMENT_UNSPECIFIED",
            "LEADING",
            "CENTER",
            "TRAILING"
          ],
          "enumDescriptions": [
            "Text is aligned to the leading edge of the column.",
            "Text is aligned to the leading edge of the column.",
            "Text is centered in the column.",
            "Text is aligned to the trailing edge of the column."
          ],
          "description": "Optional. Defines text alignment for all cells in this column."
        },
        "header": {
          "description": "Required. Column heading.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageColumnProperties",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion": {
      "id": "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion",
      "description": "The suggestion chip message that allows the user to jump out to the app or website associated with this agent.",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The URI of the app or site to open when the user taps the suggestion chip."
        },
        "destinationName": {
          "type": "string",
          "description": "Required. The name of the app or site this chip is linking to."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse": {
      "type": "object",
      "properties": {
        "gcsUri": {
          "description": "The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest.",
          "type": "string"
        },
        "content": {
          "description": "Uncompressed raw byte content for test cases.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "The response message for TestCases.ExportTestCases.",
      "id": "GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse"
    },
    "GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata": {
      "description": "Metadata for CreateDocument operation.",
      "type": "object",
      "properties": {
        "genericMetadata": {
          "description": "The generic information of the operation.",
          "$ref": "GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
        }
      },
      "id": "GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata"
    },
    "GoogleCloudDialogflowV2beta1WebhookRequest": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1WebhookRequest",
      "properties": {
        "responseId": {
          "type": "string",
          "description": "The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`."
        },
        "originalDetectIntentRequest": {
          "$ref": "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest",
          "description": "Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call."
        },
        "queryResult": {
          "description": "The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.",
          "$ref": "GoogleCloudDialogflowV2beta1QueryResult"
        },
        "session": {
          "description": "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`,",
          "type": "string"
        },
        "alternativeQueryResults": {
          "type": "array",
          "description": "Alternative query results from KnowledgeService.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1QueryResult"
          }
        }
      },
      "description": "The request message for a webhook call."
    },
    "GoogleCloudDialogflowV3alpha1ImportDocumentsResponse": {
      "id": "GoogleCloudDialogflowV3alpha1ImportDocumentsResponse",
      "type": "object",
      "description": "Response message for Documents.ImportDocuments.",
      "properties": {
        "warnings": {
          "description": "Includes details about skipped documents or any other warnings.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2ListAnswerRecordsResponse": {
      "description": "Response message for AnswerRecords.ListAnswerRecords.",
      "properties": {
        "answerRecords": {
          "description": "The list of answer records.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2AnswerRecord"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Or empty if there are no more results. Pass this value in the ListAnswerRecordsRequest.page_token field in the subsequent call to `ListAnswerRecords` method to retrieve the next page of results.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2ListAnswerRecordsResponse",
      "type": "object"
    }
  },
  "description": "Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).",
  "version_module": true
}
