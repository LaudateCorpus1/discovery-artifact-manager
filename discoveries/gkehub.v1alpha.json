{
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "gkehub:v1alpha",
  "ownerDomain": "google.com",
  "description": "",
  "parameters": {
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "description": "V1 error format."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  },
  "kind": "discovery#restDescription",
  "basePath": "",
  "mtlsRootUrl": "https://gkehub.mtls.googleapis.com/",
  "schemas": {
    "Operation": {
      "id": "Operation",
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "FeatureResourceState": {
      "type": "object",
      "description": "FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the \"running state\" of the Feature in the Hub and across Memberships.",
      "id": "FeatureResourceState",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLING",
            "ACTIVE",
            "DISABLING",
            "UPDATING",
            "SERVICE_UPDATING"
          ],
          "description": "The current state of the Feature resource in the Hub API.",
          "type": "string",
          "enumDescriptions": [
            "State is unknown or not set.",
            "The Feature is being enabled, and the Feature resource is being created. Once complete, the corresponding Feature will be enabled in this Hub.",
            "The Feature is enabled in this Hub, and the Feature resource is fully available.",
            "The Feature is being disabled in this Hub, and the Feature resource is being deleted.",
            "The Feature resource is being updated.",
            "The Feature resource is being updated by the Hub Service."
          ]
        }
      }
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object"
    },
    "ServiceMeshFeatureState": {
      "id": "ServiceMeshFeatureState",
      "properties": {
        "analysisMessages": {
          "type": "array",
          "description": "Output only. Results of running Service Mesh analyzers.",
          "items": {
            "$ref": "ServiceMeshAnalysisMessage"
          },
          "readOnly": true
        }
      },
      "type": "object",
      "description": "FeatureState describes the state of the Service Mesh Hub Feature as analyzed by the Service Mesh Hub Controller, for the whole Hub."
    },
    "CommonFeatureSpec": {
      "description": "CommonFeatureSpec contains Hub-wide configuration information",
      "properties": {
        "multiclusteringress": {
          "$ref": "MultiClusterIngressFeatureSpec",
          "description": "Multicluster Ingress-specific spec."
        },
        "cloudauditlogging": {
          "description": "Cloud Audit Logging-specific spec.",
          "$ref": "CloudAuditLoggingFeatureSpec"
        }
      },
      "id": "CommonFeatureSpec",
      "type": "object"
    },
    "ConfigManagementMembershipSpec": {
      "properties": {
        "binauthz": {
          "$ref": "ConfigManagementBinauthzConfig",
          "description": "Binauthz conifguration for the cluster."
        },
        "version": {
          "type": "string",
          "description": "Version of ACM installed."
        },
        "hierarchyController": {
          "description": "Hierarchy Controller configuration for the cluster.",
          "$ref": "ConfigManagementHierarchyControllerConfig"
        },
        "policyController": {
          "$ref": "ConfigManagementPolicyController",
          "description": "Policy Controller configuration for the cluster."
        },
        "configSync": {
          "$ref": "ConfigManagementConfigSync",
          "description": "Config Sync configuration for the cluster."
        }
      },
      "id": "ConfigManagementMembershipSpec",
      "description": "Configuration for a single cluster. Intended to parallel the ConfigManagement CR.",
      "type": "object"
    },
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "ConfigManagementInstallError": {
      "id": "ConfigManagementInstallError",
      "description": "Errors pertaining to the installation of ACM",
      "properties": {
        "errorMessage": {
          "description": "A string representing the user facing error message",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConfigManagementHierarchyControllerState": {
      "id": "ConfigManagementHierarchyControllerState",
      "type": "object",
      "description": "State for Hierarchy Controller",
      "properties": {
        "version": {
          "$ref": "ConfigManagementHierarchyControllerVersion",
          "description": "The version for Hierarchy Controller"
        },
        "state": {
          "description": "The deployment state for Hierarchy Controller",
          "$ref": "ConfigManagementHierarchyControllerDeploymentState"
        }
      }
    },
    "MeteringMembershipState": {
      "description": "Metering per-Membership Feature State.",
      "properties": {
        "preciseLastMeasuredClusterVcpuCapacity": {
          "description": "The vCPUs capacity in the cluster according to the most recent measurement (1/1000 precision).",
          "type": "number",
          "format": "float"
        },
        "lastMeasurementTime": {
          "format": "google-datetime",
          "description": "The time stamp of the most recent measurement of the number of vCPUs in the cluster.",
          "type": "string"
        }
      },
      "id": "MeteringMembershipState",
      "type": "object"
    },
    "OperationMetadata": {
      "type": "object",
      "properties": {
        "statusDetail": {
          "type": "string",
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation was created.",
          "readOnly": true
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "cancelRequested": {
          "type": "boolean",
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true
        }
      },
      "description": "Represents the metadata of the long-running operation.",
      "id": "OperationMetadata"
    },
    "GoogleRpcStatus": {
      "type": "object",
      "id": "GoogleRpcStatus",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "ConfigManagementHierarchyControllerConfig": {
      "properties": {
        "enablePodTreeLabels": {
          "type": "boolean",
          "description": "Whether pod tree labels are enabled in this cluster."
        },
        "enableHierarchicalResourceQuota": {
          "type": "boolean",
          "description": "Whether hierarchical resource quota is enabled in this cluster."
        },
        "enabled": {
          "description": "Whether Hierarchy Controller is enabled in this cluster.",
          "type": "boolean"
        }
      },
      "id": "ConfigManagementHierarchyControllerConfig",
      "description": "Configuration for Hierarchy Controller",
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        },
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."
        }
      },
      "type": "object"
    },
    "ConfigManagementGroupVersionKind": {
      "type": "object",
      "properties": {
        "group": {
          "description": "Kubernetes Group",
          "type": "string"
        },
        "version": {
          "description": "Kubernetes Version",
          "type": "string"
        },
        "kind": {
          "description": "Kubernetes Kind",
          "type": "string"
        }
      },
      "id": "ConfigManagementGroupVersionKind",
      "description": "A Kubernetes object's GVK"
    },
    "ConfigManagementSyncState": {
      "type": "object",
      "description": "State indicating an ACM's progress syncing configurations to a cluster",
      "properties": {
        "errors": {
          "items": {
            "$ref": "ConfigManagementSyncError"
          },
          "type": "array",
          "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist."
        },
        "lastSync": {
          "description": "Timestamp of when ACM last successfully synced the repo The time format is specified in https://golang.org/pkg/time/#Time.String This field is being deprecated. Use last_sync_time instead. (b/154053616)",
          "type": "string"
        },
        "code": {
          "enum": [
            "SYNC_CODE_UNSPECIFIED",
            "SYNCED",
            "PENDING",
            "ERROR",
            "NOT_CONFIGURED",
            "NOT_INSTALLED",
            "UNAUTHORIZED",
            "UNREACHABLE"
          ],
          "description": "Sync status code",
          "type": "string",
          "enumDescriptions": [
            "ACM cannot determine a sync code",
            "ACM successfully synced the git Repo with the cluster",
            "ACM is in the progress of syncing a new change",
            "Indicates an error configuring ACM, and user action is required",
            "ACM has been installed (operator manifest deployed), but not configured.",
            "ACM has not been installed (no operator pod found)",
            "Error authorizing with the cluster",
            "Cluster could not be reached"
          ]
        },
        "importToken": {
          "type": "string",
          "description": "Token indicating the state of the importer."
        },
        "sourceToken": {
          "type": "string",
          "description": "Token indicating the state of the repo."
        },
        "lastSyncTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Timestamp type of when ACM last successfully synced the repo"
        },
        "syncToken": {
          "type": "string",
          "description": "Token indicating the state of the syncer."
        }
      },
      "id": "ConfigManagementSyncState"
    },
    "ConfigManagementBinauthzVersion": {
      "id": "ConfigManagementBinauthzVersion",
      "description": "The version of binauthz.",
      "type": "object",
      "properties": {
        "webhookVersion": {
          "type": "string",
          "description": "The version of the binauthz webhook."
        }
      }
    },
    "ConfigManagementPolicyController": {
      "id": "ConfigManagementPolicyController",
      "description": "Configuration for Policy Controller",
      "properties": {
        "auditIntervalSeconds": {
          "format": "int64",
          "type": "string",
          "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether."
        },
        "enabled": {
          "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.",
          "type": "boolean"
        },
        "exemptableNamespaces": {
          "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "templateLibraryInstalled": {
          "description": "Installs the default template library along with Policy Controller.",
          "type": "boolean"
        },
        "referentialRulesEnabled": {
          "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
          "type": "boolean"
        },
        "logDeniesEnabled": {
          "description": "Logs all denies and dry run failures.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ConfigManagementBinauthzState": {
      "description": "State for Binauthz",
      "id": "ConfigManagementBinauthzState",
      "properties": {
        "webhook": {
          "description": "The state of the binauthz webhook.",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "version": {
          "description": "The version of binauthz that is installed.",
          "$ref": "ConfigManagementBinauthzVersion"
        }
      },
      "type": "object"
    },
    "ConfigManagementGitConfig": {
      "id": "ConfigManagementGitConfig",
      "description": "Git repo configuration for a single cluster.",
      "properties": {
        "httpsProxy": {
          "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
          "type": "string"
        },
        "syncBranch": {
          "description": "The branch of the repository to sync from. Default: master.",
          "type": "string"
        },
        "syncRev": {
          "description": "Git revision (tag or hash) to check out. Default HEAD.",
          "type": "string"
        },
        "gcpServiceAccountEmail": {
          "description": "The GCP Service Account Email used for auth when secret_type is gcpServiceAccount.",
          "type": "string"
        },
        "policyDir": {
          "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.",
          "type": "string"
        },
        "syncRepo": {
          "type": "string",
          "description": "The URL of the Git repository to use as the source of truth."
        },
        "secretType": {
          "description": "Type of secret configured for access to the Git repo.",
          "type": "string"
        },
        "syncWaitSecs": {
          "format": "int64",
          "type": "string",
          "description": "Period in seconds between consecutive syncs. Default: 15."
        }
      },
      "type": "object"
    },
    "ConfigManagementHierarchyControllerDeploymentState": {
      "type": "object",
      "description": "Deployment state for Hierarchy Controller",
      "id": "ConfigManagementHierarchyControllerDeploymentState",
      "properties": {
        "hnc": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "The deployment state for open source HNC (e.g. v0.7.0-hc.0)"
        },
        "extension": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "description": "The deployment state for Hierarchy Controller extension (e.g. v0.7.0-hc.1)",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string"
        }
      }
    },
    "ServiceMeshType": {
      "description": "A unique identifier for the type of message. Display_name is intended to be human-readable, code is intended to be machine readable. There should be a one-to-one mapping between display_name and code. (i.e. do not re-use display_names or codes between message types.) See istio.analysis.v1alpha1.AnalysisMessageBase.Type",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "A human-readable name for the message type. e.g. \"InternalError\", \"PodMissingProxy\". This should be the same for all messages of the same type. (This corresponds to the `name` field in open-source Istio.)"
        },
        "code": {
          "type": "string",
          "description": "A 7 character code matching `^IST[0-9]{4}$` or `^ASM[0-9]{4}$`, intended to uniquely identify the message type. (e.g. \"IST0001\" is mapped to the \"InternalError\" message type.)"
        }
      },
      "id": "ServiceMeshType"
    },
    "ConfigManagementConfigSyncDeploymentState": {
      "type": "object",
      "description": "The state of ConfigSync's deployment on a cluster",
      "properties": {
        "reconcilerManager": {
          "description": "Deployment state of reconciler-manager pod",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "importer": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string",
          "description": "Deployment state of the importer pod",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "syncer": {
          "type": "string",
          "description": "Deployment state of the syncer pod",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        },
        "monitor": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Deployment state of the monitor pod"
        },
        "rootReconciler": {
          "description": "Deployment state of root-reconciler",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "gitSync": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string",
          "description": "Deployment state of the git-sync pod"
        }
      },
      "id": "ConfigManagementConfigSyncDeploymentState"
    },
    "ServiceMeshMembershipState": {
      "properties": {
        "analysisMessages": {
          "description": "Output only. Results of running Service Mesh analyzers.",
          "items": {
            "$ref": "ServiceMeshAnalysisMessage"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "description": "MembershipState describes the state of the Service Mesh Hub Feature as analyzed by the Service Mesh Hub Controller, for single Membership.",
      "type": "object",
      "id": "ServiceMeshMembershipState"
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "role": {
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "ListFeaturesResponse": {
      "type": "object",
      "id": "ListFeaturesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListFeatures` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "description": "The list of matching Features",
          "items": {
            "$ref": "Feature"
          }
        }
      },
      "description": "Response message for the `GkeHub.ListFeatures` method."
    },
    "ConfigManagementErrorResource": {
      "description": "Model for a config file in the git repo with an associated Sync error",
      "properties": {
        "resourceNamespace": {
          "description": "Namespace of the resource that is causing an error",
          "type": "string"
        },
        "resourceGvk": {
          "$ref": "ConfigManagementGroupVersionKind",
          "description": "Group/version/kind of the resource that is causing an error"
        },
        "resourceName": {
          "type": "string",
          "description": "Metadata name of the resource that is causing an error"
        },
        "sourcePath": {
          "type": "string",
          "description": "Path in the git repo of the erroneous config"
        }
      },
      "id": "ConfigManagementErrorResource",
      "type": "object"
    },
    "ConfigManagementConfigSyncState": {
      "type": "object",
      "id": "ConfigManagementConfigSyncState",
      "properties": {
        "syncState": {
          "description": "The state of ConfigSync's process to sync configs to a cluster",
          "$ref": "ConfigManagementSyncState"
        },
        "deploymentState": {
          "description": "Information about the deployment of ConfigSync, including the version of the various Pods deployed",
          "$ref": "ConfigManagementConfigSyncDeploymentState"
        },
        "version": {
          "description": "The version of ConfigSync deployed",
          "$ref": "ConfigManagementConfigSyncVersion"
        }
      },
      "description": "State information for ConfigSync"
    },
    "AuditConfig": {
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "id": "AuditConfig"
    },
    "ConfigManagementConfigSync": {
      "id": "ConfigManagementConfigSync",
      "properties": {
        "git": {
          "$ref": "ConfigManagementGitConfig",
          "description": "Git repo configuration for the cluster."
        },
        "sourceFormat": {
          "type": "string",
          "description": "Specifies whether the Config Sync Repo is in “hierarchical” or “unstructured” mode."
        }
      },
      "description": "Configuration for Config Sync",
      "type": "object"
    },
    "ConfigManagementSyncError": {
      "properties": {
        "code": {
          "description": "An ACM defined error code",
          "type": "string"
        },
        "errorMessage": {
          "description": "A description of the error",
          "type": "string"
        },
        "errorResources": {
          "description": "A list of config(s) associated with the error, if any",
          "type": "array",
          "items": {
            "$ref": "ConfigManagementErrorResource"
          }
        }
      },
      "type": "object",
      "id": "ConfigManagementSyncError",
      "description": "An ACM created error representing a problem syncing configurations"
    },
    "CommonFeatureState": {
      "id": "CommonFeatureState",
      "properties": {
        "state": {
          "description": "Output only. The \"running state\" of the Feature in this Hub.",
          "readOnly": true,
          "$ref": "FeatureState"
        },
        "servicemesh": {
          "description": "Service Mesh-specific state.",
          "$ref": "ServiceMeshFeatureState"
        }
      },
      "type": "object",
      "description": "CommonFeatureState contains Hub-wide Feature status information."
    },
    "MembershipFeatureState": {
      "id": "MembershipFeatureState",
      "description": "MembershipFeatureState contains Feature status information for a single Membership.",
      "properties": {
        "configmanagement": {
          "description": "Config Management-specific state.",
          "$ref": "ConfigManagementMembershipState"
        },
        "metering": {
          "description": "Metering-specific spec.",
          "$ref": "MeteringMembershipState"
        },
        "servicemesh": {
          "description": "Service Mesh-specific state.",
          "$ref": "ServiceMeshMembershipState"
        },
        "state": {
          "$ref": "FeatureState",
          "description": "The high-level state of this Feature for a single membership."
        }
      },
      "type": "object"
    },
    "ConfigManagementGatekeeperDeploymentState": {
      "description": "State of Policy Controller installation.",
      "id": "ConfigManagementGatekeeperDeploymentState",
      "type": "object",
      "properties": {
        "gatekeeperControllerManagerState": {
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "Status of gatekeeper-controller-manager pod.",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string"
        },
        "gatekeeperAudit": {
          "type": "string",
          "description": "Status of gatekeeper-audit deployment.",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ]
        }
      }
    },
    "ConfigManagementBinauthzConfig": {
      "description": "Configuration for Binauthz",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Whether binauthz is enabled in this cluster."
        }
      },
      "type": "object",
      "id": "ConfigManagementBinauthzConfig"
    },
    "ServiceMeshAnalysisMessageBase": {
      "properties": {
        "type": {
          "description": "Represents the specific type of a message.",
          "$ref": "ServiceMeshType"
        },
        "documentationUrl": {
          "type": "string",
          "description": "A url pointing to the Service Mesh or Istio documentation for this specific error type."
        },
        "level": {
          "type": "string",
          "enum": [
            "LEVEL_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "enumDescriptions": [
            "Illegal. Same istio.analysis.v1alpha1.AnalysisMessageBase.Level.UNKNOWN.",
            "ERROR represents a misconfiguration that must be fixed.",
            "WARNING represents a misconfiguration that should be fixed.",
            "INFO represents an informational finding."
          ],
          "description": "Represents how severe a message is."
        }
      },
      "description": "AnalysisMessageBase describes some common information that is needed for all messages.",
      "type": "object",
      "id": "ServiceMeshAnalysisMessageBase"
    },
    "Expr": {
      "properties": {
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        }
      },
      "id": "Expr",
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "type": "object"
    },
    "ConfigManagementHierarchyControllerVersion": {
      "type": "object",
      "properties": {
        "hnc": {
          "type": "string",
          "description": "Version for open source HNC"
        },
        "extension": {
          "type": "string",
          "description": "Version for Hierarchy Controller extension"
        }
      },
      "id": "ConfigManagementHierarchyControllerVersion",
      "description": "Version for Hierarchy Controller"
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "type": "object",
      "description": "Response message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ConfigManagementOperatorState": {
      "id": "ConfigManagementOperatorState",
      "type": "object",
      "properties": {
        "errors": {
          "description": "Install errors.",
          "items": {
            "$ref": "ConfigManagementInstallError"
          },
          "type": "array"
        },
        "deploymentState": {
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ],
          "description": "The state of the Operator's deployment"
        },
        "version": {
          "type": "string",
          "description": "The semenatic version number of the operator"
        }
      },
      "description": "State information for an ACM's Operator"
    },
    "ConfigManagementConfigSyncVersion": {
      "id": "ConfigManagementConfigSyncVersion",
      "description": "Specific versioning information pertaining to ConfigSync's Pods",
      "type": "object",
      "properties": {
        "importer": {
          "description": "Version of the deployed importer pod",
          "type": "string"
        },
        "rootReconciler": {
          "type": "string",
          "description": "Version of the deployed reconciler container in root-reconciler pod"
        },
        "monitor": {
          "type": "string",
          "description": "Version of the deployed monitor pod"
        },
        "reconcilerManager": {
          "description": "Version of the deployed reconciler-manager pod",
          "type": "string"
        },
        "syncer": {
          "type": "string",
          "description": "Version of the deployed syncer pod"
        },
        "gitSync": {
          "type": "string",
          "description": "Version of the deployed git-sync pod"
        }
      }
    },
    "ConfigManagementPolicyControllerVersion": {
      "type": "object",
      "description": "The build version of Gatekeeper Policy Controller is using.",
      "properties": {
        "version": {
          "type": "string",
          "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number."
        }
      },
      "id": "ConfigManagementPolicyControllerVersion"
    },
    "MembershipFeatureSpec": {
      "id": "MembershipFeatureSpec",
      "properties": {
        "configmanagement": {
          "$ref": "ConfigManagementMembershipSpec",
          "description": "Config Management-specific spec."
        }
      },
      "type": "object",
      "description": "MembershipFeatureSpec contains configuration information for a single Membership."
    },
    "ConfigManagementPolicyControllerState": {
      "id": "ConfigManagementPolicyControllerState",
      "properties": {
        "deploymentState": {
          "description": "The state about the policy controller installation.",
          "$ref": "ConfigManagementGatekeeperDeploymentState"
        },
        "version": {
          "$ref": "ConfigManagementPolicyControllerVersion",
          "description": "The version of Gatekeeper Policy Controller deployed."
        }
      },
      "type": "object",
      "description": "State for PolicyControllerState."
    },
    "ServiceMeshAnalysisMessage": {
      "description": "AnalysisMessage is a single message produced by an analyzer, and it used to communicate to the end user about the state of their Service Mesh configuration.",
      "properties": {
        "messageBase": {
          "$ref": "ServiceMeshAnalysisMessageBase",
          "description": "Details common to all types of Istio and ServiceMesh analysis messages."
        },
        "description": {
          "type": "string",
          "description": "A human readable description of what the error means. It is suitable for non-internationalize display purposes."
        },
        "args": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "A UI can combine these args with a template (based on message_base.type) to produce an internationalized message."
        },
        "resourcePaths": {
          "type": "array",
          "description": "A list of strings specifying the resource identifiers that were the cause of message generation. A \"path\" here may be: * MEMBERSHIP_ID if the cause is a specific member cluster * MEMBERSHIP_ID/(NAMESPACE\\/)?RESOURCETYPE/NAME if the cause is a resource in a cluster",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "ServiceMeshAnalysisMessage"
    },
    "Policy": {
      "type": "object",
      "id": "Policy",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "id": "CancelOperationRequest",
      "properties": {}
    },
    "AuditLogConfig": {
      "properties": {
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        },
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ]
        }
      },
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "AuditLogConfig"
    },
    "MultiClusterIngressFeatureSpec": {
      "type": "object",
      "description": "FeatureSpec contains the input for the MultiClusterIngress feature.",
      "properties": {
        "configMembership": {
          "description": "Fully-qualified Membership name which hosts the MultiClusterIngress CRD. Example: `projects/foo-proj/locations/global/memberships/bar`",
          "type": "string"
        }
      },
      "id": "MultiClusterIngressFeatureSpec"
    },
    "ConfigManagementMembershipState": {
      "id": "ConfigManagementMembershipState",
      "type": "object",
      "description": "State for Anthos Config Management",
      "properties": {
        "policyControllerState": {
          "description": "PolicyController status",
          "$ref": "ConfigManagementPolicyControllerState"
        },
        "operatorState": {
          "description": "Current install status of ACM's Operator",
          "$ref": "ConfigManagementOperatorState"
        },
        "binauthzState": {
          "description": "Binauthz status",
          "$ref": "ConfigManagementBinauthzState"
        },
        "membershipSpec": {
          "description": "Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipSpec in the FeatureSpec represents the intended state",
          "$ref": "ConfigManagementMembershipSpec"
        },
        "clusterName": {
          "description": "The user-defined name for the cluster used by ClusterSelectors to group clusters together. This should match Membership's membership_name, unless the user installed ACM on the cluster manually prior to enabling the ACM hub feature. Unique within a Anthos Config Management installation.",
          "type": "string"
        },
        "hierarchyControllerState": {
          "description": "Hierarchy Controller status",
          "$ref": "ConfigManagementHierarchyControllerState"
        },
        "configSyncState": {
          "description": "Current sync status",
          "$ref": "ConfigManagementConfigSyncState"
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "type": "object",
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      }
    },
    "CloudAuditLoggingFeatureSpec": {
      "type": "object",
      "id": "CloudAuditLoggingFeatureSpec",
      "properties": {
        "allowlistedServiceAccounts": {
          "type": "array",
          "description": "Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer's entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Spec for Audit Logging Allowlisting."
    },
    "Feature": {
      "description": "Feature represents the settings and status of any Hub Feature.",
      "id": "Feature",
      "properties": {
        "name": {
          "description": "Output only. The full, unique name of this Feature resource in the format `projects/*/locations/global/features/*`.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. When the Feature resource was last updated.",
          "format": "google-datetime"
        },
        "deleteTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. When the Feature resource was deleted."
        },
        "spec": {
          "description": "Optional. Hub-wide Feature configuration. If this Feature does not support any Hub-wide configuration, this field may be unused.",
          "$ref": "CommonFeatureSpec"
        },
        "state": {
          "description": "Output only. The Hub-wide Feature state.",
          "$ref": "CommonFeatureState",
          "readOnly": true
        },
        "resourceState": {
          "readOnly": true,
          "$ref": "FeatureResourceState",
          "description": "Output only. State of the Feature resource itself."
        },
        "membershipStates": {
          "type": "object",
          "readOnly": true,
          "description": "Output only. Membership-specific Feature status. If this Feature does report any per-Membership status, this field may be unused. The keys indicate which Membership the state is for, in the form: projects/{p}/locations/{l}/memberships/{m} Where {p} is the project number, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} MUST match the Feature's project number.",
          "additionalProperties": {
            "$ref": "MembershipFeatureState"
          }
        },
        "membershipSpecs": {
          "additionalProperties": {
            "$ref": "MembershipFeatureSpec"
          },
          "description": "Optional. Membership-specific configuration for this Feature. If this Feature does not support any per-Membership configuration, this field may be unused. The keys indicate which Membership the configuration is for, in the form: projects/{p}/locations/{l}/memberships/{m} Where {p} is the project number, {l} is a valid location and {m} is a valid Membership in this project at that location. {p} MUST match the Feature's project number.",
          "type": "object"
        },
        "labels": {
          "description": "GCP labels for this Feature.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. When the Feature resource was created.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "id": "Location",
      "properties": {
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        }
      }
    },
    "FeatureState": {
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time this status and any related Feature-specific details were updated."
        },
        "code": {
          "type": "string",
          "description": "The high-level, machine-readable status of this Feature.",
          "enumDescriptions": [
            "Unknown or not set.",
            "The Feature is operating normally.",
            "The Feature has encountered an issue, and is operating in a degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information.",
            "The Feature is not operating or is in a severely degraded state. The Feature may need intervention to return to normal operation. See the description and any associated Feature-specific details for more information."
          ],
          "enum": [
            "CODE_UNSPECIFIED",
            "OK",
            "WARNING",
            "ERROR"
          ]
        },
        "description": {
          "description": "A human-readable description of the current status.",
          "type": "string"
        }
      },
      "description": "FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.",
      "id": "FeatureState",
      "type": "object"
    }
  },
  "rootUrl": "https://gkehub.googleapis.com/",
  "baseUrl": "https://gkehub.googleapis.com/",
  "batchPath": "batch",
  "title": "GKE Hub",
  "protocol": "rest",
  "discoveryVersion": "v1",
  "servicePath": "",
  "revision": "20210409",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "path": "v1alpha/{+name}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "gkehub.projects.locations.get",
              "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}",
              "description": "Gets information about a location.",
              "response": {
                "$ref": "Location"
              },
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              }
            },
            "list": {
              "parameters": {
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of results to return. If not set, the service selects a default.",
                  "location": "query",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha/{+name}/locations",
              "id": "gkehub.projects.locations.list",
              "flatPath": "v1alpha/projects/{projectsId}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "httpMethod": "GET",
              "description": "Lists information about the supported locations for this service."
            }
          },
          "resources": {
            "global": {
              "resources": {
                "features": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1alpha/projects/{projectsId}/locations/global/features",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "The parent (project and location) where the Features will be listed. Specified in the format `projects/*/locations/global`.",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "location": "path",
                          "required": true
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned."
                        },
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "One or more fields to compare and use to sort the output. See https://google.aip.dev/132#ordering."
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources.",
                          "location": "query"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Lists Features that match the filter expression, following the syntax outlined in https://google.aip.dev/160. Examples: - Feature with the name \"servicemesh\" in project \"foo-proj\": name = \"projects/foo-proj/locations/global/features/servicemesh\" - Features that have a label called `foo`: labels.foo:* - Features that have a label called `foo` whose value is `bar`: labels.foo = bar",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Features in a given project and location.",
                      "path": "v1alpha/{+parent}/features",
                      "response": {
                        "$ref": "ListFeaturesResponse"
                      },
                      "id": "gkehub.projects.locations.global.features.list"
                    },
                    "create": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "request": {
                        "$ref": "Feature"
                      },
                      "description": "Adds a new Feature.",
                      "httpMethod": "POST",
                      "id": "gkehub.projects.locations.global.features.create",
                      "parameters": {
                        "requestId": {
                          "type": "string",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "featureId": {
                          "description": "The ID of the feature to create.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global$",
                          "required": true,
                          "description": "The parent (project and location) where the Feature will be created. Specified in the format `projects/*/locations/global`."
                        }
                      },
                      "flatPath": "v1alpha/projects/{projectsId}/locations/global/features",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1alpha/{+parent}/features",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gkehub.projects.locations.global.features.get",
                      "flatPath": "v1alpha/projects/{projectsId}/locations/global/features/{featuresId}",
                      "response": {
                        "$ref": "Feature"
                      },
                      "description": "Gets details of a single Feature.",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "description": "The Feature resource name in the format `projects/*/locations/global/features/*`",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/global/features/[^/]+$"
                        }
                      },
                      "path": "v1alpha/{+name}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "patch": {
                      "id": "gkehub.projects.locations.global.features.patch",
                      "description": "Updates an existing Feature.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "PATCH",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global/features/[^/]+$",
                          "description": "The Feature resource name in the format `projects/*/locations/global/features/*`.",
                          "required": true
                        },
                        "requestId": {
                          "type": "string",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query"
                        },
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "description": "Mask of fields to update.",
                          "format": "google-fieldmask"
                        }
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1alpha/{+name}",
                      "request": {
                        "$ref": "Feature"
                      },
                      "flatPath": "v1alpha/projects/{projectsId}/locations/global/features/{featuresId}"
                    },
                    "delete": {
                      "id": "gkehub.projects.locations.global.features.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1alpha/projects/{projectsId}/locations/global/features/{featuresId}",
                      "path": "v1alpha/{+name}",
                      "response": {
                        "$ref": "Operation"
                      },
                      "description": "Removes a Feature.",
                      "parameters": {
                        "force": {
                          "description": "If set to true, the delete will ignore any outstanding resources for this Feature (that is, `FeatureState.has_resources` is set to true). These resources will NOT be cleaned up or modified in any way.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "name": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/global/features/[^/]+$",
                          "description": "The Feature resource name in the format `projects/*/locations/global/features/*`.",
                          "required": true
                        },
                        "requestId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE"
                    }
                  }
                }
              }
            },
            "features": {
              "methods": {
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "httpMethod": "POST",
                  "id": "gkehub.projects.locations.features.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  }
                },
                "getIamPolicy": {
                  "httpMethod": "GET",
                  "id": "gkehub.projects.locations.features.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    }
                  },
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy"
                },
                "testIamPermissions": {
                  "id": "gkehub.projects.locations.features.testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/features/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "get": {
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "gkehub.projects.locations.operations.get",
                  "path": "v1alpha/{+name}"
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1alpha/{+name}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "id": "gkehub.projects.locations.operations.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "description": "The standard list page size.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    },
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha/{+name}/operations",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "gkehub.projects.locations.operations.list",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  }
                },
                "cancel": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v1alpha/{+name}:cancel",
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "id": "gkehub.projects.locations.operations.cancel",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "memberships": {
              "methods": {
                "getIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$"
                    },
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy",
                  "path": "v1alpha/{+resource}:getIamPolicy",
                  "id": "gkehub.projects.locations.memberships.getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "id": "gkehub.projects.locations.memberships.testIamPermissions",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions",
                  "path": "v1alpha/{+resource}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "setIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/memberships/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "type": "string"
                    }
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "flatPath": "v1alpha/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy",
                  "id": "gkehub.projects.locations.memberships.setIamPolicy",
                  "httpMethod": "POST",
                  "path": "v1alpha/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerName": "Google",
  "version": "v1alpha",
  "fullyEncodeReservedExpansion": true,
  "canonicalName": "GKE Hub",
  "name": "gkehub",
  "documentationLink": "https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster",
  "version_module": true
}
