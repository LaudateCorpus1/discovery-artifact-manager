{
  "version": "v1alpha1",
  "resources": {
    "workspaces": {
      "methods": {
        "list": {
          "id": "area120tables.workspaces.list",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/spreadsheets.readonly",
            "https://www.googleapis.com/auth/tables"
          ],
          "response": {
            "$ref": "ListWorkspacesResponse"
          },
          "path": "v1alpha1/workspaces",
          "flatPath": "v1alpha1/workspaces",
          "parameterOrder": [],
          "description": "Lists workspaces for the user.",
          "parameters": {
            "pageSize": {
              "format": "int32",
              "description": "The maximum number of workspaces to return. The service may return fewer than this value. If unspecified, at most 10 workspaces are returned. The maximum value is 25; values above 25 are coerced to 25.",
              "type": "integer",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A page token, received from a previous `ListWorkspaces` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListWorkspaces` must match the call that provided the page token."
            }
          }
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/spreadsheets.readonly",
            "https://www.googleapis.com/auth/tables"
          ],
          "description": "Gets a workspace. Returns NOT_FOUND if the workspace does not exist.",
          "path": "v1alpha1/{+name}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^workspaces/[^/]+$",
              "required": true,
              "description": "Required. The name of the workspace to retrieve. Format: workspaces/{workspace}",
              "location": "path"
            }
          },
          "id": "area120tables.workspaces.get",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Workspace"
          },
          "flatPath": "v1alpha1/workspaces/{workspacesId}"
        }
      }
    },
    "tables": {
      "methods": {
        "get": {
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/tables/{tablesId}",
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^tables/[^/]+$",
              "location": "path",
              "description": "Required. The name of the table to retrieve. Format: tables/{table}",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/spreadsheets.readonly",
            "https://www.googleapis.com/auth/tables"
          ],
          "response": {
            "$ref": "Table"
          },
          "parameterOrder": [
            "name"
          ],
          "description": "Gets a table. Returns NOT_FOUND if the table does not exist.",
          "id": "area120tables.tables.get",
          "httpMethod": "GET"
        },
        "list": {
          "id": "area120tables.tables.list",
          "response": {
            "$ref": "ListTablesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/drive",
            "https://www.googleapis.com/auth/drive.file",
            "https://www.googleapis.com/auth/drive.readonly",
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/spreadsheets.readonly",
            "https://www.googleapis.com/auth/tables"
          ],
          "flatPath": "v1alpha1/tables",
          "httpMethod": "GET",
          "path": "v1alpha1/tables",
          "description": "Lists tables for the user.",
          "parameters": {
            "pageSize": {
              "format": "int32",
              "description": "The maximum number of tables to return. The service may return fewer than this value. If unspecified, at most 20 tables are returned. The maximum value is 100; values above 100 are coerced to 100.",
              "location": "query",
              "type": "integer"
            },
            "orderBy": {
              "location": "query",
              "type": "string",
              "description": "Optional. Sorting order for the list of tables on createTime/updateTime."
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A page token, received from a previous `ListTables` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTables` must match the call that provided the page token."
            }
          },
          "parameterOrder": []
        }
      },
      "resources": {
        "rows": {
          "methods": {
            "list": {
              "httpMethod": "GET",
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "Optional. Filter to only include resources matching the requirements. For more information, see [Filtering list results](https://support.google.com/area120-tables/answer/10503371).",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of rows to return. The service may return fewer than this value. If unspecified, at most 50 rows are returned. The maximum value is 1,000; values above 1,000 are coerced to 1,000."
                },
                "orderBy": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. Sorting order for the list of rows on createTime/updateTime."
                },
                "parent": {
                  "pattern": "^tables/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The parent table. Format: tables/{table}"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A page token, received from a previous `ListRows` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRows` must match the call that provided the page token.",
                  "location": "query"
                },
                "view": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ],
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ]
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/drive.readonly",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/spreadsheets.readonly",
                "https://www.googleapis.com/auth/tables"
              ],
              "id": "area120tables.tables.rows.list",
              "response": {
                "$ref": "ListRowsResponse"
              },
              "path": "v1alpha1/{+parent}/rows",
              "description": "Lists rows in a table. Returns NOT_FOUND if the table does not exist.",
              "flatPath": "v1alpha1/tables/{tablesId}/rows",
              "parameterOrder": [
                "parent"
              ]
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "description": "Gets a row. Returns NOT_FOUND if the row does not exist in the table.",
              "response": {
                "$ref": "Row"
              },
              "id": "area120tables.tables.rows.get",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the row to retrieve. Format: tables/{table}/rows/{row}",
                  "type": "string",
                  "pattern": "^tables/[^/]+/rows/[^/]+$",
                  "required": true
                },
                "view": {
                  "location": "query",
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ],
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/drive.readonly",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/spreadsheets.readonly",
                "https://www.googleapis.com/auth/tables"
              ],
              "path": "v1alpha1/{+name}"
            },
            "delete": {
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ],
              "id": "area120tables.tables.rows.delete",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "name": {
                  "description": "Required. The name of the row to delete. Format: tables/{table}/rows/{row}",
                  "type": "string",
                  "required": true,
                  "pattern": "^tables/[^/]+/rows/[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}",
              "description": "Deletes a row."
            },
            "batchCreate": {
              "request": {
                "$ref": "BatchCreateRowsRequest"
              },
              "id": "area120tables.tables.rows.batchCreate",
              "parameters": {
                "parent": {
                  "description": "Required. The parent table where the rows will be created. Format: tables/{table}",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^tables/[^/]+$"
                }
              },
              "description": "Creates multiple rows.",
              "path": "v1alpha1/{+parent}/rows:batchCreate",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ],
              "response": {
                "$ref": "BatchCreateRowsResponse"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/tables/{tablesId}/rows:batchCreate"
            },
            "patch": {
              "path": "v1alpha1/{+name}",
              "description": "Updates a row.",
              "request": {
                "$ref": "Row"
              },
              "id": "area120tables.tables.rows.patch",
              "parameters": {
                "name": {
                  "description": "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.",
                  "pattern": "^tables/[^/]+/rows/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "The list of fields to update.",
                  "location": "query"
                },
                "view": {
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "type": "string",
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "location": "query",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ]
                }
              },
              "flatPath": "v1alpha1/tables/{tablesId}/rows/{rowsId}",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ],
              "response": {
                "$ref": "Row"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "parameters": {
                "view": {
                  "enumDescriptions": [
                    "Defaults to user entered text.",
                    "Uses internally generated column id to identify values."
                  ],
                  "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "VIEW_UNSPECIFIED",
                    "COLUMN_ID_VIEW"
                  ]
                },
                "parent": {
                  "pattern": "^tables/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The parent table where this row will be created. Format: tables/{table}",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "Row"
              },
              "id": "area120tables.tables.rows.create",
              "path": "v1alpha1/{+parent}/rows",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/tables/{tablesId}/rows",
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ],
              "request": {
                "$ref": "Row"
              },
              "description": "Creates a row."
            },
            "batchDelete": {
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^tables/[^/]+$",
                  "description": "Required. The parent table shared by all rows being deleted. Format: tables/{table}"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/tables/{tablesId}/rows:batchDelete",
              "httpMethod": "POST",
              "request": {
                "$ref": "BatchDeleteRowsRequest"
              },
              "id": "area120tables.tables.rows.batchDelete",
              "path": "v1alpha1/{+parent}/rows:batchDelete",
              "description": "Deletes multiple rows.",
              "response": {
                "$ref": "Empty"
              }
            },
            "batchUpdate": {
              "description": "Updates multiple rows.",
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent table shared by all rows being updated. Format: tables/{table}",
                  "location": "path",
                  "pattern": "^tables/[^/]+$"
                }
              },
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/rows:batchUpdate",
              "request": {
                "$ref": "BatchUpdateRowsRequest"
              },
              "response": {
                "$ref": "BatchUpdateRowsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/drive",
                "https://www.googleapis.com/auth/drive.file",
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/tables"
              ],
              "parameterOrder": [
                "parent"
              ],
              "id": "area120tables.tables.rows.batchUpdate",
              "flatPath": "v1alpha1/tables/{tablesId}/rows:batchUpdate"
            }
          }
        }
      }
    }
  },
  "baseUrl": "https://area120tables.googleapis.com/",
  "parameters": {
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "alt": {
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "description": "Data format for response.",
      "default": "json"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tables": {
          "description": "See, edit, create, and delete your tables in Tables by Area 120"
        },
        "https://www.googleapis.com/auth/drive.file": {
          "description": "See, edit, create, and delete only the specific Google Drive files you use with this app"
        },
        "https://www.googleapis.com/auth/drive": {
          "description": "See, edit, create, and delete all of your Google Drive files"
        },
        "https://www.googleapis.com/auth/drive.readonly": {
          "description": "See and download all your Google Drive files"
        },
        "https://www.googleapis.com/auth/spreadsheets.readonly": {
          "description": "View your Google Spreadsheets"
        },
        "https://www.googleapis.com/auth/spreadsheets": {
          "description": "See, edit, create, and delete your spreadsheets in Google Drive"
        }
      }
    }
  },
  "mtlsRootUrl": "https://area120tables.mtls.googleapis.com/",
  "revision": "20210412",
  "title": "Area120 Tables API",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "basePath": "",
  "ownerName": "Google",
  "version_module": true,
  "canonicalName": "Area120 Tables",
  "name": "area120tables",
  "id": "area120tables:v1alpha1",
  "description": "",
  "rootUrl": "https://area120tables.googleapis.com/",
  "documentationLink": "https://support.google.com/area120-tables/answer/10011390",
  "schemas": {
    "Empty": {
      "properties": {},
      "id": "Empty",
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "LabeledItem": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Display string as entered by user.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Internal id associated with the item."
        }
      },
      "description": "A single item in a labeled column.",
      "id": "LabeledItem"
    },
    "Table": {
      "id": "Table",
      "description": "A single table. NextId: 7",
      "type": "object",
      "properties": {
        "savedViews": {
          "type": "array",
          "items": {
            "$ref": "SavedView"
          },
          "description": "Saved views for this table."
        },
        "columns": {
          "items": {
            "$ref": "ColumnDescription"
          },
          "description": "List of columns in this table. Order of columns matches the display order.",
          "type": "array"
        },
        "name": {
          "description": "The resource name of the table. Table names have the form `tables/{table}`.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Time when the table was created.",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Time when the table was last updated excluding updates to individual rows",
          "type": "string",
          "format": "google-datetime"
        },
        "displayName": {
          "description": "The human readable title of the table.",
          "type": "string"
        }
      }
    },
    "BatchUpdateRowsRequest": {
      "properties": {
        "requests": {
          "items": {
            "$ref": "UpdateRowRequest"
          },
          "type": "array",
          "description": "Required. The request messages specifying the rows to update. A maximum of 500 rows can be modified in a single batch."
        }
      },
      "type": "object",
      "description": "Request message for TablesService.BatchUpdateRows.",
      "id": "BatchUpdateRowsRequest"
    },
    "UpdateRowRequest": {
      "type": "object",
      "properties": {
        "view": {
          "type": "string",
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
          "enumDescriptions": [
            "Defaults to user entered text.",
            "Uses internally generated column id to identify values."
          ],
          "enum": [
            "VIEW_UNSPECIFIED",
            "COLUMN_ID_VIEW"
          ]
        },
        "row": {
          "description": "Required. The row to update.",
          "$ref": "Row"
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "The list of fields to update.",
          "type": "string"
        }
      },
      "description": "Request message for TablesService.UpdateRow.",
      "id": "UpdateRowRequest"
    },
    "RelationshipDetails": {
      "description": "Details about a relationship column.",
      "type": "object",
      "properties": {
        "linkedTable": {
          "description": "The name of the table this relationship is linked to.",
          "type": "string"
        }
      },
      "id": "RelationshipDetails"
    },
    "Workspace": {
      "id": "Workspace",
      "type": "object",
      "description": "A single workspace.",
      "properties": {
        "tables": {
          "description": "The list of tables in the workspace.",
          "type": "array",
          "items": {
            "$ref": "Table"
          }
        },
        "name": {
          "type": "string",
          "description": "The resource name of the workspace. Workspace names have the form `workspaces/{workspace}`."
        },
        "createTime": {
          "type": "string",
          "description": "Time when the workspace was created.",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time when the workspace was last updated."
        },
        "displayName": {
          "type": "string",
          "description": "The human readable title of the workspace."
        }
      }
    },
    "BatchCreateRowsRequest": {
      "id": "BatchCreateRowsRequest",
      "properties": {
        "requests": {
          "items": {
            "$ref": "CreateRowRequest"
          },
          "type": "array",
          "description": "Required. The request message specifying the rows to create. A maximum of 500 rows can be created in a single batch."
        }
      },
      "type": "object",
      "description": "Request message for TablesService.BatchCreateRows."
    },
    "SavedView": {
      "id": "SavedView",
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name of the saved view."
        },
        "id": {
          "type": "string",
          "description": "Internal id associated with the saved view."
        }
      },
      "description": "A saved view of a table. NextId: 3",
      "type": "object"
    },
    "ColumnDescription": {
      "properties": {
        "dataType": {
          "description": "Data type of the column Supported types are auto_id, boolean, boolean_list, creator, create_timestamp, date, dropdown, location, integer, integer_list, number, number_list, person, person_list, tags, check_list, text, text_list, update_timestamp, updater, relationship, file_attachment_list. These types directly map to the column types supported on Tables website.",
          "type": "string"
        },
        "lookupDetails": {
          "description": "Optional. Indicates that this is a lookup column whose value is derived from the relationship column specified in the details. Lookup columns can not be updated directly. To change the value you must update the associated relationship column.",
          "$ref": "LookupDetails"
        },
        "relationshipDetails": {
          "description": "Optional. Additional details about a relationship column. Specified when data_type is relationship.",
          "$ref": "RelationshipDetails"
        },
        "name": {
          "description": "column name",
          "type": "string"
        },
        "id": {
          "description": "Internal id for a column.",
          "type": "string"
        },
        "labels": {
          "type": "array",
          "description": "Optional. Range of labeled values for the column. Some columns like tags and drop-downs limit the values to a set of possible values. We return the range of values in such cases to help clients implement better user data validation.",
          "items": {
            "$ref": "LabeledItem"
          }
        }
      },
      "description": "Details on a column in the table.",
      "id": "ColumnDescription",
      "type": "object"
    },
    "ListRowsResponse": {
      "description": "Response message for TablesService.ListRows.",
      "properties": {
        "rows": {
          "type": "array",
          "description": "The rows from the specified table.",
          "items": {
            "$ref": "Row"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages.",
          "type": "string"
        }
      },
      "id": "ListRowsResponse",
      "type": "object"
    },
    "ListTablesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."
        },
        "tables": {
          "description": "The list of tables.",
          "type": "array",
          "items": {
            "$ref": "Table"
          }
        }
      },
      "id": "ListTablesResponse",
      "description": "Response message for TablesService.ListTables."
    },
    "BatchDeleteRowsRequest": {
      "id": "BatchDeleteRowsRequest",
      "type": "object",
      "properties": {
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Required. The names of the rows to delete. All rows must belong to the parent table or else the entire batch will fail. A maximum of 500 rows can be deleted in a batch. Format: tables/{table}/rows/{row}"
        }
      },
      "description": "Request message for TablesService.BatchDeleteRows"
    },
    "BatchCreateRowsResponse": {
      "id": "BatchCreateRowsResponse",
      "type": "object",
      "properties": {
        "rows": {
          "items": {
            "$ref": "Row"
          },
          "type": "array",
          "description": "The created rows."
        }
      },
      "description": "Response message for TablesService.BatchCreateRows."
    },
    "CreateRowRequest": {
      "properties": {
        "parent": {
          "type": "string",
          "description": "Required. The parent table where this row will be created. Format: tables/{table}"
        },
        "row": {
          "$ref": "Row",
          "description": "Required. The row to create."
        },
        "view": {
          "description": "Optional. Column key to use for values in the row. Defaults to user entered name.",
          "enum": [
            "VIEW_UNSPECIFIED",
            "COLUMN_ID_VIEW"
          ],
          "enumDescriptions": [
            "Defaults to user entered text.",
            "Uses internally generated column id to identify values."
          ],
          "type": "string"
        }
      },
      "id": "CreateRowRequest",
      "description": "Request message for TablesService.CreateRow.",
      "type": "object"
    },
    "Row": {
      "description": "A single row in a table.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Time when the row was last updated.",
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time when the row was created."
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "any"
          },
          "description": "The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request."
        }
      },
      "id": "Row"
    },
    "BatchUpdateRowsResponse": {
      "description": "Response message for TablesService.BatchUpdateRows.",
      "properties": {
        "rows": {
          "items": {
            "$ref": "Row"
          },
          "type": "array",
          "description": "The updated rows."
        }
      },
      "id": "BatchUpdateRowsResponse",
      "type": "object"
    },
    "LookupDetails": {
      "type": "object",
      "description": "Details about a lookup column whose value comes from the associated relationship.",
      "properties": {
        "relationshipColumn": {
          "description": "The name of the relationship column associated with the lookup.",
          "type": "string"
        },
        "relationshipColumnId": {
          "type": "string",
          "description": "The id of the relationship column."
        }
      },
      "id": "LookupDetails"
    },
    "ListWorkspacesResponse": {
      "properties": {
        "workspaces": {
          "description": "The list of workspaces.",
          "type": "array",
          "items": {
            "$ref": "Workspace"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."
        }
      },
      "type": "object",
      "id": "ListWorkspacesResponse",
      "description": "Response message for TablesService.ListWorkspaces."
    }
  },
  "fullyEncodeReservedExpansion": true,
  "servicePath": "",
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "kind": "discovery#restDescription",
  "protocol": "rest",
  "discoveryVersion": "v1"
}
